# AUTOMATICALLY GENERATED BY PROTO CONVERSION

# A grid-based local grid structure, which can represent different kinds of data, such as terrain
# or obstacle data.

# The human readable string name that is used to identify the type of local grid data.
string local_grid_type_name

# The time at which the local grid data was computed and last valid at.
builtin_interfaces/Time acquisition_time
bool acquisition_time_is_set

# A tree-based collection of transformations, which will include the transformations to each of
# the returned local grids in addition to transformations to the common frames ("vision", "body", "odom").
# All transforms within the snapshot are at the acquistion time of the local grid.
bosdyn_msgs/FrameTreeSnapshot transforms_snapshot
bool transforms_snapshot_is_set

# The frame name for the local grid data. This frame refers to the corner of cell (0, 0), such that
# the map data is in the +x, +y quadrant.
# The cell data is packed in x-y order, so the cell at:
#   data[xi + extent.num_cells_x * yj]
# has its center at position:
#   {(xi + 0.5) * extent.cell_size, (yj + 0.5) * extent.cell_size}.
string frame_name_local_grid_data

# Location, size and resolution of the local grid.
bosdyn_msgs/LocalGridExtent extent
bool extent_is_set

# Describes the data type of a cell.
# The data type of all individual cells in the local grid.
bosdyn_msgs/LocalGridCellFormat cell_format

# Encoding used for storing the local grid.
# The encoding for the 'data' field of the local grid message.
bosdyn_msgs/LocalGridEncoding encoding

# The encoded local grid representation.
# Cells are encoded according to the encoding enum, and are stored in in row-major order (x-major).
# This means that the data field has data entered row by row. The grid cell located at (i, j) will be
# at the (index = i * num_cells_x + j) within the data array.
byte[] data

# RLE pixel repetition counts: use data[i] repeated rle_counts[i] times when decoding the
# bytes data field.
int32[] rle_counts

# The scale for the cell value data; only valid if it is a non-zero number.
float64 cell_value_scale

# A fixed value offset that is applied to each value of the cell data.
# Actual values in local grid are: (({value from data} * cell_value_scale) + cell_value_offset).
float64 cell_value_offset
