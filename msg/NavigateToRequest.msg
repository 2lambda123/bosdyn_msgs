# AUTOMATICALLY GENERATED BY PROTO CONVERSION

# The NavigateToRequest can be used to command GraphNav to drive the robot to a specific waypoint.
# GraphNav will plan a path through the map which most efficiently gets the robot to the specified goal waypoint.
# Parameters are provided which influence how GraphNav will generate and follow the path.
# This RPC returns immediately after the request is processed. It does not block until GraphNav completes the path
# to the goal waypoint. The user is expected to periodically check the status of the NavigateTo command using
# the NavigationFeedbackRequest RPC.

# Common request header.
bosdyn_msgs/RequestHeader header
bool header_is_set

# The Leases to show ownership of the robot and the graph.
bosdyn_msgs/Lease[] leases

# ID of the waypoint to go to.
string destination_waypoint_id

# Preferences on how to pick the route.
bosdyn_msgs/RouteGenParams route_params
bool route_params_is_set
# Parameters that define how to traverse and end the route.
bosdyn_msgs/TravelParams travel_params
bool travel_params_is_set

# The timestamp (in robot time) that the navigation command is valid until.
builtin_interfaces/Time end_time
bool end_time_is_set

# Identifier provided by the time sync service to verify time sync between robot and client.
string clock_identifier

# If provided, graph_nav will move the robot to an SE2 pose relative to the waypoint.
# Note that the robot will treat this as a simple goto request. It will first arrive at the
# destination waypoint, and then travel in a straight line from the destination waypoint to the
# offset goal, attempting to avoid obstacles along the way.
bosdyn_msgs/SE2Pose destination_waypoint_tform_body_goal
bool destination_waypoint_tform_body_goal_is_set

# Unique identifier for the command. If 0, this is a new command, otherwise it is a continuation
# of an existing command. If this is a continuation of an existing command, all parameters will be
# ignored, and the old parameters will be preserved.
uint32 command_id
