# AUTOMATICALLY GENERATED BY PROTO CONVERSION

# A description of a series of data blocks.
# These data blocks may either represent binary messages of a variable size, or they may
#  represent a sequence of samples of POD data samples: single/vector/matrix/... of integer
#  or floating-point values.

# This index for the series is unique within the data file.
uint32 series_index

# This is the globally unique {key -> value} mapping to identify the series.
bosdyn_msgs/SeriesIdentifier series_identifier
bool series_identifier_is_set

# This is a hash of the series_identifier.
# The hash is the first 64 bits (read as a big-endian encoded uint64_t) of
#  SHA1(S K1 V1 K2 V2 ...) where,
#   - S is series identifier text,
#   - K1 and V1 are the key and value of the first key and value of the `spec`,
#   - K2 and V2 are the second key and value of the spec, etc...
# Here, all strings are encoded as utf-8, and keys are sorted lexicographically using this
#  encoding (K1 < K2 < ...).
uint64 identifier_hash
bosdyn_msgs/SeriesDescriptorOneOfDataType data_type

# Annotations are a {key -> value} mapping for associating additional information with
#  the series.
# The format of annotation keys should be
#   {project-or-organization}/{annotation-name}
# For example, 'bosdyn/channel-name', 'bosdyn/protobuf-type'.
# Annotation keys without a '/' are reserved.
# The only current key in the reserved namespace is 'units': e.g., {'units': 'm/s2'}.
bosdyn_msgs/KeyStringValueString[] annotations

# Labels for additional index values which should be attached to each DataDescriptor
#  in the series.
# See the description of "additional_indexes" in DataDescriptor.
string[] additional_index_names
string description
