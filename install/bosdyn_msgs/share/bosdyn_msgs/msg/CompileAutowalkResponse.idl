// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/CompileAutowalkResponse.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/CompileAutowalkResponseStatus.idl"
#include "bosdyn_msgs/msg/ElementIdentifiers.idl"
#include "bosdyn_msgs/msg/KeyInt32ValueBosdynMsgsFailedElement.idl"
#include "bosdyn_msgs/msg/Node.idl"
#include "bosdyn_msgs/msg/NodeIdentifier.idl"
#include "bosdyn_msgs/msg/ResponseHeader.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct CompileAutowalkResponse {
      @verbatim (language="comment", text=
        "Common response header.")
      bosdyn_msgs::msg::ResponseHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "Possible results of compiling a walk to mission." "\n"
        "Result of compiling the mission.")
      bosdyn_msgs::msg::CompileAutowalkResponseStatus status;

      @verbatim (language="comment", text=
        "Reserved for deprecated fields." "\n"
        "Root node of compiled walk.")
      bosdyn_msgs::msg::Node root;

      boolean root_is_set;

      @verbatim (language="comment", text=
        "There will be one ElementIdentifier for each Element in the input Walk." "\n"
        "The index of each ElementIdentifier corresponds to the index of the Element in the input" "\n"
        "Walk. Skipped elements will have default values for id's.  (0 and empty string)")
      sequence<bosdyn_msgs::msg::ElementIdentifiers> element_identifiers;

      @verbatim (language="comment", text=
        "If certain elements failed compilation, they will be reported back in this field." "\n"
        "The map correlates the index of the Element in the input Walk to the FailedElement.")
      sequence<bosdyn_msgs::msg::KeyInt32ValueBosdynMsgsFailedElement> failed_elements;

      @verbatim (language="comment", text=
        "Final docking node.")
      bosdyn_msgs::msg::NodeIdentifier docking_node;

      boolean docking_node_is_set;

      @verbatim (language="comment", text=
        "Node that contains the main sequence of actions performed in the walk." "\n"
        "In continuous playback mode, the walk repeats when this node completes.")
      bosdyn_msgs::msg::NodeIdentifier loop_node;

      boolean loop_node_is_set;
    };
  };
};
