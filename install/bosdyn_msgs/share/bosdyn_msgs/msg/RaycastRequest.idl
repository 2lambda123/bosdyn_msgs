// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/RaycastRequest.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/Ray.idl"
#include "bosdyn_msgs/msg/RayIntersectionType.idl"
#include "bosdyn_msgs/msg/RequestHeader.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct RaycastRequest {
      @verbatim (language="comment", text=
        "Common request header.")
      bosdyn_msgs::msg::RequestHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "The ray's coordinate frame. When unset, this will default to vision frame.")
      string ray_frame_name;

      @verbatim (language="comment", text=
        "The ray, containing and origin and an direction.")
      bosdyn_msgs::msg::Ray ray;

      boolean ray_is_set;

      @verbatim (language="comment", text=
        "Ignore intersections closer than this location on the ray." "\n"
        "Defaults to 0 if not provided.")
      float min_intersection_distance;

      @verbatim (language="comment", text=
        "Type of the raycast you want to perform.  If multiple are set, the result will wait until" "\n"
        "all raycasts are complete and return a single result proto." "\n"
        "" "\n"
        "If this field is left empty, all available sources are used.")
      sequence<bosdyn_msgs::msg::RayIntersectionType> intersection_types;
    };
  };
};
