// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/UploadGraphResponse.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/AreaCallbackServiceError.idl"
#include "bosdyn_msgs/msg/LeaseUseResult.idl"
#include "bosdyn_msgs/msg/LicenseInfoStatus.idl"
#include "bosdyn_msgs/msg/MapStats.idl"
#include "bosdyn_msgs/msg/ResponseHeader.idl"
#include "bosdyn_msgs/msg/SensorCompatibilityStatus.idl"
#include "bosdyn_msgs/msg/UploadGraphResponseStatus.idl"
#include "bosdyn_msgs/msg/UploadGraphResponseValidationStatus.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct UploadGraphResponse {
      @verbatim (language="comment", text=
        "Response to the UploadGraphRequest. After uploading a graph, the user is expected" "\n"
        "to upload large data at waypoints and edges (called snapshots). The response provides" "\n"
        "a list of snapshot IDs which are not yet cached on the server. Snapshots with these IDs should" "\n"
        "be uploaded by the client." "\n"
        "Common response header.")
      bosdyn_msgs::msg::ResponseHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "Status for an upload request.")
      bosdyn_msgs::msg::UploadGraphResponseStatus status;

      @verbatim (language="comment", text=
        "Details about how the lease was used.")
      bosdyn_msgs::msg::LeaseUseResult lease_use_result;

      boolean lease_use_result_is_set;

      @verbatim (language="comment", text=
        "The waypoint snapshot ids for which there was cached data.")
      sequence<string> loaded_waypoint_snapshot_ids;

      @verbatim (language="comment", text=
        "The waypoint snapshot ids for which there is no cached data.")
      sequence<string> unknown_waypoint_snapshot_ids;

      @verbatim (language="comment", text=
        "The edge snapshot ids for which there was cached data.")
      sequence<string> loaded_edge_snapshot_ids;

      @verbatim (language="comment", text=
        "The edge snapshot ids for which there was no cached data.")
      sequence<string> unknown_edge_snapshot_ids;

      @verbatim (language="comment", text=
        "Large graphs can only be uploaded if the license permits them.")
      bosdyn_msgs::msg::LicenseInfoStatus license_status;

      bosdyn_msgs::msg::SensorCompatibilityStatus sensor_status;

      boolean sensor_status_is_set;

      @verbatim (language="comment", text=
        "Errors about Area Callbacks in the map.")
      bosdyn_msgs::msg::AreaCallbackServiceError area_callback_error;

      boolean area_callback_error_is_set;

      @verbatim (language="comment", text=
        "General map statistics.")
      bosdyn_msgs::msg::MapStats map_stats;

      boolean map_stats_is_set;

      @verbatim (language="comment", text=
        "Detailed information about why STATUS_INVALID_GRAPH was returned. This will only" "\n"
        "contain information if the UploadGraph request could not be validated." "\n"
        "If the returned status is STATUS_INVALID_GRAPH, this contains the detailed information about why the" "\n"
        "graph was invalid. Note that some graph validation errors are warnings and the robot will be able to navigate" "\n"
        "on the graph even when they are present.")
      bosdyn_msgs::msg::UploadGraphResponseValidationStatus validation_status;

      boolean validation_status_is_set;
    };
  };
};
