// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/PrepPoseBehavior.msg
// generated code does not contain a copyright notice


module bosdyn_msgs {
  module msg {
    module PrepPoseBehavior_Constants {
      @verbatim (language="comment", text=
        "Defines how and whether we use the \"pre-docking\" pose." "\n"        "Default behavior, equivalent to PREP_POSE_USE_POSE.")
      const int8 PREP_POSE_UNKNOWN = 0;
      @verbatim (language="comment", text=
        "Goes to the pre-docking pose before docking.")
      const int8 PREP_POSE_USE_POSE = 1;
      @verbatim (language="comment", text=
        "Docks before going to the pre-docking pose.")
      const int8 PREP_POSE_SKIP_POSE = 2;
      @verbatim (language="comment", text=
        "Goes to the pre-docking pose, and then returns SUCCESS without docking.")
      const int8 PREP_POSE_ONLY_POSE = 3;
      @verbatim (language="comment", text=
        "Use this enum to undock a currently docked robot.")
      const int8 PREP_POSE_UNDOCK = 4;
    };
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct PrepPoseBehavior {
      int8 value;
    };
  };
};
