// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ProcessAnchoringRequestParams.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/ProcessAnchoringRequestParamsMeasurementParams.idl"
#include "bosdyn_msgs/msg/ProcessAnchoringRequestParamsOptimizerParams.idl"
#include "bosdyn_msgs/msg/ProcessAnchoringRequestParamsWeights.idl"
#include "geometry_msgs/msg/Vector3.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ProcessAnchoringRequestParams {
      @verbatim (language="comment", text=
        "Parameters affecting the underlying optimizer." "\n"
        "Parameters which affect the measurements the optimzier uses to process the anchoring." "\n"
        "Relative weights to use for each of the optimizer's terms. These can be any positive value." "\n"
        "If set to zero, a reasonable default will be used. In general, the higher the weight, the more" "\n"
        "the optimizer will care about that particular measurement.")
      bosdyn_msgs::msg::ProcessAnchoringRequestParamsOptimizerParams optimizer_params;

      boolean optimizer_params_is_set;

      bosdyn_msgs::msg::ProcessAnchoringRequestParamsMeasurementParams measurement_params;

      boolean measurement_params_is_set;

      bosdyn_msgs::msg::ProcessAnchoringRequestParamsWeights weights;

      boolean weights_is_set;

      @verbatim (language="comment", text=
        "If true, the anchoring which already exists on the server will be used as the initial" "\n"
        "guess for the optimizer. Otherwise, a new anchoring will be generated for every waypoint" "\n"
        "which doesn't have a value passed in through initial_hint. If no hint is provided," "\n"
        "and this value is false, every waypoint will be given a starting anchoring based on" "\n"
        "the oldest waypoint in the map.")
      boolean optimize_existing_anchoring;

      boolean optimize_existing_anchoring_is_set;

      @verbatim (language="comment", text=
        "The optimizer will try to keep the orientation of waypoints consistent with gravity." "\n"
        "If provided, this is the gravity direction expressed with respect to the seed. This" "\n"
        "will be interpreted as a unit vector. If not filled out, a default of (0, 0, -1) will be" "\n"
        "used.")
      geometry_msgs::msg::Vector3 gravity_ewrt_seed;

      boolean gravity_ewrt_seed_is_set;
    };
  };
};
