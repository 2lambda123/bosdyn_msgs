// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/PodTypeDescriptor.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/PodTypeEnum.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct PodTypeDescriptor {
      @verbatim (language="comment", text=
        "If a data series contains signals-style data of time-sampled \"plain old datatypes\", this" "\n"
        " describes the content of the series." "\n"
        "All POD data stored in data blocks is stored in little-endian byte order." "\n"
        "Any number of samples may be stored within a given data block." "\n"
        "The type of machine-readable values stored.")
      bosdyn_msgs::msg::PodTypeEnum pod_type;

      @verbatim (language="comment", text=
        "If empty, indicates a single POD per sample." "\n"
        "If one-element, indicates a vector of the given size per sample." "\n"
        "If two-elements, indicates a matrix of the given size, and so on." "\n"
        "An M x N x .. x P array of data is traversed from innermost (P) to outermost (M) dimension.")
      sequence<uint32> dimension;
    };
  };
};
