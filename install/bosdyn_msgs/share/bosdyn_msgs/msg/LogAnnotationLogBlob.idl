// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/LogAnnotationLogBlob.msg
// generated code does not contain a copyright notice

#include "builtin_interfaces/msg/Time.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct LogAnnotationLogBlob {
      @verbatim (language="comment", text=
        "A unit of binary data to be entered in a log." "\n"
        "DEPRECATED as of 2.1.0: Please use the DataBufferService instead of the LogAnnotationService." "\n"
        "Will be removed in 4.0." "\n"
        "Required timestamp of data in robot clock time.")
      builtin_interfaces::msg::Time timestamp;

      boolean timestamp_is_set;

      @verbatim (language="comment", text=
        "A general label for this blob." "\n"
        "This is distinct from type_id, which identifies how the blob is to be parsed.")
      string channel;

      @verbatim (language="comment", text=
        "A description of the data's content and its encoding." "\n"
        "This should be sufficient for deciding how to deserialize the data." "\n"
        "For example, this could be the full name of a protobuf message type.")
      string type_id;

      @verbatim (language="comment", text=
        "Raw data to be included as the blob log.")
      sequence<octet> data;

      @verbatim (language="comment", text=
        "Optional timestamp of data in client clock time.")
      builtin_interfaces::msg::Time timestamp_client;

      boolean timestamp_client_is_set;
    };
  };
};
