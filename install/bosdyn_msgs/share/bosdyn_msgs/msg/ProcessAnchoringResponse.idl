// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ProcessAnchoringResponse.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/Anchor.idl"
#include "bosdyn_msgs/msg/AnchoredWorldObject.idl"
#include "bosdyn_msgs/msg/EdgeId.idl"
#include "bosdyn_msgs/msg/ProcessAnchoringResponseStatus.idl"
#include "bosdyn_msgs/msg/ResponseHeader.idl"
#include "bosdyn_msgs/msg/WaypointAnchorHint.idl"
#include "bosdyn_msgs/msg/WorldObjectAnchorHint.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ProcessAnchoringResponse {
      @verbatim (language="comment", text=
        "Streamed response from the ProcessAnchoringRequest. These will be streamed until optimization is complete." "\n"
        "New anchorings will be streamed as they become available.")
      bosdyn_msgs::msg::ResponseHeader header;

      boolean header_is_set;

      bosdyn_msgs::msg::ProcessAnchoringResponseStatus status;

      @verbatim (language="comment", text=
        "Contains new anchorings for waypoint(s) processed by the server." "\n"
        "These will be streamed back to the user as they become available.")
      sequence<bosdyn_msgs::msg::Anchor> waypoint_results;

      @verbatim (language="comment", text=
        "Contains new anchorings for object(s) (e.g april tags) processed by the server." "\n"
        "These will be streamed back to the user as they become available")
      sequence<bosdyn_msgs::msg::AnchoredWorldObject> world_object_results;

      @verbatim (language="comment", text=
        "If modify_anchoring_on_server was set to true in the request, then the anchoring currently on the server" "\n"
        "was modified using map processing. If this is set to false, then either an error occurred during" "\n"
        "processing, or modify_anchoring_on_server was set to false in the request." "\n"
        "When anchoring_on_server_was_modified is set to false, the client is expected to upload the results" "\n"
        "back to the server to commit the changes.")
      boolean anchoring_on_server_was_modified;

      @verbatim (language="comment", text=
        "The current optimizer iteration that produced these data.")
      int32 iteration;

      @verbatim (language="comment", text=
        "The current nonlinear optimization cost.")
      double cost;

      @verbatim (language="comment", text=
        "If true, this is the result of the final iteration of optimization." "\n"
        "This will always be true when stream_intermediate_results in the request is false.")
      boolean final_iteration;

      @verbatim (language="comment", text=
        "On failure due to constraint violation, these hints were violated by the optimization." "\n"
        "Try increasing the pose bounds on the constraints of these hints.")
      sequence<bosdyn_msgs::msg::WaypointAnchorHint> violated_waypoint_constraints;

      @verbatim (language="comment", text=
        "On failure due to constraint violation, these hints were violated by the optimization." "\n"
        "Try increasing the pose bounds on the constraints of these hints.")
      sequence<bosdyn_msgs::msg::WorldObjectAnchorHint> violated_object_constraints;

      @verbatim (language="comment", text=
        "When there are missing waypoint snapshots, these are the IDs of the missing snapshots." "\n"
        "Upload them to continue.")
      sequence<string> missing_snapshot_ids;

      @verbatim (language="comment", text=
        "When there are missing waypoints, these are the IDs of the missing waypoints. Upload them" "\n"
        "to continue.")
      sequence<string> missing_waypoint_ids;

      @verbatim (language="comment", text=
        "Unorganized list of waypoints and object IDs which were invalid (missing from the map).")
      sequence<string> invalid_hints;

      @verbatim (language="comment", text=
        "List of edges that are inconsistent with the optimized result. This can happen when incorrect" "\n"
        "loop closures have been made before optimization, when inconsistent anchoring hints were passed in," "\n"
        "or because the optmizer ended up in a local minimum.")
      sequence<bosdyn_msgs::msg::EdgeId> inconsistent_edges;
    };
  };
};
