// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/CustomParamSpecOneOfSpec.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/BoolParamSpec.idl"
#include "bosdyn_msgs/msg/DoubleParamSpec.idl"
#include "bosdyn_msgs/msg/Int64ParamSpec.idl"
#include "bosdyn_msgs/msg/ListParamSpec.idl"
#include "bosdyn_msgs/msg/OneOfParamSpec.idl"
#include "bosdyn_msgs/msg/RegionOfInterestParamSpec.idl"
#include "bosdyn_msgs/msg/SerializedMessage.idl"
#include "bosdyn_msgs/msg/StringParamSpec.idl"

module bosdyn_msgs {
  module msg {
    module CustomParamSpecOneOfSpec_Constants {
      const int8 SPEC_NOT_SET = 0;
      const int8 SPEC_DICT_SPEC_SET = 1;
      const int8 SPEC_LIST_SPEC_SET = 2;
      const int8 SPEC_INT_SPEC_SET = 3;
      const int8 SPEC_DOUBLE_SPEC_SET = 4;
      const int8 SPEC_STRING_SPEC_SET = 5;
      const int8 SPEC_ROI_SPEC_SET = 6;
      const int8 SPEC_BOOL_SPEC_SET = 7;
      const int8 SPEC_ONE_OF_SPEC_SET = 8;
    };
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct CustomParamSpecOneOfSpec {
      @verbatim (language="comment", text=
        "ONEOF MESSAGE  Only one of the following can be set" "\n"
        "This parameter is actually a set of sub-parameters." "\n"
        "Useful for setting up a paramter hierarchy, e.g." "\n"
        "          param A" "\n"
        "         /" "\n"
        "        /" "\n"
        "    param A.B   param A.C" "\n"
        "Serialized bosdyn_msgs/DictParamSpec to break recursion")
      bosdyn_msgs::msg::SerializedMessage dict_spec;

      @verbatim (language="comment", text=
        "This parameter is a list of things.")
      bosdyn_msgs::msg::ListParamSpec list_spec;

      bosdyn_msgs::msg::Int64ParamSpec int_spec;

      bosdyn_msgs::msg::DoubleParamSpec double_spec;

      bosdyn_msgs::msg::StringParamSpec string_spec;

      bosdyn_msgs::msg::RegionOfInterestParamSpec roi_spec;

      bosdyn_msgs::msg::BoolParamSpec bool_spec;

      bosdyn_msgs::msg::OneOfParamSpec one_of_spec;

      @verbatim (language="comment", text=
        "Only one of the above can be filled in.  Use the enum to choose which.")
      int8 spec_choice;
    };
  };
};
