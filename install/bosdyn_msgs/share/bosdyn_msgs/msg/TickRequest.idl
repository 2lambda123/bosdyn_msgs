// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/TickRequest.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/DictParam.idl"
#include "bosdyn_msgs/msg/KeyValue.idl"
#include "bosdyn_msgs/msg/Lease.idl"
#include "bosdyn_msgs/msg/RequestHeader.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct TickRequest {
      @verbatim (language="comment", text=
        "Request that the remote tick itself for a particular node in the mission." "\n"
        "Common request header.")
      bosdyn_msgs::msg::RequestHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "Session ID as returned by the EstablishSessionResponse." "\n"
        "Used to guarantee coherence between a single client and a servicer.")
      string session_id;

      @verbatim (language="comment", text=
        "All leases that the remote service may need.")
      sequence<bosdyn_msgs::msg::Lease> leases;

      @verbatim (language="comment", text=
        "Inputs provided to the servicer." "\n"
        "DEPRECATED as of 3.3.  Please use 'params' instead.")
      sequence<bosdyn_msgs::msg::KeyValue> inputs;

      @verbatim (language="comment", text=
        "Parameters set by the client.  Depending on the structure of the mission," "\n"
        "the value may change during ticking.")
      bosdyn_msgs::msg::DictParam params;

      boolean params_is_set;

      @verbatim (language="comment", text=
        "Callbacks can be used to record data using Data Acquisition.  The mission" "\n"
        "can provide a hint to the callback with the current group, so that the" "\n"
        "data the callback saves is correctly grouped with other data generated" "\n"
        "by the mission.  The value may change during ticking.")
      string group_name;
    };
  };
};
