// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/FailureBehaviorOneOfDefaultBehavior.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/FailureBehaviorProceedIfAble.idl"
#include "bosdyn_msgs/msg/FailureBehaviorReturnToStartAndTerminate.idl"
#include "bosdyn_msgs/msg/FailureBehaviorReturnToStartAndTryAgainLater.idl"
#include "bosdyn_msgs/msg/FailureBehaviorSafePowerOff.idl"

module bosdyn_msgs {
  module msg {
    module FailureBehaviorOneOfDefaultBehavior_Constants {
      const int8 DEFAULT_BEHAVIOR_NOT_SET = 0;
      const int8 DEFAULT_BEHAVIOR_SAFE_POWER_OFF_SET = 1;
      const int8 DEFAULT_BEHAVIOR_PROCEED_IF_ABLE_SET = 2;
      const int8 DEFAULT_BEHAVIOR_RETURN_TO_START_AND_TRY_AGAIN_LATER_SET = 3;
      const int8 DEFAULT_BEHAVIOR_RETURN_TO_START_AND_TERMINATE_SET = 4;
    };
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct FailureBehaviorOneOfDefaultBehavior {
      @verbatim (language="comment", text=
        "ONEOF MESSAGE  Only one of the following can be set")
      bosdyn_msgs::msg::FailureBehaviorSafePowerOff safe_power_off;

      bosdyn_msgs::msg::FailureBehaviorProceedIfAble proceed_if_able;

      bosdyn_msgs::msg::FailureBehaviorReturnToStartAndTryAgainLater return_to_start_and_try_again_later;

      bosdyn_msgs::msg::FailureBehaviorReturnToStartAndTerminate return_to_start_and_terminate;

      @verbatim (language="comment", text=
        "Only one of the above can be filled in.  Use the enum to choose which.")
      int8 default_behavior_choice;
    };
  };
};
