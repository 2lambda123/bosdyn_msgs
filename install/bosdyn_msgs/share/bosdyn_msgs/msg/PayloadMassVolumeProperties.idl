// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/PayloadMassVolumeProperties.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/Box3WithFrame.idl"
#include "bosdyn_msgs/msg/JointLimits.idl"
#include "bosdyn_msgs/msg/MomentOfIntertia.idl"
#include "geometry_msgs/msg/Vector3.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct PayloadMassVolumeProperties {
      @verbatim (language="comment", text=
        "PayloadMassVolumeProperties contain mass and volume information for the payload" "\n"
        "in the format that the user interacts with it. It is transmitted to the control" "\n"
        "and perception systems and processed there to inform those systems." "\n"
        "Total mass of payload in kg.")
      float total_mass;

      @verbatim (language="comment", text=
        "Position of the center of mass of the payload in the payload frame. Meters.")
      geometry_msgs::msg::Vector3 com_pos_rt_payload;

      boolean com_pos_rt_payload_is_set;

      @verbatim (language="comment", text=
        "The moment of inertia of the payload, represented about the payload" "\n"
        "center of mass, in the payload frame. Units in.")
      @unit (value="kg*m^2")
      bosdyn_msgs::msg::MomentOfIntertia moi_tensor;

      boolean moi_tensor_is_set;

      @verbatim (language="comment", text=
        "Zero or more bounding boxes indicating the occupied volume of the payload." "\n"
        "These boxes must be represented in the payload frame by specifying" "\n"
        "Must have Box3WithFrame.frame_name == \"payload\".")
      sequence<bosdyn_msgs::msg::Box3WithFrame> bounding_box;

      @verbatim (language="comment", text=
        "Joint limits defining limits to range of motion of the hips of the robot," "\n"
        "in order to prevent collisions with the payload." "\n"
        "This field is optional and is only recommended for advanced development" "\n"
        "purposes.")
      sequence<bosdyn_msgs::msg::JointLimits> joint_limits;
    };
  };
};
