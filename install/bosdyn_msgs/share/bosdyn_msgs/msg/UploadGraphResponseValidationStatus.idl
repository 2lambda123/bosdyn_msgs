// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/UploadGraphResponseValidationStatus.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/EdgeId.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct UploadGraphResponseValidationStatus {
      @verbatim (language="comment", text=
        "One or more edges references a waypoint that doesn't exist. There are the waypoint IDs" "\n"
        "referenced by edges that do not exist. This is an error. Fix the graph and re-upload.")
      sequence<string> missing_waypoint_ids_in_edges;

      @verbatim (language="comment", text=
        "The anchoring uploaded referenced waypoint IDs that do not exist. These" "\n"
        "are the missing IDs. This is a warning. The anchorings will be ignored.")
      sequence<string> missing_waypoint_ids_in_anchors;

      @verbatim (language="comment", text=
        "One or more edges had an invalid from_tform_to transform. These are the edge IDs uploaded" "\n"
        "that have an invalid transform. Valid transforms have quaternion rotations that are normalized." "\n"
        "This is a warning. Edges with invalid transforms will be fixed on upload.")
      sequence<bosdyn_msgs::msg::EdgeId> edge_ids_invalid_transform;

      @verbatim (language="comment", text=
        "One or more waypoint anchors in the anchoring have an invalid transform. These are the waypoint IDs" "\n"
        "that have an invalid transform. Valid transforms have quaternion rotations that are normalized." "\n"
        "This is a warning. Anchors with invalid transforms will be fixed on upload.")
      sequence<string> waypoint_anchors_invalid_transform;

      @verbatim (language="comment", text=
        "One or more of the object achors in the anchoring have an invalid transform. These are the object IDs" "\n"
        "that have an invalid transform. Valid transforms have quaternion rotations that are normalized." "\n"
        "This is a warning. Anchors with invalid transforms will be fixed on upload.")
      sequence<string> object_anchors_invalid_transform;

      @verbatim (language="comment", text=
        "The Graph in the UploadGraph request contained more than one waypoint with the same ID. These are the" "\n"
        "waypoint IDs which occur in the UploadGraph request more than once. Note that IDs are duplicated in this list" "\n"
        "the same number of times they are duplicated in the request." "\n"
        "This is an error. Fix the graph and re-upload.")
      sequence<string> duplicate_waypoint_ids;

      @verbatim (language="comment", text=
        "The anchoring contains one or more anchor IDs that are duplicated.  Note that IDs are duplicated in this list" "\n"
        "the same number of times they are duplicated in the request. This is a warning. Only the first anchor will be used.")
      sequence<string> duplicate_waypoint_anchor_ids;

      @verbatim (language="comment", text=
        "The anchoring contains one or more object anchor IDs that are duplicated.  Note that IDs are duplicated in this list" "\n"
        "the same number of times they are duplicated in the request.  This is a warning. Only the first anchor will be used.")
      sequence<string> duplicate_object_anchor_ids;

      @verbatim (language="comment", text=
        "The Graph in the UploadGraph request contained more than one edge with the equivalent ID. These are the edge IDs" "\n"
        "which occur in the UploadGraph request more than once. Note that IDs are duplicated in this list the same number" "\n"
        "of times that they are duplicated in the request. Note that edges are *not* directional, and it is impossible" "\n"
        "to have both a->b *and* b->a in the same map. This is an error. Fix the graph and re-upload.")
      sequence<bosdyn_msgs::msg::EdgeId> duplicate_edge_ids;

      @verbatim (language="comment", text=
        "Edges are not allowed to have the same \"from\" and \"to\" waypoint. These are the waypoint IDs which have self" "\n"
        "edges in the UploadGraph request. This is an error. Fix the graph and re-upload.")
      sequence<string> invalid_waypoint_ids_self_edges;

      @verbatim (language="comment", text=
        "At least one waypoint in the graph has an empty ID. This is an error. Fix the graph and re-upload.")
      boolean has_empty_waypoint_ids;

      @verbatim (language="comment", text=
        "At least one edge in the graph references a waypoint with an empty ID." "\n"
        "This is an error. Fix the graph and re-upload.")
      boolean has_empty_edge_ids;

      @verbatim (language="comment", text=
        "At least one waypoint anchor in the anchoring has an empty ID. This is a warning. Empty anchors will be ignored.")
      boolean has_empty_waypoint_anchor_ids;

      @verbatim (language="comment", text=
        "At least one object anchor in the anchoring has an empty ID. This is a warning. Empty anchors will be ignored.")
      boolean has_empty_object_anchor_ids;
    };
  };
};
