// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/SetPassphraseRequest.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/RequestHeader.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct SetPassphraseRequest {
      @verbatim (language="comment", text=
        "Set encryption for the disk." "\n"
        "Common request header.")
      bosdyn_msgs::msg::RequestHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "A passphrase is a human-readable string used to generate" "\n"
        "an encryption key. An empty passphrase disables encryption." "\n"
        "If the encryption key is set, everything new written to the drive gets encrypted. this" "\n"
        "includes" "\n"
        "1) the sql database" "\n"
        "2) logged data" "\n"
        "3) audio files uploaded with the Audio service" "\n"
        "4) probably other stuff that I haven't thought of" "\n"
        "If it's called repeatedly (with different keys), old data will" "\n"
        "still be on the disk, but unreadable, so new data will be" "\n"
        "written with the new key. the only exception is this; when" "\n"
        "encryption is off and a key is written, the sql database gets" "\n"
        "encrypted with the new key; old log and audio data remains" "\n"
        "unencrypted however." "\n"
        "After setting the passphrase, please reboot the system to" "\n"
        "remount the encrypted filesystem layer.")
      string passphrase;
    };
  };
};
