// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/EdgeEdgeSource.msg
// generated code does not contain a copyright notice


module bosdyn_msgs {
  module msg {
    module EdgeEdgeSource_Constants {
      const int8 EDGE_SOURCE_UNKNOWN = 0;
      @verbatim (language="comment", text=
        "Edges with transforms from odometry.")
      const int8 EDGE_SOURCE_ODOMETRY = 1;
      @verbatim (language="comment", text=
        "Edges with transforms from a short chain of other edges.")
      const int8 EDGE_SOURCE_SMALL_LOOP_CLOSURE = 2;
      @verbatim (language="comment", text=
        "Edges with transforms from multiple fiducial observations.")
      const int8 EDGE_SOURCE_FIDUCIAL_LOOP_CLOSURE = 3;
      @verbatim (language="comment", text=
        "Edges that may help find alternate routes.")
      const int8 EDGE_SOURCE_ALTERNATE_ROUTE_FINDING = 4;
      @verbatim (language="comment", text=
        "Created via a CreateEdge RPC.")
      const int8 EDGE_SOURCE_USER_REQUEST = 5;
      @verbatim (language="comment", text=
        "Created when we start recording after recording has been paused." "\n"        "For example, an \"extension\" of a graph will start with an edge" "\n"        "of type EDGE_SOURCE_LOCALIZATION.")
      const int8 EDGE_SOURCE_LOCALIZATION = 6;
    };
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct EdgeEdgeSource {
      int8 value;
    };
  };
};
