// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ManipulationApiFeedbackResponse.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/FrameTreeSnapshot.idl"
#include "bosdyn_msgs/msg/ManipulationFeedbackState.idl"
#include "bosdyn_msgs/msg/ResponseHeader.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ManipulationApiFeedbackResponse {
      @verbatim (language="comment", text=
        "/ Common response header.")
      bosdyn_msgs::msg::ResponseHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "The unique identifier for the ManipulationApiFeedbackRequest.")
      int32 manipulation_cmd_id;

      bosdyn_msgs::msg::ManipulationFeedbackState current_state;

      @verbatim (language="comment", text=
        "Data from the manipulation system:" "\n"
        "\"walkto_raycast_intersection\":" "\n"
        "     If you sent a WalkToObject request, we raycast in the world to intersect your pixel/ray" "\n"
        "     with the world.  The point of intersection is included in this transform snapshot" "\n"
        "     with the name \"walkto_raycast_intersection\"." "\n"
        "\"grasp_planning_solution\":" "\n"
        "     If you requested a grasp plan, this frame will contain the planning solution if" "\n"
        "     available.  This will be the pose of the \"hand\" frame at the completion of the grasp." "\n"
        "\"gripper_nearest_object\":" "\n"
        "     If the range camera in the hand senses an object, this frame will have the position of" "\n"
        "     the nearest object.  This is useful for getting a ballpark range measurement.")
      bosdyn_msgs::msg::FrameTreeSnapshot transforms_snapshot_manipulation_data;

      boolean transforms_snapshot_manipulation_data_is_set;
    };
  };
};
