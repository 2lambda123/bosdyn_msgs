// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ServiceEntry.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/ServiceEntryOneOfServiceType.idl"
#include "builtin_interfaces/msg/Time.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ServiceEntry {
      @verbatim (language="comment", text=
        "A message representing a discoverable service.  By definition, all services" "\n"
        "discoverable by this system are expected to be grpc \"services\" provided by" "\n"
        "some server." "\n"
        "The unique user-friendly name of this service.")
      string name;

      bosdyn_msgs::msg::ServiceEntryOneOfServiceType service_type;

      @verbatim (language="comment", text=
        "Information used to route to the desired Service. Can either be a full address" "\n"
        "(aService.spot.robot) or just a DNS label that will be automatically converted to an" "\n"
        "address (aService).")
      string authority;

      @verbatim (language="comment", text=
        "Last update time in robot timebase for this service record. This serves as the time of" "\n"
        "the last heartbeat to the robot.")
      builtin_interfaces::msg::Time last_update;

      boolean last_update_is_set;

      @verbatim (language="comment", text=
        "If 'user_token_required' field is true, any requests to this service must contain" "\n"
        "a user token for the machine.  Requests without a user token will result in a" "\n"
        "401. Most services will want to require a user_token, but ones like auth_service" "\n"
        "do not.")
      boolean user_token_required;

      @verbatim (language="comment", text=
        "If 'permission_required' field is non-empty, any requests to this service must" "\n"
        "have the same string in the \"per\" claim of the user token.")
      string permission_required;

      @verbatim (language="comment", text=
        "Number of seconds to wait between heartbeats before assuming service in no longer live" "\n"
        "If unset (0) liveness checks will be disabled for this service.")
      double liveness_timeout_secs;

      @verbatim (language="comment", text=
        "The GUID of the payload that this service was registered from. An empty string represents a" "\n"
        "service that was registered via a client using standard user credentials or internal to the" "\n"
        "robot. This value is set automatically based on the user token and cannot be set or updated" "\n"
        "via the API, so it should not be populated by the client at registration time.")
      string host_payload_guid;
    };
  };
};
