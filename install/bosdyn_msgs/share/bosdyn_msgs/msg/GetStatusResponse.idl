// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/GetStatusResponse.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/DataError.idl"
#include "bosdyn_msgs/msg/DataIdentifier.idl"
#include "bosdyn_msgs/msg/GetStatusResponseStatus.idl"
#include "bosdyn_msgs/msg/NetworkComputeError.idl"
#include "bosdyn_msgs/msg/PluginServiceError.idl"
#include "bosdyn_msgs/msg/ResponseHeader.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct GetStatusResponse {
      @verbatim (language="comment", text=
        "Common response header")
      bosdyn_msgs::msg::ResponseHeader header;

      boolean header_is_set;

      bosdyn_msgs::msg::GetStatusResponseStatus status;

      @verbatim (language="comment", text=
        "Data that has been successfully saved into the data buffer for the capture action.")
      sequence<bosdyn_msgs::msg::DataIdentifier> data_saved;

      @verbatim (language="comment", text=
        "A list of data captures which have failed in some way during the action." "\n"
        "For example, the data acquisition plugin is unable to communicate to a sensor and responds" "\n"
        "with a data error for that specific data capture.")
      sequence<bosdyn_msgs::msg::DataError> data_errors;

      @verbatim (language="comment", text=
        "Services which failed independent of a particular data id." "\n"
        "For example, if a plugin times out or crashes, it could be reported here.")
      sequence<bosdyn_msgs::msg::PluginServiceError> service_errors;

      @verbatim (language="comment", text=
        "Network compute services which failed independent of a particular data id." "\n"
        "For example, if a worker times out or crashes, it could be reported here.")
      sequence<bosdyn_msgs::msg::NetworkComputeError> network_compute_errors;
    };
  };
};
