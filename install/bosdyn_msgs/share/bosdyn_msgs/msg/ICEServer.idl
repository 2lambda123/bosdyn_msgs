// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ICEServer.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/ICEServerAuthParams.idl"
#include "bosdyn_msgs/msg/ICEServerIcetransport.idl"
#include "bosdyn_msgs/msg/ICEServerServertype.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ICEServer {
      @verbatim (language="comment", text=
        "Servers used in the ICE resolution process." "\n"
        "Possible types of servers" "\n"
        "STUN or TURN server.")
      bosdyn_msgs::msg::ICEServerServertype type;

      @verbatim (language="comment", text=
        "Network address of the server.")
      string address;

      @verbatim (language="comment", text=
        "Only the least significant 16 bits are used.")
      uint32 port;

      bosdyn_msgs::msg::ICEServerIcetransport transport;

      @verbatim (language="comment", text=
        "auth is optional, and is only used for TURN")
      bosdyn_msgs::msg::ICEServerAuthParams auth;

      boolean auth_is_set;
    };
  };
};
