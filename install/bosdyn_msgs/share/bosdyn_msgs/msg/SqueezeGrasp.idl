// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/SqueezeGrasp.msg
// generated code does not contain a copyright notice


module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct SqueezeGrasp {
      @verbatim (language="comment", text=
        "A \"squeeze grasp\" is a top-down grasp where we try to keep both jaws of the gripper in" "\n"
        "contact with the ground and bring the jaws together.  This can allow the robot to pick up" "\n"
        "small objects on the ground." "\n"
        "" "\n"
        "If you specify a SqueezeGrasp as:" "\n"
        "     allowed:" "\n"
        "         - with no other allowable orientations:" "\n"
        "             then the robot will perform a squeeze grasp." "\n"
        "         - with at least one other allowable orientation:" "\n"
        "             the robot will attempt to find a normal grasp with that orientation and if it" "\n"
        "             fails, will perform a squeeze grasp." "\n"
        "     disallowed:" "\n"
        "         - with no other allowable orientations:" "\n"
        "             the robot will perform an unconstrained grasp search and a grasp if a good grasp" "\n"
        "             is found.  If no grasp is found, the robot will report" "\n"
        "             MANIP_STATE_GRASP_PLANNING_NO_SOLUTION" "\n"
        "         - with other allowable orientations:" "\n"
        "             the robot will attempt to find a valid grasp.  If it cannot it will report" "\n"
        "             MANIP_STATE_GRASP_PLANNING_NO_SOLUTION")
      boolean squeeze_grasp_disallowed;
    };
  };
};
