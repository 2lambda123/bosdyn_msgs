// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/GetLocalizationStateResponse.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/KinematicState.idl"
#include "bosdyn_msgs/msg/Localization.idl"
#include "bosdyn_msgs/msg/LostDetectorState.idl"
#include "bosdyn_msgs/msg/RemotePointCloudStatus.idl"
#include "bosdyn_msgs/msg/ResponseHeader.idl"
#include "bosdyn_msgs/msg/WaypointSnapshot.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct GetLocalizationStateResponse {
      @verbatim (language="comment", text=
        "The GetLocalizationState response message returns the current localization and robot state, as well" "\n"
        "as any requested live data information." "\n"
        "Common response header.")
      bosdyn_msgs::msg::ResponseHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "Where the robot currently is. If a waypoint_id was specified in the request, this localization" "\n"
        "will be relative to that waypoint.")
      bosdyn_msgs::msg::Localization localization;

      boolean localization_is_set;

      @verbatim (language="comment", text=
        "Robot kinematic state at time of localization.")
      bosdyn_msgs::msg::KinematicState robot_kinematics;

      boolean robot_kinematics_is_set;

      @verbatim (language="comment", text=
        "Status of one or more remote point cloud services (such as velodyne).")
      sequence<bosdyn_msgs::msg::RemotePointCloudStatus> remote_cloud_status;

      @verbatim (language="comment", text=
        "Contains live data at the time of localization, with elements only filled out" "\n"
        "if requested.")
      bosdyn_msgs::msg::WaypointSnapshot live_data;

      boolean live_data_is_set;

      @verbatim (language="comment", text=
        "If the robot drives around without a good localization for a while, eventually" "\n"
        "it becomes \"lost.\"  I.E. it has a localization, but it no longer trusts" "\n"
        "that the localization it has is accurate.  Lost detector state is" "\n"
        "available through this message.")
      bosdyn_msgs::msg::LostDetectorState lost_detector_state;

      boolean lost_detector_state_is_set;
    };
  };
};
