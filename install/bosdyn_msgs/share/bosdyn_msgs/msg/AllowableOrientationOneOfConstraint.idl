// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/AllowableOrientationOneOfConstraint.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/RotationWithTolerance.idl"
#include "bosdyn_msgs/msg/SqueezeGrasp.idl"
#include "bosdyn_msgs/msg/VectorAlignmentWithTolerance.idl"

module bosdyn_msgs {
  module msg {
    module AllowableOrientationOneOfConstraint_Constants {
      const int8 CONSTRAINT_NOT_SET = 0;
      const int8 CONSTRAINT_ROTATION_WITH_TOLERANCE_SET = 1;
      const int8 CONSTRAINT_VECTOR_ALIGNMENT_WITH_TOLERANCE_SET = 2;
      const int8 CONSTRAINT_SQUEEZE_GRASP_SET = 3;
    };
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct AllowableOrientationOneOfConstraint {
      @verbatim (language="comment", text=
        "ONEOF MESSAGE  Only one of the following can be set")
      bosdyn_msgs::msg::RotationWithTolerance rotation_with_tolerance;

      bosdyn_msgs::msg::VectorAlignmentWithTolerance vector_alignment_with_tolerance;

      bosdyn_msgs::msg::SqueezeGrasp squeeze_grasp;

      @verbatim (language="comment", text=
        "Only one of the above can be filled in.  Use the enum to choose which.")
      int8 constraint_choice;
    };
  };
};
