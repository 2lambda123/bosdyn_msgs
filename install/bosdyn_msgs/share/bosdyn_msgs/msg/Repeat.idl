// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/Repeat.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/Node.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct Repeat {
      @verbatim (language="comment", text=
        "Repeat a child node." "\n"
        "Start the child node exactly this many times." "\n"
        "Note that a value of 1 makes the Repeat node a no-op.")
      int32 max_starts;

      @verbatim (language="comment", text=
        "Child to repeat max_starts times.")
      bosdyn_msgs::msg::Node child;

      boolean child_is_set;

      @verbatim (language="comment", text=
        "If set, the node will write the start index to the blackboard.")
      string start_counter_state_name;

      @verbatim (language="comment", text=
        "If set to false, this repeat node will keep running its child regardless of whether" "\n"
        "or not the child succeeds or fails." "\n"
        "If set to true, this repeat node will only keep running its child when the child" "\n"
        "succeeds.  If the child fails, the repeat node will fail.")
      boolean respect_child_failure;
    };
  };
};
