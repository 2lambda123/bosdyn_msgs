// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/TravelParams.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/EdgeAnnotationsGroundClutterAvoidanceMode.idl"
#include "bosdyn_msgs/msg/EdgeAnnotationsPathFollowingMode.idl"
#include "bosdyn_msgs/msg/SE2VelocityLimit.idl"
#include "bosdyn_msgs/msg/TravelParamsFeatureQualityTolerance.idl"
#include "builtin_interfaces/msg/Duration.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct TravelParams {
      @verbatim (language="comment", text=
        "Parameters describing how to travel along a route." "\n"
        "Threshold for the maximum distance that defines when we have reached" "\n"
        "the final waypoint.")
      @unit (value="meters")
      double max_distance;

      @verbatim (language="comment", text=
        "Threshold for the maximum yaw that defines when we have reached" "\n"
        "the final waypoint (ignored if ignore_final_yaw is set to true).")
      @unit (value="radians")
      double max_yaw;

      @verbatim (language="comment", text=
        "Speed the robot should use." "\n"
        "Omit to let the robot choose.")
      bosdyn_msgs::msg::SE2VelocityLimit velocity_limit;

      boolean velocity_limit_is_set;

      @verbatim (language="comment", text=
        "If true, the robot will only try to achieve" "\n"
        "the final translation of the route. Otherwise," "\n"
        "it will attempt to achieve the yaw as well.")
      boolean ignore_final_yaw;

      @verbatim (language="comment", text=
        "Indicates whether robot will navigate through areas with poor quality features")
      bosdyn_msgs::msg::TravelParamsFeatureQualityTolerance feature_quality_tolerance;

      @verbatim (language="comment", text=
        "Disable directed exploration to skip blocked portions of route")
      boolean disable_directed_exploration;

      @verbatim (language="comment", text=
        "Disable alternate-route-finding; overrides the per-edge setting in the map.")
      boolean disable_alternate_route_finding;

      @verbatim (language="comment", text=
        "Path following mode")
      bosdyn_msgs::msg::EdgeAnnotationsPathFollowingMode path_following_mode;

      @verbatim (language="comment", text=
        "Time to wait for blocked path to clear (seconds)")
      builtin_interfaces::msg::Duration blocked_path_wait_time;

      boolean blocked_path_wait_time_is_set;

      @verbatim (language="comment", text=
        "Ground clutter avoidance mode.")
      bosdyn_msgs::msg::EdgeAnnotationsGroundClutterAvoidanceMode ground_clutter_mode;
    };
  };
};
