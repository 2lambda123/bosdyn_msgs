// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/GlobalParameters.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/ActionRemoteGrpc.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct GlobalParameters {
      @verbatim (language="comment", text=
        "These parameters apply to the entire autowalk." "\n"
        "If the mission contains data acquisitions, this will be their group name." "\n"
        "The actual group name used will include the specified group name, and additional" "\n"
        "qualifiers to ensure its unique for each start of this mission.")
      string group_name;

      @verbatim (language="comment", text=
        "If the mission contains SpotCAM PTZ actions, set this to true. At the start of the" "\n"
        "mission (or if the robot falls), the SpotCAM PTZ autofocus will be reset, thereby" "\n"
        "improving the quality of the subsequent PTZ captures.")
      boolean should_autofocus_ptz;

      @verbatim (language="comment", text=
        "The mission can automatically self-right the robot. Autonomous self-rights" "\n"
        "can damage the robot, its payloads, and its surroundings. If the user" "\n"
        "does not want the robot to self-right on its own, set this number to 0." "\n"
        "If the user does want the robot to self-right itself, the user may set a" "\n"
        "maximum number of attempts so that the robot does not destroy itself by" "\n"
        "repeatedly falling and getting up and falling again.")
      int32 self_right_attempts;

      @verbatim (language="comment", text=
        "The callbacks that will be executed at the end of the mission. Functionality that" "\n"
        "is often found in post-mission callbacks includes uploading data to the cloud or" "\n"
        "sending an email. The callbacks will be executed serially (first in, first executed).")
      sequence<bosdyn_msgs::msg::ActionRemoteGrpc> post_mission_callbacks;

      @verbatim (language="comment", text=
        "It can be useful to have the robot run a walk without collecting data." "\n"
        "If this boolean is set to true, the compiled mission will still navigate to the" "\n"
        "target of each element, however it will not actually perform the associated" "\n"
        "action & action wrappers.")
      boolean skip_actions;
    };
  };
};
