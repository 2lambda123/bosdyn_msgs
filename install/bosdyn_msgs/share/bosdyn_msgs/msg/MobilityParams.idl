// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/MobilityParams.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/BodyControlParams.idl"
#include "bosdyn_msgs/msg/BodyExternalForceParams.idl"
#include "bosdyn_msgs/msg/LocomotionHint.idl"
#include "bosdyn_msgs/msg/MobilityParamsStairsMode.idl"
#include "bosdyn_msgs/msg/ObstacleParams.idl"
#include "bosdyn_msgs/msg/SE2VelocityLimit.idl"
#include "bosdyn_msgs/msg/SwingHeight.idl"
#include "bosdyn_msgs/msg/TerrainParams.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct MobilityParams {
      @verbatim (language="comment", text=
        "Params common across spot movement and mobility." "\n"
        "Max allowable velocity at any point in trajectory.")
      bosdyn_msgs::msg::SE2VelocityLimit vel_limit;

      boolean vel_limit_is_set;

      @verbatim (language="comment", text=
        "Parameters for controlling Spot's body during motion.")
      bosdyn_msgs::msg::BodyControlParams body_control;

      boolean body_control_is_set;

      @verbatim (language="comment", text=
        "Desired gait during locomotion")
      bosdyn_msgs::msg::LocomotionHint locomotion_hint;

      @verbatim (language="comment", text=
        "DEPRECATED as of 3.2.0: The boolean field has been replaced by the field stairs_mode." "\n"
        "The following field will be deprecated and moved to 'reserved' in a future release." "\n"
        "Stairs are only supported in trot gaits. Enabling stairs mode will override some user" "\n"
        "defaults in order to optimize stair behavior." "\n"
        "The selected option for stairs mode." "\n"
        "If unset, will use the deprecated stair_hint instead." "\n"
        "If falling back on stair_hint, false will map to STAIRS_MODE_OFF." "\n"
        "This will be changed to STAIRS_MODE_AUTO in a future release.")
      bosdyn_msgs::msg::MobilityParamsStairsMode stairs_mode;

      @verbatim (language="comment", text=
        "Allow the robot to move with degraded perception when there are perception faults.")
      boolean allow_degraded_perception;

      @verbatim (language="comment", text=
        "Control of obstacle avoidance.")
      bosdyn_msgs::msg::ObstacleParams obstacle_params;

      boolean obstacle_params_is_set;

      @verbatim (language="comment", text=
        "Swing height setting")
      bosdyn_msgs::msg::SwingHeight swing_height;

      @verbatim (language="comment", text=
        "Ground terrain parameters.")
      bosdyn_msgs::msg::TerrainParams terrain_params;

      boolean terrain_params_is_set;

      @verbatim (language="comment", text=
        "Prevent the robot from using StairTracker even if in stairs mode.")
      boolean disallow_stair_tracker;

      @verbatim (language="comment", text=
        "Prevent the robot from automatically walking off a staircase in the case of an error" "\n"
        "(ex: e-stop settle_then_cut, critical battery level)")
      boolean disable_stair_error_auto_descent;

      @verbatim (language="comment", text=
        "Robot Body External Force parameters")
      bosdyn_msgs::msg::BodyExternalForceParams external_force_params;

      boolean external_force_params_is_set;

      @verbatim (language="comment", text=
        "Prevent the robot from pitching to get a better look at rearward terrain except in stairs" "\n"
        "mode.")
      boolean disallow_non_stairs_pitch_limiting;

      @verbatim (language="comment", text=
        "Disable the secondary nearmap-based cliff avoidance that runs while on stairs.")
      boolean disable_nearmap_cliff_avoidance;
    };
  };
};
