// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/NavigateRouteResponse.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/AreaCallbackServiceError.idl"
#include "bosdyn_msgs/msg/EdgeId.idl"
#include "bosdyn_msgs/msg/LeaseUseResult.idl"
#include "bosdyn_msgs/msg/NavigateRouteResponseStatus.idl"
#include "bosdyn_msgs/msg/ResponseHeader.idl"
#include "bosdyn_msgs/msg/RobotImpairedState.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct NavigateRouteResponse {
      @verbatim (language="comment", text=
        "Response to a NavigateRouteRequest. This is returned immediately after the request is processed. A command_id" "\n"
        "is provided to specify the ID that the user may use to poll the system for feedback on the NavigateRoute command." "\n"
        "Common response header.")
      bosdyn_msgs::msg::ResponseHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "Details about how the lease was used.")
      sequence<bosdyn_msgs::msg::LeaseUseResult> lease_use_results;

      @verbatim (language="comment", text=
        "Return status for the request.")
      bosdyn_msgs::msg::NavigateRouteResponseStatus status;

      @verbatim (language="comment", text=
        "If the status is ROBOT_IMPAIRED, this is why the robot is impaired.")
      bosdyn_msgs::msg::RobotImpairedState impaired_state;

      boolean impaired_state_is_set;

      @verbatim (language="comment", text=
        "Unique identifier for the command, If 0, command was not accepted.")
      uint32 command_id;

      @verbatim (language="comment", text=
        "On a relevant error status code, these fields contain the waypoint/edge IDs that caused the error.")
      sequence<string> error_waypoint_ids;

      @verbatim (language="comment", text=
        "On a relevant error status code (STATUS_INVALID_EDGE), this is populated with the edge ID's that cased the error.")
      sequence<bosdyn_msgs::msg::EdgeId> error_edge_ids;

      @verbatim (language="comment", text=
        "Errors about Area Callbacks in the map.")
      bosdyn_msgs::msg::AreaCallbackServiceError area_callback_error;

      boolean area_callback_error_is_set;
    };
  };
};
