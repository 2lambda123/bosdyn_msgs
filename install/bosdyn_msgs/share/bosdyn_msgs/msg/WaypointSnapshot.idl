// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/WaypointSnapshot.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/ImageResponse.idl"
#include "bosdyn_msgs/msg/LocalGrid.idl"
#include "bosdyn_msgs/msg/Payload.idl"
#include "bosdyn_msgs/msg/PointCloud.idl"
#include "bosdyn_msgs/msg/RobotId.idl"
#include "bosdyn_msgs/msg/RobotState.idl"
#include "bosdyn_msgs/msg/WorldObject.idl"
#include "builtin_interfaces/msg/Time.idl"
#include "geometry_msgs/msg/Pose.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct WaypointSnapshot {
      @verbatim (language="comment", text=
        "Relevant data collected at the waypoint." "\n"
        "May be used for localization or automatically generating annotations, for example." "\n"
        "Should be indexed by a waypoint's \"snapshot_id\" field." "\n"
        "Identifier of this snapshot." "\n"
        "Snapshots are immutable -- if any of the other fields change, this ID must also change.")
      string id;

      @verbatim (language="comment", text=
        "Any images captured at the waypoint.")
      sequence<bosdyn_msgs::msg::ImageResponse> images;

      @verbatim (language="comment", text=
        "Aggregated point cloud data.")
      bosdyn_msgs::msg::PointCloud point_cloud;

      boolean point_cloud_is_set;

      @verbatim (language="comment", text=
        "Perception objects seen at snapshot time.")
      sequence<bosdyn_msgs::msg::WorldObject> objects;

      @verbatim (language="comment", text=
        "Full robot state during snapshot.")
      bosdyn_msgs::msg::RobotState robot_state;

      boolean robot_state_is_set;

      @verbatim (language="comment", text=
        "Robot grid data.")
      sequence<bosdyn_msgs::msg::LocalGrid> robot_local_grids;

      @verbatim (language="comment", text=
        "If true, the point cloud of this snapshot has been processed.")
      boolean is_point_cloud_processed;

      @verbatim (language="comment", text=
        "If this snapshot is a modified version of the raw snapshot with the given ID (for example, it" "\n"
        "has been processed), a new unique ID will we assigned to this field. If the field is empty," "\n"
        "this is the raw version of the snapshot.")
      string version_id;

      @verbatim (language="comment", text=
        "If true, the point cloud contains data from a remote point cloud service," "\n"
        "such as LIDAR.")
      boolean has_remote_point_cloud_sensor;

      @verbatim (language="comment", text=
        "Transform from the robot body to the remote point cloud sensor's" "\n"
        "reference frame.")
      geometry_msgs::msg::Pose body_tform_remote_point_cloud_sensor;

      boolean body_tform_remote_point_cloud_sensor_is_set;

      @verbatim (language="comment", text=
        "Defines the payloads attached to the robot at this waypoint.")
      sequence<bosdyn_msgs::msg::Payload> payloads;

      @verbatim (language="comment", text=
        "Identifiers (software, nickname, etc.) of the robot that created this waypoint.")
      bosdyn_msgs::msg::RobotId robot_id;

      boolean robot_id_is_set;

      @verbatim (language="comment", text=
        "Information about when the recording session started in robot time basis." "\n"
        "This will be filled out by the recording service when StartRecording is called.")
      builtin_interfaces::msg::Time recording_started_on;

      boolean recording_started_on_is_set;
    };
  };
};
