// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ArmJointMoveCommandFeedback.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/ArmJointMoveCommandFeedbackPlannerStatus.idl"
#include "bosdyn_msgs/msg/ArmJointMoveCommandFeedbackStatus.idl"
#include "bosdyn_msgs/msg/ArmJointTrajectoryPoint.idl"
#include "builtin_interfaces/msg/Duration.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ArmJointMoveCommandFeedback {
      @verbatim (language="comment", text=
        "Current status of the request.")
      bosdyn_msgs::msg::ArmJointMoveCommandFeedbackStatus status;

      @verbatim (language="comment", text=
        "Current status of the trajectory planner.")
      bosdyn_msgs::msg::ArmJointMoveCommandFeedbackPlannerStatus planner_status;

      @verbatim (language="comment", text=
        "Based on the user trajectory, the planned knot points that obey acceleration and" "\n"
        "velocity constraints. If these knot points don't match the requested knot points," "\n"
        "consider increasing velocity/acceleration limits, and/or staying further away from" "\n"
        "joint position limits. In situations where we've modified you last point, we append" "\n"
        "a minimum time trajectory (that obeys the velocity and acceleration limits) from the" "\n"
        "planner's final point to the requested final point. This means that the length of" "\n"
        "planned_points may be one point larger than the requested.")
      sequence<bosdyn_msgs::msg::ArmJointTrajectoryPoint> planned_points;

      @verbatim (language="comment", text=
        "Returns amount of time remaining until the joints are at the goal position.  For" "\n"
        "multiple point trajectories, this is the time remaining to the final point.")
      builtin_interfaces::msg::Duration time_to_goal;

      boolean time_to_goal_is_set;
    };
  };
};
