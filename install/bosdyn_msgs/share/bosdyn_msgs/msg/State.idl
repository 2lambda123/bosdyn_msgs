// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/State.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/Question.idl"
#include "bosdyn_msgs/msg/StateAnsweredQuestion.idl"
#include "bosdyn_msgs/msg/StateNodeStatesAtTick.idl"
#include "bosdyn_msgs/msg/StateStatus.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct State {
      @verbatim (language="comment", text=
        "State of the mission service." "\n"
        "What questions are outstanding?")
      sequence<bosdyn_msgs::msg::Question> questions;

      @verbatim (language="comment", text=
        "A question that has been answered already." "\n"
        "History of questions that have been answered." "\n"
        "The server will set some limit on the available history.")
      sequence<bosdyn_msgs::msg::StateAnsweredQuestion> answered_questions;

      @verbatim (language="comment", text=
        "Node states ordered from newest to oldest." "\n"
        "history will always be the data from this tick.")
      @unit (value="0")
      sequence<bosdyn_msgs::msg::StateNodeStatesAtTick> history;

      @verbatim (language="comment", text=
        "Possible overall status states of the mission." "\n"
        "Current status of the mission.")
      bosdyn_msgs::msg::StateStatus status;

      @verbatim (language="comment", text=
        "Describes the unexpected error encountered by the mission service." "\n"
        "Only filled out if STATUS_ERROR is set.")
      string error;

      @verbatim (language="comment", text=
        "The mission's tick counter when this state was generated." "\n"
        "-1 indicates no mission has been started.")
      int64 tick_counter;

      @verbatim (language="comment", text=
        "The mission's ID." "\n"
        "-1 indicates no mission has been loaded.")
      int64 mission_id;
    };
  };
};
