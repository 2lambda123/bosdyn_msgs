// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/PageInfo.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/PageInfoCompression.idl"
#include "bosdyn_msgs/msg/PageInfoPageFormat.idl"
#include "bosdyn_msgs/msg/TimeRange.idl"
#include "builtin_interfaces/msg/Time.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct PageInfo {
      @verbatim (language="comment", text=
        "A unit of data storage." "\n"
        "This may be a bddf data file." "\n"
        "Like a file, this data may be downloaded or deleted all together for example." "\n"
        "Identifier unique to robot.")
      string id;

      @verbatim (language="comment", text=
        "Relative path to file, if file storage.")
      string path;

      @verbatim (language="comment", text=
        "Name of service/client which provided the data.")
      string source;

      @verbatim (language="comment", text=
        "Time range of the relevant data in the page.")
      bosdyn_msgs::msg::TimeRange time_range;

      boolean time_range_is_set;

      @verbatim (language="comment", text=
        "Number of time samples or blobs.")
      int64 num_ticks;

      @verbatim (language="comment", text=
        "Total size of data in the page.")
      int64 total_bytes;

      bosdyn_msgs::msg::PageInfoPageFormat format;

      bosdyn_msgs::msg::PageInfoCompression compression;

      @verbatim (language="comment", text=
        "True if data is still being written into this page, false if page is complete.")
      boolean is_open;

      @verbatim (language="comment", text=
        "True if data is marked as having been downloaded.")
      boolean is_downloaded;

      @verbatim (language="comment", text=
        "If this exists, the page was deleted from the robot at the specified time.")
      builtin_interfaces::msg::Time deleted_timestamp;

      boolean deleted_timestamp_is_set;

      @verbatim (language="comment", text=
        "If this exists, download from this page was started at the specified time.")
      builtin_interfaces::msg::Time download_started_timestamp;

      boolean download_started_timestamp_is_set;

      @verbatim (language="comment", text=
        "True if data has been requested to be preserved.")
      boolean request_preserve;
    };
  };
};
