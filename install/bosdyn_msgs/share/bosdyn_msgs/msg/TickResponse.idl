// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/TickResponse.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/CustomParamError.idl"
#include "bosdyn_msgs/msg/LeaseUseResult.idl"
#include "bosdyn_msgs/msg/ResponseHeader.idl"
#include "bosdyn_msgs/msg/TickResponseStatus.idl"
#include "bosdyn_msgs/msg/VariableDeclaration.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct TickResponse {
      @verbatim (language="comment", text=
        "Response with the results of the tick." "\n"
        "Remote services should strive to return quickly, even if only returning RUNNING." "\n"
        "Common response header.")
      bosdyn_msgs::msg::ResponseHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "Possible results from the node. The FAILURE, RUNNING, and SUCCESS statuses map to the" "\n"
        "behavior tree terms, all others indicate an error in the TickRequest." "\n"
        "Result of the current tick.")
      bosdyn_msgs::msg::TickResponseStatus status;

      @verbatim (language="comment", text=
        "Need to provide leases on these resources.")
      sequence<string> missing_lease_resources;

      @verbatim (language="comment", text=
        "Details about how any leases were used." "\n"
        "Allowed to be empty, if leases were not actually used.")
      sequence<bosdyn_msgs::msg::LeaseUseResult> lease_use_results;

      @verbatim (language="comment", text=
        "Filled out when status is STATUS_MISSING_INPUTS, indicating what inputs were not in the" "\n"
        "request.")
      sequence<bosdyn_msgs::msg::VariableDeclaration> missing_inputs;

      @verbatim (language="comment", text=
        "If you need to report other error details, you can use this field.")
      string error_message;

      @verbatim (language="comment", text=
        "Filled out if status is STATUS_CUSTOM_PARAMS_ERROR.")
      bosdyn_msgs::msg::CustomParamError custom_param_error;

      boolean custom_param_error_is_set;
    };
  };
};
