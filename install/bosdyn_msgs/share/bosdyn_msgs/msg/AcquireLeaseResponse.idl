// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/AcquireLeaseResponse.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/AcquireLeaseResponseStatus.idl"
#include "bosdyn_msgs/msg/Lease.idl"
#include "bosdyn_msgs/msg/LeaseOwner.idl"
#include "bosdyn_msgs/msg/ResponseHeader.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct AcquireLeaseResponse {
      @verbatim (language="comment", text=
        "The AcquireLease response returns the lease for the desired resource if it could be obtained." "\n"
        "If a client is returned a new lease, the client should initiate a" "\n"
        "RetainLease bidirectional streaming request immediately after completion" "\n"
        "of AcquireLease." "\n"
        "Common response Header.")
      bosdyn_msgs::msg::ResponseHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "Return status for the request.")
      bosdyn_msgs::msg::AcquireLeaseResponseStatus status;

      @verbatim (language="comment", text=
        "The lease for the resource. Only set if status field == STATUS_OK.")
      bosdyn_msgs::msg::Lease lease;

      boolean lease_is_set;

      @verbatim (language="comment", text=
        "The owner for the lease. Set if status field == OK or status field ==" "\n"
        "RESOURCE_ALREADY_CLAIMED.")
      bosdyn_msgs::msg::LeaseOwner lease_owner;

      boolean lease_owner_is_set;
    };
  };
};
