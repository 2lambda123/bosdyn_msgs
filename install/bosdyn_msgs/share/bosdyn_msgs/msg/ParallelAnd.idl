// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ParallelAnd.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/Node.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ParallelAnd {
      @verbatim (language="comment", text=
        "Run many child nodes together, returning only after they have all completed or an" "\n"
        "early exit is triggered.")
      sequence<bosdyn_msgs::msg::Node> children;

      @verbatim (language="comment", text=
        "Boolean to finish every child node. If this is false, if one of the nodes fails, the whole" "\n"
        "ParallelAnd will stop & return the failure immediately." "\n"
        "If this is true, if one of the nodes fails, the ParallelAnd will continue to run until all" "\n"
        "the children have exited, then report the failure." "\n"
        "If a node raises an error, the error will always be reported immediately." "\n"
        "Default false.")
      boolean finish_every_node;
    };
  };
};
