// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/UploadGraphResponseStatus.msg
// generated code does not contain a copyright notice


module bosdyn_msgs {
  module msg {
    module UploadGraphResponseStatus_Constants {
      const int8 STATUS_UNKNOWN = 0;
      const int8 STATUS_OK = 1;
      @verbatim (language="comment", text=
        "Can't upload the graph because it was too large for the license.")
      const int8 STATUS_MAP_TOO_LARGE_LICENSE = 2;
      @verbatim (language="comment", text=
        "The graph or its anchoring are invalid. See the ValidationStatus for more details.")
      const int8 STATUS_INVALID_GRAPH = 3;
      @verbatim (language="comment", text=
        "The sensor data associated with this graph is incompatible with the current robot. A common example" "\n"        "would be trying to upload a map recorded on a robot that had LIDAR to a robot that did not, or vice" "\n"        "versa.")
      const int8 STATUS_INCOMPATIBLE_SENSORS = 4;
      @verbatim (language="comment", text=
        "There is an error associated with one of the area callbacks in this graph.")
      const int8 STATUS_AREA_CALLBACK_ERROR = 5;
    };
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct UploadGraphResponseStatus {
      int8 value;
    };
  };
};
