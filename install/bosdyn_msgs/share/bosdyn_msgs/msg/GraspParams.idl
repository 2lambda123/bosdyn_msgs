// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/GraspParams.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/AllowableOrientation.idl"
#include "bosdyn_msgs/msg/GraspPositionConstraint.idl"
#include "bosdyn_msgs/msg/ManipulationCameraSource.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct GraspParams {
      @verbatim (language="comment", text=
        "Where the grasp is on the hand.  Set to 0 to be a (default) palm grasp, where the object will" "\n"
        "be pressed against the gripper's palm plate.  Set to 1.0 to be a fingertip grasp, where the" "\n"
        "robot will try to pick up the target with just the tip of its fingers." "\n"
        "Intermediate values move the grasp location between the two extremes.")
      float grasp_palm_to_fingertip;

      @verbatim (language="comment", text=
        "Frame name for the frame that the constraints in allowable_orientation are expressed in.")
      string grasp_params_frame_name;

      @verbatim (language="comment", text=
        "Optional constraints about the orientation of the grasp.  This field lets you specify things" "\n"
        "like \"only do a top down grasp,\" \"grasp only from this direction,\" or \"grasp with the gripper" "\n"
        "upside-down.\"  If you don't pass anything, the robot will automatically search for a good" "\n"
        "grasp orientation.")
      sequence<bosdyn_msgs::msg::AllowableOrientation> allowable_orientation;

      @verbatim (language="comment", text=
        "Optional parameter on how much the robot is allowed to move the grasp from where the user" "\n"
        "requested.  Set this to be GRASP_POSITION_CONSTRAINT_FIXED_AT_USER_POSITION to get a grasp" "\n"
        "that is at the exact position you requested, but has less or no automatic grasp selection" "\n"
        "help in position.")
      bosdyn_msgs::msg::GraspPositionConstraint position_constraint;

      @verbatim (language="comment", text=
        "Optional hint about which camera was used to generate the target points.  The robot will" "\n"
        "attempt to correct for calibration error between the arm and the body cameras.")
      bosdyn_msgs::msg::ManipulationCameraSource manipulation_camera_source;
    };
  };
};
