// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/CreateWaypointResponse.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/CreateWaypointResponseStatus.idl"
#include "bosdyn_msgs/msg/Edge.idl"
#include "bosdyn_msgs/msg/LeaseUseResult.idl"
#include "bosdyn_msgs/msg/LicenseInfoStatus.idl"
#include "bosdyn_msgs/msg/MapStats.idl"
#include "bosdyn_msgs/msg/ResponseHeader.idl"
#include "bosdyn_msgs/msg/Waypoint.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct CreateWaypointResponse {
      @verbatim (language="comment", text=
        "The CreateWaypoint response message contains the complete waypoint, and the associated" "\n"
        "edge connecting this waypoint to the graph when the request succeeds." "\n"
        "Common response header.")
      bosdyn_msgs::msg::ResponseHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "The waypoint that was just created.")
      bosdyn_msgs::msg::Waypoint created_waypoint;

      boolean created_waypoint_is_set;

      @verbatim (language="comment", text=
        "The edge connecting the waypoint just created with the last created waypoint in the map.")
      bosdyn_msgs::msg::Edge created_edge;

      boolean created_edge_is_set;

      @verbatim (language="comment", text=
        "Return status for the request.")
      bosdyn_msgs::msg::CreateWaypointResponseStatus status;

      @verbatim (language="comment", text=
        "The results/status of the lease provided.")
      bosdyn_msgs::msg::LeaseUseResult lease_use_result;

      boolean lease_use_result_is_set;

      @verbatim (language="comment", text=
        "If the status is STATUS_MISSING_FIDUCIALS, the following fiducials" "\n"
        "were not visible to the robot when trying to create the waypoint.")
      sequence<int32> missing_fiducials;

      @verbatim (language="comment", text=
        "If the status is STATUS_FIDUCIAL_POSE_NOT_OK, these are the fiducials that could not be" "\n"
        "localized confidently.")
      sequence<int32> bad_pose_fiducials;

      @verbatim (language="comment", text=
        "Large graphs can only be uploaded if the license permits them. Recording" "\n"
        "will stop automatically when the graph gets too large. If CreateWaypointResponse" "\n"
        "is requested after the graph gets too large, it will fail, and license" "\n"
        "status will be filled out.")
      bosdyn_msgs::msg::LicenseInfoStatus license_status;

      @verbatim (language="comment", text=
        "General statistics of the map loaded in GraphNav.")
      bosdyn_msgs::msg::MapStats map_stats;

      boolean map_stats_is_set;
    };
  };
};
