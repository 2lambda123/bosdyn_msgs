// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ManipulationFeedbackState.msg
// generated code does not contain a copyright notice


module bosdyn_msgs {
  module msg {
    module ManipulationFeedbackState_Constants {
      const int8 MANIP_STATE_UNKNOWN = 0;
      const int8 MANIP_STATE_DONE = 1;
      const int8 MANIP_STATE_SEARCHING_FOR_GRASP = 2;
      const int8 MANIP_STATE_MOVING_TO_GRASP = 3;
      const int8 MANIP_STATE_GRASPING_OBJECT = 4;
      const int8 MANIP_STATE_PLACING_OBJECT = 5;
      const int8 MANIP_STATE_GRASP_SUCCEEDED = 6;
      const int8 MANIP_STATE_GRASP_FAILED = 7;
      const int8 MANIP_STATE_GRASP_PLANNING_SUCCEEDED = 8;
      const int8 MANIP_STATE_GRASP_PLANNING_NO_SOLUTION = 9;
      @verbatim (language="comment", text=
        "Note: if you are experiencing raycast failures during grasping, consider using a different" "\n"        "grasping call that does not require the robot to automatically walk up to the grasp.")
      const int8 MANIP_STATE_GRASP_FAILED_TO_RAYCAST_INTO_MAP = 10;
      @verbatim (language="comment", text=
        "The grasp planner is waiting for the gaze to have the target object not on the edge of the" "\n"        "camera view.  If you are seeing this in an automatic mode, the robot will soon retarget the" "\n"        "grasp for you.  If you are seeing this in a non-auto mode, you'll need to change your gaze" "\n"        "to have the target object more in the center of the hand-camera's view.")
      const int8 MANIP_STATE_GRASP_PLANNING_WAITING_DATA_AT_EDGE = 11;
      const int8 MANIP_STATE_WALKING_TO_OBJECT = 12;
      const int8 MANIP_STATE_ATTEMPTING_RAYCASTING = 13;
      const int8 MANIP_STATE_MOVING_TO_PLACE = 14;
      const int8 MANIP_STATE_PLACE_FAILED_TO_RAYCAST_INTO_MAP = 15;
      const int8 MANIP_STATE_PLACE_SUCCEEDED = 16;
      const int8 MANIP_STATE_PLACE_FAILED = 17;
    };
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ManipulationFeedbackState {
      int8 value;
    };
  };
};
