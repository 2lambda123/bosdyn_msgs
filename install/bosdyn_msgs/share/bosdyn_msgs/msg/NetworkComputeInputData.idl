// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/NetworkComputeInputData.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/NetworkComputeInputDataOneOfInput.idl"
#include "bosdyn_msgs/msg/NetworkComputeInputDataRotateImage.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct NetworkComputeInputData {
      @verbatim (language="comment", text=
        "DEPRECATED as of 3.3. Use NetworkComputeInputDataBridge instead." "\n"
        "NetworkComputeInputData is multipurpose.  It's used both at runtime to call a NCB" "\n"
        "worker \"run right now with this data\" AND it's embedded in missions to say \"when" "\n"
        "you run this action, run this NCB worker with an image from this camera\".  When" "\n"
        "embedded in missions, we store which camera source and service to take a picture from" "\n"
        "at runtime.  At runtime, the ImageSourceAndService is converted to an actual image" "\n"
        "by the NetworkComputeBridge service.  If you're writing a worker, you can always" "\n"
        "expect to receive an actual image.")
      bosdyn_msgs::msg::NetworkComputeInputDataOneOfInput input;

      @verbatim (language="comment", text=
        "Other data that isn't an image.  NetworkComputeBridge service will pass it through" "\n"
        "to the remote server so you can do computation on arbitrary data." "\n"
        "    google.protobuf.Any other_data = 3;" "\n"
        "Name of the model to be run on the input data.")
      string model_name;

      @verbatim (language="comment", text=
        "Minimum confidence an object must have to be returned. Detections below this" "\n"
        "confidence threshold will be suppressed in the response.")
      @unit (value="0.0 - 1.0")
      float min_confidence;

      @verbatim (language="comment", text=
        "Options for rotating the image before processing. When unset, no rotation is applied." "\n"
        "Rotation is supported for data from image services that provide a FrameTreeSnapshot" "\n"
        "defining the sensor's frame with respect to Spot's body and vision frames." "\n"
        "Field is ignored for non-image input." "\n"
        "DEPRECATED as of 3.3. Please rotate the image client-side before passing it to NCB worker.")
      bosdyn_msgs::msg::NetworkComputeInputDataRotateImage rotate_image;
    };
  };
};
