// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ArmJointTrajectory.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/ArmJointTrajectoryPoint.idl"
#include "builtin_interfaces/msg/Time.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ArmJointTrajectory {
      @verbatim (language="comment", text=
        "This allows a user to move the arm's joints directly. Each of the arm's joints will never move" "\n"
        "faster than maximum_velocity and never accelerate faster than maximum_acceleration. The user can" "\n"
        "specify a trajectory of joint positions and optional velocities for the arm to follow. The" "\n"
        "trajectory will be acted upon as follows. If a single trajectory point with no time is provided," "\n"
        "the arm will take the joint currently furthest away from the goal pose and plan a minimum time" "\n"
        "trajectory such that the joint accelerates at maximum_acceleration, coasts at maximum_velocity," "\n"
        "and decelerates at maximum_acceleration. The other joints will accelerate at" "\n"
        "maximum_acceleration, but then coast at a slower speed such that all joints arrive at the goal" "\n"
        "pose simultaneously with zero velocity. If the user provides trajectory times, the robot will fit" "\n"
        "a piece-wise cubic trajectory (continuous position and velocity) to the user's requested" "\n"
        "positions and (optional) velocities. If the requested trajectory is not achievable because it" "\n"
        "will violate position limits or the maximum_velocity or maximum_acceleration, the robot will pick" "\n"
        "a trajectory that is as close as possible to the user requested without violating velocity or" "\n"
        "acceleration limits." "\n"
        "" "\n"
        "If the robot is not hitting the desired trajectory, try increasing the time between knot points," "\n"
        "increasing the max velocity and acceleration, or only specifying joint position goals without a" "\n"
        "velocity" "\n"
        "The points in our trajectory. (positions, (optional) velocity, (optional) time)")
      sequence<bosdyn_msgs::msg::ArmJointTrajectoryPoint> points;

      @verbatim (language="comment", text=
        "All trajectory points specify times relative to this reference time. The reference" "\n"
        "time should be in robot clock. If this field is not included, this time will be" "\n"
        "the receive time of the command.")
      builtin_interfaces::msg::Time reference_time;

      boolean reference_time_is_set;

      @verbatim (language="comment", text=
        "The maximum velocity in rad/s that any joint is allowed to achieve." "\n"
        "If this field is not set, a default value will be used.")
      double maximum_velocity;

      boolean maximum_velocity_is_set;

      @verbatim (language="comment", text=
        "The maximum acceleration in rad/s^2 that any joint is allowed to" "\n"
        "achieve. If this field is not set, a default value will be used.")
      double maximum_acceleration;

      boolean maximum_acceleration_is_set;
    };
  };
};
