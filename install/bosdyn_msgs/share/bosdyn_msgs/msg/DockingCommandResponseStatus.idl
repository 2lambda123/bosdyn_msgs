// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/DockingCommandResponseStatus.msg
// generated code does not contain a copyright notice


module bosdyn_msgs {
  module msg {
    module DockingCommandResponseStatus_Constants {
      @verbatim (language="comment", text=
        "Status is not specified.")
      const int8 STATUS_UNKNOWN = 0;
      @verbatim (language="comment", text=
        "Docking command accepted")
      const int8 STATUS_OK = 1;
      @verbatim (language="comment", text=
        "ERROR: Lease rejected")
      const int8 STATUS_ERROR_LEASE = 2;
      @verbatim (language="comment", text=
        "ERROR: Dock fiducial not found.")
      const int8 STATUS_ERROR_DOCK_NOT_FOUND = 3;
      @verbatim (language="comment", text=
        "ERROR: Trying to undock while not docked")
      const int8 STATUS_ERROR_NOT_DOCKED = 4;
      @verbatim (language="comment", text=
        "ERROR: Trying to dock when the arm is holding an object.")
      const int8 STATUS_ERROR_GRIPPER_HOLDING_ITEM = 5;
      @verbatim (language="comment", text=
        "ERROR: The dock is not available for docking.")
      const int8 STATUS_ERROR_NOT_AVAILABLE = 6;
      @verbatim (language="comment", text=
        "ERROR: Internal system error during execution" "\n"        "This error cannot be resolved by issuing a new DockingCommand" "\n"        "Check the returned message for details")
      const int8 STATUS_ERROR_SYSTEM = 7;
    };
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct DockingCommandResponseStatus {
      int8 value;
    };
  };
};
