// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ArmSurfaceContactRequest.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/ArmSurfaceContactRequestAdmittanceSetting.idl"
#include "bosdyn_msgs/msg/ArmSurfaceContactRequestAxisMode.idl"
#include "bosdyn_msgs/msg/ArmSurfaceContactRequestOneOfJointConfiguration.idl"
#include "bosdyn_msgs/msg/ClawGripperCommandRequest.idl"
#include "bosdyn_msgs/msg/SE3Trajectory.idl"
#include "geometry_msgs/msg/Pose.idl"
#include "geometry_msgs/msg/Vector3.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ArmSurfaceContactRequest {
      @verbatim (language="comment", text=
        "The root frame is used to set the optional task frame that all trajectories are" "\n"
        "specified with respect to.  If the optional task frame is left un-specified it defaults" "\n"
        "to the identity transform and the root frame becomes the task frame.")
      string root_frame_name;

      @verbatim (language="comment", text=
        "The tool pose relative to the parent link (wrist)." "\n"
        "Defaults to" "\n"
        "   [0.19557 0 0]" "\n"
        "   [1 0 0 0]" "\n"
        "a frame with it's origin slightly in front of the gripper's palm plate aligned with wrists orientation.")
      geometry_msgs::msg::Pose wrist_tform_tool;

      boolean wrist_tform_tool_is_set;

      @verbatim (language="comment", text=
        "The fields below are specified in this optional task frame.  If unset int defaults" "\n"
        "to the identity transform and all quantities are therefore expressed in the root_frame_name.")
      geometry_msgs::msg::Pose root_tform_task;

      boolean root_tform_task_is_set;

      @verbatim (language="comment", text=
        "A 3D pose trajectory for the tool expressed in the task frame, e.g. task_T_tool." "\n"
        "This pose trajectory is optional if requesting a pure wrench at the end-effector," "\n"
        "otherwise required for position or mixed force/position end-effector requests.")
      bosdyn_msgs::msg::SE3Trajectory pose_trajectory_in_task;

      boolean pose_trajectory_in_task_is_set;

      @verbatim (language="comment", text=
        "Optional Maximum acceleration magnitude of the end-effector." "\n"
        "Valid ranges (0, 20]")
      double maximum_acceleration;

      boolean maximum_acceleration_is_set;

      @verbatim (language="comment", text=
        "Optional Maximum linear velocity magnitude of the end-effector. (m/s)")
      double max_linear_velocity;

      boolean max_linear_velocity_is_set;

      @verbatim (language="comment", text=
        "Optional Maximum angular velocity magnitude of the end-effector. (rad/s)")
      double max_angular_velocity;

      boolean max_angular_velocity_is_set;

      @verbatim (language="comment", text=
        "Maximum allowable tracking error of the tool frame from the desired trajectory" "\n"
        "before the arm will stop moving and cancel the rest of the trajectory. When this limit is exceeded, the" "\n"
        "hand will stay at the pose it was at when it exceeded the tracking error, and any other part of the" "\n"
        "trajectory specified in the rest of this message will be ignored." "\n"
        "max position tracking error in meters")
      double max_pos_tracking_error;

      boolean max_pos_tracking_error_is_set;

      @verbatim (language="comment", text=
        "max orientation tracking error in radians")
      double max_rot_tracking_error;

      boolean max_rot_tracking_error_is_set;

      @verbatim (language="comment", text=
        "Set a \"preferred joint configuration\" for this trajectory. When near a singularity, the robot will move towards" "\n"
        "the specified pose. If no pose is provided (ie no value is set for this oneof), a default one will be" "\n"
        "chosen. If the user wishes to explicitly tell the robot to not prefer any pose, (useful if doing a" "\n"
        "local move, and the user wants to avoid large joint motions) they should set ignore_joint_configuration" "\n"
        "to be true. The robot's behavior around singularities will then be to simply minimize joint velocity," "\n"
        "resulting in the robot coming in and out of the singularity with similar joint angles")
      bosdyn_msgs::msg::ArmSurfaceContactRequestOneOfJointConfiguration joint_configuration;

      @verbatim (language="comment", text=
        "If an axis is set to position mode (default), read desired from SE3Trajectory command." "\n"
        "If mode is set to force, use the \"press_force_percentage\" field to determine force.")
      bosdyn_msgs::msg::ArmSurfaceContactRequestAxisMode x_axis;

      bosdyn_msgs::msg::ArmSurfaceContactRequestAxisMode y_axis;

      bosdyn_msgs::msg::ArmSurfaceContactRequestAxisMode z_axis;

      @verbatim (language="comment", text=
        "Amount of force to use on each axis, from 0 (no force) to 1.0 (maximum force), can also" "\n"
        "be negative.  Full range: [-1.0, 1.0]")
      geometry_msgs::msg::Vector3 press_force_percentage;

      boolean press_force_percentage_is_set;

      @verbatim (language="comment", text=
        "Parameters for controlling admittance.  By default, the robot will" "\n"
        "stop moving the arm when it encounters resistance.  You can control that reaction to" "\n"
        "make the robot stiffer or less stiff by changing the parameters." "\n"
        "Admittance settings for each axis in the admittance frame.")
      bosdyn_msgs::msg::ArmSurfaceContactRequestAdmittanceSetting xy_admittance;

      bosdyn_msgs::msg::ArmSurfaceContactRequestAdmittanceSetting z_admittance;

      @verbatim (language="comment", text=
        "Cross term, making force in the XY axis cause movement in the z-axis." "\n"
        "By default is OFF" "\n"
        "Setting this value will make the arm move in the negative Z-axis whenever it feels force in" "\n"
        "the XY axis.")
      bosdyn_msgs::msg::ArmSurfaceContactRequestAdmittanceSetting xy_to_z_cross_term_admittance;

      @verbatim (language="comment", text=
        "Specifies a force that the body should expect to feel.  This allows the robot to \"lean into\"" "\n"
        "an external force.  Be careful using this field, because if you lie to the robot, it can" "\n"
        "fall over.")
      geometry_msgs::msg::Vector3 bias_force_ewrt_body;

      boolean bias_force_ewrt_body_is_set;

      @verbatim (language="comment", text=
        "Gripper control")
      bosdyn_msgs::msg::ClawGripperCommandRequest gripper_command;

      boolean gripper_command_is_set;

      @verbatim (language="comment", text=
        "Set to true to have robot is walk around to follow the hand.")
      boolean is_robot_following_hand;
    };
  };
};
