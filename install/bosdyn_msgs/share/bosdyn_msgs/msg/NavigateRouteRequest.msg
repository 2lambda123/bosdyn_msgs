# AUTOMATICALLY GENERATED BY PROTO CONVERSION

# A NavigateRoute request message specifies a route of waypoints/edges and parameters
# about how to get there. Like NavigateTo, this command returns immediately upon
# processing and provides a command_id that the user can use along with a NavigationFeedbackRequest RPC to
# poll the system for feedback on this command. The RPC does not block until the route is completed.

# Common request header.
bosdyn_msgs/RequestHeader header
bool header_is_set

# The Lease to show ownership of the robot.
bosdyn_msgs/Lease[] leases

# A route for the robot to follow.
bosdyn_msgs/Route route
bool route_is_set

# What should the robot do if it is not at the expected point in the route, or the route is
# blocked.
bosdyn_msgs/RouteFollowingParams route_follow_params
bool route_follow_params_is_set

# How to travel the route.
bosdyn_msgs/TravelParams travel_params
bool travel_params_is_set

# The timestamp (in robot time) that the navigation command is valid until.
builtin_interfaces/Time end_time
bool end_time_is_set

# Identifier provided by the time sync service to verify time sync between robot and client.
string clock_identifier

# If provided, graph_nav will move the robot to an SE2 pose relative to the final waypoint
# in the route.
# Note that the robot will treat this as a simple goto request. It will first arrive at the
# destination waypoint, and then travel in a straight line from the destination waypoint to the
# offset goal, attempting to avoid obstacles along the way.
bosdyn_msgs/SE2Pose destination_waypoint_tform_body_goal
bool destination_waypoint_tform_body_goal_is_set

# Unique identifier for the command. If 0, this is a new command, otherwise it is a continuation
# of an existing command.
uint32 command_id
