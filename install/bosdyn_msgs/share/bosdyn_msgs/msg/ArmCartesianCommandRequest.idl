// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ArmCartesianCommandRequest.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/ArmCartesianCommandRequestAxisMode.idl"
#include "bosdyn_msgs/msg/ArmCartesianCommandRequestOneOfJointConfiguration.idl"
#include "bosdyn_msgs/msg/SE3Trajectory.idl"
#include "bosdyn_msgs/msg/WrenchTrajectory.idl"
#include "geometry_msgs/msg/Pose.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ArmCartesianCommandRequest {
      @verbatim (language="comment", text=
        "The root frame is used to set the optional task frame that all trajectories are" "\n"
        "specified with respect to.  If the optional task frame is left un-specified it defaults" "\n"
        "to the identity transform and the root frame becomes the task frame.")
      string root_frame_name;

      @verbatim (language="comment", text=
        "The tool pose relative to the parent link (wrist)." "\n"
        "Defaults to" "\n"
        "   [0.19557 0 0]" "\n"
        "   [1 0 0 0]" "\n"
        "a frame with it's origin slightly in front of the gripper's palm plate aligned with" "\n"
        "wrist's orientation.")
      geometry_msgs::msg::Pose wrist_tform_tool;

      boolean wrist_tform_tool_is_set;

      @verbatim (language="comment", text=
        "The fields below are specified in this optional task frame.  If unset it defaults" "\n"
        "to the identity transform and all quantities are therefore expressed in the" "\n"
        "root_frame_name.")
      geometry_msgs::msg::Pose root_tform_task;

      boolean root_tform_task_is_set;

      @verbatim (language="comment", text=
        "A 3D pose trajectory for the tool expressed in the task frame, e.g. task_T_tool." "\n"
        "This pose trajectory is optional if requesting a pure wrench at the end-effector," "\n"
        "otherwise required for position or mixed force/position end-effector requests.")
      bosdyn_msgs::msg::SE3Trajectory pose_trajectory_in_task;

      boolean pose_trajectory_in_task_is_set;

      @verbatim (language="comment", text=
        "Optional Maximum acceleration magnitude of the end-effector." "\n"
        "Valid ranges (0, 20]")
      double maximum_acceleration;

      boolean maximum_acceleration_is_set;

      @verbatim (language="comment", text=
        "Optional Maximum linear velocity magnitude of the end-effector. (m/s)")
      double max_linear_velocity;

      boolean max_linear_velocity_is_set;

      @verbatim (language="comment", text=
        "Optional Maximum angular velocity magnitude of the end-effector. (rad/s)")
      double max_angular_velocity;

      boolean max_angular_velocity_is_set;

      @verbatim (language="comment", text=
        "Maximum allowable tracking error of the tool frame from the desired trajectory" "\n"
        "before the arm will stop moving and cancel the rest of the trajectory. When this limit is" "\n"
        "exceeded, the hand will stay at the pose it was at when it exceeded the tracking error," "\n"
        "and any other part of the trajectory specified in the rest of this message will be" "\n"
        "ignored. max position tracking error in meters")
      double max_pos_tracking_error;

      boolean max_pos_tracking_error_is_set;

      @verbatim (language="comment", text=
        "max orientation tracking error in radians")
      double max_rot_tracking_error;

      boolean max_rot_tracking_error_is_set;

      @verbatim (language="comment", text=
        "Set a \"preferred joint configuration\" for this trajectory. When near a singularity, the" "\n"
        "robot will move towards the specified pose. If no pose is provided (i.e. no value is set" "\n"
        "for this oneof), a default one will be chosen. If the user wishes to explicitly tell the" "\n"
        "robot to not prefer any pose, (useful if doing a local move, and the user wants to avoid" "\n"
        "large joint motions) they should set ignore_joint_configuration to be true. The robot's" "\n"
        "behavior around singularities will then be to simply minimize joint velocity, resulting" "\n"
        "in the robot coming in and out of the singularity with similar joint angles")
      bosdyn_msgs::msg::ArmCartesianCommandRequestOneOfJointConfiguration joint_configuration;

      @verbatim (language="comment", text=
        "If an axis is set to position mode (default), read desired from SE3Trajectory trajectory" "\n"
        "command.  If mode is set to Force, read desired from WrenchTrajectory wrench_trajectory" "\n"
        "command.  This supports hybrid control of the arm where users can specify, for example, Z" "\n"
        "to be in force control with X and Y in position control.  The elements are expressed in" "\n"
        "the same task_frame as the trajectories.")
      bosdyn_msgs::msg::ArmCartesianCommandRequestAxisMode x_axis;

      bosdyn_msgs::msg::ArmCartesianCommandRequestAxisMode y_axis;

      bosdyn_msgs::msg::ArmCartesianCommandRequestAxisMode z_axis;

      bosdyn_msgs::msg::ArmCartesianCommandRequestAxisMode rx_axis;

      bosdyn_msgs::msg::ArmCartesianCommandRequestAxisMode ry_axis;

      bosdyn_msgs::msg::ArmCartesianCommandRequestAxisMode rz_axis;

      @verbatim (language="comment", text=
        "A force/torque trajectory for the tool expressed in the task frame." "\n"
        "This trajectory is optional if requesting a pure pose at the end-effector," "\n"
        "otherwise required for force or mixed force/position end-effector requests.")
      bosdyn_msgs::msg::WrenchTrajectory wrench_trajectory_in_task;

      boolean wrench_trajectory_in_task_is_set;
    };
  };
};
