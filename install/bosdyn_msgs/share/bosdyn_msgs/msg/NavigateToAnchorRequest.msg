# AUTOMATICALLY GENERATED BY PROTO CONVERSION

# The NavigateToAnchorRequest can be used to command GraphNav to drive the robot to a specific
# place in an anchoring. GraphNav will find the waypoint that has the shortest path length from
# robot's current position but is still close to the goal. GraphNav will plan a path through the
# map which most efficiently gets the robot to the goal waypoint, and will then travel
# in a straight line from the destination waypoint to the offset goal, attempting to avoid
# obstacles along the way.
# Parameters are provided which influence how GraphNav will generate and follow the path.
# This RPC returns immediately after the request is processed. It does not block until GraphNav
# completes the path to the goal waypoint. The user is expected to periodically check the status
# of the NavigateToAnchor command using the NavigationFeedbackRequest RPC.

# Common request header.
bosdyn_msgs/RequestHeader header
bool header_is_set

# The Leases to show ownership of the robot and the graph.
bosdyn_msgs/Lease[] leases

# The goal, expressed with respect to the seed frame of the current anchoring.
# The robot will use the z value to find the goal waypoint, but the final z height the robot
# achieves will depend on the terrain height at the offset from the goal.
geometry_msgs/Pose seed_tform_goal
bool seed_tform_goal_is_set

# These parameters control selection of the goal waypoint. In seed frame, they are the x, y,
# and z tolerances with respect to the goal pose within which waypoints will be considered.
# If these values are negative, or too small, reasonable defaults will be used.
geometry_msgs/Vector3 goal_waypoint_rt_seed_ewrt_seed_tolerance
bool goal_waypoint_rt_seed_ewrt_seed_tolerance_is_set

# Preferences on how to pick the route.
bosdyn_msgs/RouteGenParams route_params
bool route_params_is_set
# Parameters that define how to traverse and end the route.
bosdyn_msgs/TravelParams travel_params
bool travel_params_is_set

# The timestamp (in robot time) that the navigation command is valid until.
builtin_interfaces/Time end_time
bool end_time_is_set

# Identifier provided by the time sync service to verify time sync between robot and client.
string clock_identifier

# Unique identifier for the command. If 0, this is a new command, otherwise it is a continuation
# of an existing command. If this is a continuation of an existing command, all parameters will be
# ignored, and the old parameters will be preserved.
uint32 command_id
