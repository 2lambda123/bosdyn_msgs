// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/NavigateToRequest.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/Lease.idl"
#include "bosdyn_msgs/msg/RequestHeader.idl"
#include "bosdyn_msgs/msg/RouteFollowingParamsRouteBlockedBehavior.idl"
#include "bosdyn_msgs/msg/RouteGenParams.idl"
#include "bosdyn_msgs/msg/SE2Pose.idl"
#include "bosdyn_msgs/msg/TravelParams.idl"
#include "builtin_interfaces/msg/Time.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct NavigateToRequest {
      @verbatim (language="comment", text=
        "The NavigateToRequest can be used to command GraphNav to drive the robot to a specific waypoint." "\n"
        "GraphNav will plan a path through the map which most efficiently gets the robot to the specified goal waypoint." "\n"
        "Parameters are provided which influence how GraphNav will generate and follow the path." "\n"
        "This RPC returns immediately after the request is processed. It does not block until GraphNav completes the path" "\n"
        "to the goal waypoint. The user is expected to periodically check the status of the NavigateTo command using" "\n"
        "the NavigationFeedbackRequest RPC." "\n"
        "Common request header.")
      bosdyn_msgs::msg::RequestHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "The Leases to show ownership of the robot and the graph.")
      sequence<bosdyn_msgs::msg::Lease> leases;

      @verbatim (language="comment", text=
        "ID of the waypoint to go to.")
      string destination_waypoint_id;

      @verbatim (language="comment", text=
        "Preferences on how to pick the route.")
      bosdyn_msgs::msg::RouteGenParams route_params;

      boolean route_params_is_set;

      @verbatim (language="comment", text=
        "Parameters that define how to traverse and end the route.")
      bosdyn_msgs::msg::TravelParams travel_params;

      boolean travel_params_is_set;

      @verbatim (language="comment", text=
        "The timestamp (in robot time) that the navigation command is valid until.")
      builtin_interfaces::msg::Time end_time;

      boolean end_time_is_set;

      @verbatim (language="comment", text=
        "Identifier provided by the time sync service to verify time sync between robot and client.")
      string clock_identifier;

      @verbatim (language="comment", text=
        "If provided, graph_nav will move the robot to an SE2 pose relative to the waypoint." "\n"
        "Note that the robot will treat this as a simple goto request. It will first arrive at the" "\n"
        "destination waypoint, and then travel in a straight line from the destination waypoint to the" "\n"
        "offset goal, attempting to avoid obstacles along the way.")
      bosdyn_msgs::msg::SE2Pose destination_waypoint_tform_body_goal;

      boolean destination_waypoint_tform_body_goal_is_set;

      @verbatim (language="comment", text=
        "Unique identifier for the command. If 0, this is a new command, otherwise it is a continuation" "\n"
        "of an existing command. If this is a continuation of an existing command, all parameters will be" "\n"
        "ignored, and the old parameters will be preserved.")
      uint32 command_id;

      @verbatim (language="comment", text=
        "Defines robot behavior when route is blocked. Defaults to reroute when route is blocked.")
      bosdyn_msgs::msg::RouteFollowingParamsRouteBlockedBehavior route_blocked_behavior;
    };
  };
};
