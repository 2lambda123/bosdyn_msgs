// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ConstrainedManipulationCommandRequestTaskType.msg
// generated code does not contain a copyright notice


module bosdyn_msgs {
  module msg {
    module ConstrainedManipulationCommandRequestTaskType_Constants {
      const int8 TASK_TYPE_UNKNOWN = 0;
      @verbatim (language="comment", text=
        "This task type corresponds to circular tasks where" "\n"        "both the end-effector position and orientation rotate about a circle to manipulate." "\n"        "The constrained manipulation logic will generate forces and torques in this case." "\n"        "Example tasks are: A lever or a ball valve with a solid grasp" "\n"        "This task type will require an initial force vector specified" "\n"        "in init_wrench_direction_in_frame_name. A torque vector can be specified" "\n"        "as well if a good initial guess of the axis of rotation of the task is available.")
      const int8 TASK_TYPE_SE3_CIRCLE_FORCE_TORQUE = 1;
      @verbatim (language="comment", text=
        "This task type corresponds to circular tasks that have an extra degree of freedom." "\n"        "In these tasks the end-effector position rotates about a circle" "\n"        "but the orientation does not need to follow a circle (can remain fixed)." "\n"        "The constrained manipulation logic will generate translational forces in this case." "\n"        "Example tasks are: A crank that has a loose handle and moves in a circle" "\n"        "and the end-effector is free to rotate about the handle in one direction." "\n"        "This task type will require an initial force vector specified" "\n"        "in init_wrench_direction_in_frame_name.")
      const int8 TASK_TYPE_R3_CIRCLE_EXTRADOF_FORCE = 2;
      @verbatim (language="comment", text=
        "This task type corresponds to purely rotational tasks." "\n"        "In these tasks the orientation of the end-effector follows a circle," "\n"        "and the position remains fixed. The robot will apply a torque at the" "\n"        "end-effector in these tasks." "\n"        "Example tasks are: rotating a knob or valve that does not have a lever arm." "\n"        "This task type will require an initial torque vector specified" "\n"        "in init_wrench_direction_in_frame_name.")
      const int8 TASK_TYPE_SE3_ROTATIONAL_TORQUE = 3;
      @verbatim (language="comment", text=
        "This task type corresponds to circular tasks where" "\n"        "the end-effector position and orientation rotate about a circle" "\n"        "but the orientation does always strictly follow the circle due to slips." "\n"        "The constrained manipulation logic will generate translational forces in this case." "\n"        "Example tasks are: manipulating a cabinet where the grasp on handle is not very rigid" "\n"        "or can often slip." "\n"        "This task type will require an initial force vector specified" "\n"        "in init_wrench_direction_in_frame_name.")
      const int8 TASK_TYPE_R3_CIRCLE_FORCE = 4;
      @verbatim (language="comment", text=
        "This task type corresponds to linear tasks where" "\n"        "the end-effector position moves in a line" "\n"        "but the orientation does not need to change." "\n"        "The constrained manipulation logic will generate a force in this case." "\n"        "Example tasks are: A crank that has a loose handle, or manipulating" "\n"        "a cabinet where the grasp of the handle is loose and the end-effector is free" "\n"        "to rotate about the handle in one direction." "\n"        "This task type will require an initial force vector specified" "\n"        "in init_wrench_direction_in_frame_name.")
      const int8 TASK_TYPE_R3_LINEAR_FORCE = 5;
      @verbatim (language="comment", text=
        "This option simply holds the hand in place with stiff impedance control." "\n"        "You can use this mode at the beginning of a constrained manipulation task or to" "\n"        "hold position while transitioning between two different constrained manipulation" "\n"        "tasks. The target pose to hold will be the measured hand pose upon transitioning to" "\n"        "constrained manipulation or upon switching to this task type. This mode should only" "\n"        "be used during constrained manipulation tasks, since it uses impedance control to" "\n"        "hold the hand in place. This is not intended to stop the arm during position control" "\n"        "moves.")
      const int8 TASK_TYPE_HOLD_POSE = 6;
    };
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ConstrainedManipulationCommandRequestTaskType {
      int8 value;
    };
  };
};
