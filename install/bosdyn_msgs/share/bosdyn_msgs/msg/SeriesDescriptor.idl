// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/SeriesDescriptor.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/KeyStringValueString.idl"
#include "bosdyn_msgs/msg/SeriesDescriptorOneOfDataType.idl"
#include "bosdyn_msgs/msg/SeriesIdentifier.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct SeriesDescriptor {
      @verbatim (language="comment", text=
        "A description of a series of data blocks." "\n"
        "These data blocks may either represent binary messages of a variable size, or they may" "\n"
        " represent a sequence of samples of POD data samples: single/vector/matrix/... of integer" "\n"
        " or floating-point values." "\n"
        "This index for the series is unique within the data file.")
      uint32 series_index;

      @verbatim (language="comment", text=
        "This is the globally unique {key -> value} mapping to identify the series.")
      bosdyn_msgs::msg::SeriesIdentifier series_identifier;

      boolean series_identifier_is_set;

      @verbatim (language="comment", text=
        "This is a hash of the series_identifier." "\n"
        "The hash is the first 64 bits (read as a big-endian encoded uint64_t) of" "\n"
        " SHA1(S K1 V1 K2 V2 ...) where," "\n"
        "  - S is series identifier text," "\n"
        "  - K1 and V1 are the key and value of the first key and value of the `spec`," "\n"
        "  - K2 and V2 are the second key and value of the spec, etc..." "\n"
        "Here, all strings are encoded as utf-8, and keys are sorted lexicographically using this" "\n"
        " encoding (K1 < K2 < ...).")
      uint64 identifier_hash;

      bosdyn_msgs::msg::SeriesDescriptorOneOfDataType data_type;

      @verbatim (language="comment", text=
        "Annotations are a {key -> value} mapping for associating additional information with" "\n"
        " the series." "\n"
        "The format of annotation keys should be" "\n"
        "  {project-or-organization}/{annotation-name}" "\n"
        "For example, 'bosdyn/channel-name', 'bosdyn/protobuf-type'." "\n"
        "Annotation keys without a '/' are reserved." "\n"
        "The only current key in the reserved namespace is 'units': e.g., {'units': 'm/s2'}.")
      sequence<bosdyn_msgs::msg::KeyStringValueString> annotations;

      @verbatim (language="comment", text=
        "Labels for additional index values which should be attached to each DataDescriptor" "\n"
        " in the series." "\n"
        "See the description of \"additional_indexes\" in DataDescriptor.")
      sequence<string> additional_index_names;

      string description;
    };
  };
};
