// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/RobotState.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/BatteryState.idl"
#include "bosdyn_msgs/msg/BehaviorFaultState.idl"
#include "bosdyn_msgs/msg/CommsState.idl"
#include "bosdyn_msgs/msg/EStopState.idl"
#include "bosdyn_msgs/msg/FootState.idl"
#include "bosdyn_msgs/msg/KinematicState.idl"
#include "bosdyn_msgs/msg/ManipulatorState.idl"
#include "bosdyn_msgs/msg/PowerState.idl"
#include "bosdyn_msgs/msg/ServiceFaultState.idl"
#include "bosdyn_msgs/msg/SystemFaultState.idl"
#include "bosdyn_msgs/msg/TerrainState.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct RobotState {
      @verbatim (language="comment", text=
        "The current state of the robot." "\n"
        "Power state (e.g. motor power).")
      bosdyn_msgs::msg::PowerState power_state;

      boolean power_state_is_set;

      @verbatim (language="comment", text=
        "Battery state (e.g. charge, temperature, current).")
      sequence<bosdyn_msgs::msg::BatteryState> battery_states;

      @verbatim (language="comment", text=
        "Communication state (e.g. type of comms network).")
      sequence<bosdyn_msgs::msg::CommsState> comms_states;

      @verbatim (language="comment", text=
        "Different system faults for the robot.")
      bosdyn_msgs::msg::SystemFaultState system_fault_state;

      boolean system_fault_state_is_set;

      @verbatim (language="comment", text=
        "Because there may be multiple E-Stops, and because E-Stops may be supplied with payloads," "\n"
        "this is a repeated field instead of a hardcoded list.")
      sequence<bosdyn_msgs::msg::EStopState> estop_states;

      @verbatim (language="comment", text=
        "Kinematic state of the robot (e.g. positions, velocities, other frame information).")
      bosdyn_msgs::msg::KinematicState kinematic_state;

      boolean kinematic_state_is_set;

      @verbatim (language="comment", text=
        "Robot behavior fault state.")
      bosdyn_msgs::msg::BehaviorFaultState behavior_fault_state;

      boolean behavior_fault_state_is_set;

      @verbatim (language="comment", text=
        "The foot states (and contact information).")
      sequence<bosdyn_msgs::msg::FootState> foot_state;

      @verbatim (language="comment", text=
        "/ State of the manipulator, only populated if an arm is attached to the robot.")
      bosdyn_msgs::msg::ManipulatorState manipulator_state;

      boolean manipulator_state_is_set;

      @verbatim (language="comment", text=
        "Service faults for services registered with the robot.")
      bosdyn_msgs::msg::ServiceFaultState service_fault_state;

      boolean service_fault_state_is_set;

      @verbatim (language="comment", text=
        "Relevant terrain data beneath and around the robot")
      bosdyn_msgs::msg::TerrainState terrain_state;

      boolean terrain_state_is_set;
    };
  };
};
