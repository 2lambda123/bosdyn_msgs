// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/Element.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/Action.idl"
#include "bosdyn_msgs/msg/ActionWrapper.idl"
#include "bosdyn_msgs/msg/BatteryMonitor.idl"
#include "bosdyn_msgs/msg/FailureBehavior.idl"
#include "bosdyn_msgs/msg/Target.idl"
#include "builtin_interfaces/msg/Duration.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct Element {
      @verbatim (language="comment", text=
        "An Element is the basic building block of the autowalk." "\n"
        "The name of an element may be anything, but it is good practice to choose" "\n"
        "something that describes the physical location and action that is occurring" "\n"
        "(e.g., boiler room laser scan).")
      string name;

      @verbatim (language="comment", text=
        "Location the robot should navigate to.")
      bosdyn_msgs::msg::Target target;

      boolean target_is_set;

      @verbatim (language="comment", text=
        "Describes what to do if the robot fails to navigate to target.")
      bosdyn_msgs::msg::FailureBehavior target_failure_behavior;

      boolean target_failure_behavior_is_set;

      @verbatim (language="comment", text=
        "Action performed at target destination")
      bosdyn_msgs::msg::Action action;

      boolean action_is_set;

      @verbatim (language="comment", text=
        "Actions performed by the robot and/or payloads prior to and during an action.")
      bosdyn_msgs::msg::ActionWrapper action_wrapper;

      boolean action_wrapper_is_set;

      @verbatim (language="comment", text=
        "Describes what to do if the robot fails to execute the action.")
      bosdyn_msgs::msg::FailureBehavior action_failure_behavior;

      boolean action_failure_behavior_is_set;

      @verbatim (language="comment", text=
        "Set to true to skip element.")
      boolean is_skipped;

      @verbatim (language="comment", text=
        "If the mission requires more than one battery, the robot needs to return" "\n"
        "to the dock and charge before it can complete the mission." "\n"
        "This field defines the battery percentage thresholds that at which the robot" "\n"
        "should pause and resume mission execution." "\n"
        "Considering using various thresholds depending on the target's distance from the dock")
      bosdyn_msgs::msg::BatteryMonitor battery_monitor;

      boolean battery_monitor_is_set;

      @verbatim (language="comment", text=
        "Maximum duration of action execution time, including all wrappers." "\n"
        "If they take longer than this duration, the action will be considered a failure." "\n"
        "Not including, or including a zero duration will set the action to NOT have a" "\n"
        "timeout.")
      builtin_interfaces::msg::Duration action_duration;

      boolean action_duration_is_set;

      @verbatim (language="comment", text=
        "Unique identifier for this element.  This will be embedded in various Data Acquisition" "\n"
        "captures and various logging bundles.  This should be globally unique across all elements.")
      string id;
    };
  };
};
