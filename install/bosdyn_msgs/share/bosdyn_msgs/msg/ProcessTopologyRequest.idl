// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ProcessTopologyRequest.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/ProcessTopologyRequestParams.idl"
#include "bosdyn_msgs/msg/RequestHeader.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ProcessTopologyRequest {
      @verbatim (language="comment", text=
        "Processes a GraphNav map by creating additional edges. After processing," "\n"
        "a new subgraph is created containing additional edges to add to the map." "\n"
        "Edges are created between waypoints that are near each other. These waypoint pairs" "\n"
        "are called \"loop closures\", and are found by different means." "\n"
        "In general, if parameters are not provided, reasonable defaults will be used." "\n"
        "Note that this can be used to merge disconnected subgraphs from multiple recording" "\n"
        "sessions so long as they share fiducial observations." "\n"
        "Parameters for how to refine loop closure edges using iterative" "\n"
        "closest point matching." "\n"
        "Parameters for how to close loops using odometry. This infers which waypoints" "\n"
        "should be connected to one another based on the odometry measurements in the map." "\n"
        "Parameters for how to close a loop using fiducials (AprilTags). This infers" "\n"
        "which waypoints should be connected to one another based on shared observations" "\n"
        "of AprilTags." "\n"
        "Note that multiple disconnected subgraphs (for example from multiple recording sessions)" "\n"
        "can be merged this way." "\n"
        "Parameters for how to check for collisions when creating loop closures. The system" "\n"
        "will avoid creating edges in the map that the robot cannot actually traverse due to" "\n"
        "the presence of nearby obstacles." "\n"
        "Parameters which control topology processing. In general, anything which isn't filled out" "\n"
        "will be replaced by reasonable defaults." "\n"
        "Standard message header.")
      bosdyn_msgs::msg::RequestHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "Parameters. If not filled out, reasonable defaults will be used.")
      bosdyn_msgs::msg::ProcessTopologyRequestParams params;

      boolean params_is_set;

      @verbatim (language="comment", text=
        "If true, any processing should directly modify the map on the server." "\n"
        "Otherwise, the client is expected to upload the processing results (newly created edges)" "\n"
        "back to the server. The processing service shares memory with a map container service" "\n"
        "(e.g the GraphNav service).")
      boolean modify_map_on_server;
    };
  };
};
