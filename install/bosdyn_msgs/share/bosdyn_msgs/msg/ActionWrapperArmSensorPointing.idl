// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ActionWrapperArmSensorPointing.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/ArmJointTrajectory.idl"
#include "bosdyn_msgs/msg/BodyControlParamsBodyAssistForManipulation.idl"
#include "bosdyn_msgs/msg/SE2Pose.idl"
#include "bosdyn_msgs/msg/SE3Trajectory.idl"
#include "geometry_msgs/msg/Pose.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ActionWrapperArmSensorPointing {
      @verbatim (language="comment", text=
        "Arm Joint Move Command" "\n"
        "The joint trajectory to execute in the initial rough pointing joint move.")
      bosdyn_msgs::msg::ArmJointTrajectory joint_trajectory;

      boolean joint_trajectory_is_set;

      @verbatim (language="comment", text=
        "Arm Cartesian Command" "\n"
        "The tool pose relative to the parent link (wrist)." "\n"
        "Defaults to a frame with it's origin slightly in front of the gripper's palm plate" "\n"
        "aligned with the wrist's orientation.")
      geometry_msgs::msg::Pose wrist_tform_tool;

      boolean wrist_tform_tool_is_set;

      @verbatim (language="comment", text=
        "A 3D pose trajectory for the tool expressed in target frame,")
      bosdyn_msgs::msg::SE3Trajectory pose_trajectory_rt_target;

      boolean pose_trajectory_rt_target_is_set;

      @verbatim (language="comment", text=
        "Robot desired stance relative to waypoint" "\n"
        "This is taken by measuring the average of the footprints" "\n"
        "in body frame at the time of waypoint creation." "\n"
        "This is used to generate the stance command." "\n"
        "Target == waypoint." "\n"
        "This assumes the waypoint is gravity aligned.")
      bosdyn_msgs::msg::SE2Pose target_tform_measured_offset;

      boolean target_tform_measured_offset_is_set;

      @verbatim (language="comment", text=
        "Body mobility params during cartesian move")
      bosdyn_msgs::msg::BodyControlParamsBodyAssistForManipulation body_assist_params;

      boolean body_assist_params_is_set;

      boolean force_stow_override;
    };
  };
};
