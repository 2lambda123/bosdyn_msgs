// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/SpotCheckFeedbackResponseState.msg
// generated code does not contain a copyright notice


module bosdyn_msgs {
  module msg {
    module SpotCheckFeedbackResponseState_Constants {
      @verbatim (language="comment", text=
        "Unused enum.")
      const int8 STATE_UNKNOWN = 0;
      @verbatim (language="comment", text=
        "SpotCheck is aborted by the user.")
      const int8 STATE_USER_ABORTED = 1;
      @verbatim (language="comment", text=
        "SpotCheck is initializing.")
      const int8 STATE_STARTING = 2;
      @verbatim (language="comment", text=
        "Load cell calibration underway.")
      const int8 STATE_LOADCELL_CAL = 3;
      @verbatim (language="comment", text=
        "Endstop calibration underway.")
      const int8 STATE_ENDSTOP_CAL = 4;
      @verbatim (language="comment", text=
        "Camera check underway.")
      const int8 STATE_CAMERA_CHECK = 5;
      @verbatim (language="comment", text=
        "Body pose routine underway.")
      const int8 STATE_BODY_POSING = 6;
      @verbatim (language="comment", text=
        "Spot check successfully finished.")
      const int8 STATE_FINISHED = 7;
      @verbatim (language="comment", text=
        "Reverting calibration to previous values.")
      const int8 STATE_REVERTING_CAL = 8;
      @verbatim (language="comment", text=
        "Error occurred while running spotcheck. Inspect error for more info.")
      const int8 STATE_ERROR = 9;
      @verbatim (language="comment", text=
        "Waiting for user command.")
      const int8 STATE_WAITING_FOR_COMMAND = 10;
      @verbatim (language="comment", text=
        "Hip range of motion check underway.")
      const int8 STATE_HIP_RANGE_OF_MOTION_CHECK = 11;
      @verbatim (language="comment", text=
        "Gripper calibration underway.")
      const int8 STATE_GRIPPER_CAL = 12;
      @verbatim (language="comment", text=
        "Sitting down after run.")
      const int8 STATE_SIT_DOWN_AFTER_RUN = 13;
      @verbatim (language="comment", text=
        "Arm joint endstops and cross error check underway.")
      const int8 STATE_ARM_JOINT_CHECK = 14;
    };
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct SpotCheckFeedbackResponseState {
      int8 value;
    };
  };
};
