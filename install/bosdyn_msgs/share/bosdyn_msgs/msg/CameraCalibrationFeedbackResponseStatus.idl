// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/CameraCalibrationFeedbackResponseStatus.msg
// generated code does not contain a copyright notice


module bosdyn_msgs {
  module msg {
    module CameraCalibrationFeedbackResponseStatus_Constants {
      @verbatim (language="comment", text=
        "Unused enum.")
      const int8 STATUS_UNKNOWN = 0;
      @verbatim (language="comment", text=
        "The robot is actively running calibration routine.")
      const int8 STATUS_PROCESSING = 1;
      @verbatim (language="comment", text=
        "The robot successfully ran calibration routine and" "\n"        "is ready to use again.")
      const int8 STATUS_SUCCESS = 2;
      @verbatim (language="comment", text=
        "API client canceled calibration.")
      const int8 STATUS_USER_CANCELED = 3;
      @verbatim (language="comment", text=
        "The robot is not powered on.")
      const int8 STATUS_POWER_ERROR = 4;
      @verbatim (language="comment", text=
        "Ownership error during calibration.")
      const int8 STATUS_LEASE_ERROR = 5;
      @verbatim (language="comment", text=
        "Robot encountered an error while trying to move" "\n"        "around the calibration target. Robot possibly" "\n"        "encountered a fault. Check robot state for more" "\n"        "details")
      const int8 STATUS_ROBOT_COMMAND_ERROR = 6;
      @verbatim (language="comment", text=
        "Calibration procedure produced an invalid result." "\n"        "This may occur in poor lighting conditions or if" "\n"        "calibration target moved during calibration" "\n"        "procedure.")
      const int8 STATUS_CALIBRATION_ERROR = 7;
      @verbatim (language="comment", text=
        "Something extraordinary happened. Try power cycling robot or contact BD.")
      const int8 STATUS_INTERNAL_ERROR = 8;
      @verbatim (language="comment", text=
        "Camera focus issue detected. This is a hardware issue.")
      const int8 STATUS_CAMERA_FOCUS_ERROR = 9;
      @verbatim (language="comment", text=
        "Target partially, but not fully, in view when starting calibration.")
      const int8 STATUS_TARGET_NOT_CENTERED = 10;
      @verbatim (language="comment", text=
        "Target not visible when starting calibration.")
      const int8 STATUS_TARGET_NOT_IN_VIEW = 11;
      @verbatim (language="comment", text=
        "Target not aligned with gravity when starting calibration.")
      const int8 STATUS_TARGET_NOT_GRAVITY_ALIGNED = 12;
      @verbatim (language="comment", text=
        "Target upside down when starting calibration.")
      const int8 STATUS_TARGET_UPSIDE_DOWN = 13;
      @verbatim (language="comment", text=
        "Calibration routine has never been run. No feedback to give.")
      const int8 STATUS_NEVER_RUN = 14;
      @verbatim (language="comment", text=
        "One of the cameras is not detected on the USB bus.")
      const int8 STATUS_CAMERA_NOT_DETECTED = 15;
      @verbatim (language="comment", text=
        "Failed to write intrinsic calibration.")
      const int8 STATUS_INTRINSIC_WRITE_FAILED = 16;
      @verbatim (language="comment", text=
        "Failed to write extrinsic calibration.")
      const int8 STATUS_EXTRINSIC_WRITE_FAILED = 17;
      @verbatim (language="comment", text=
        "Spotcheck failed after the camera calibration.")
      const int8 STATUS_CALIBRATION_VERIFICATION_FAILED = 18;
    };
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct CameraCalibrationFeedbackResponseStatus {
      int8 value;
    };
  };
};
