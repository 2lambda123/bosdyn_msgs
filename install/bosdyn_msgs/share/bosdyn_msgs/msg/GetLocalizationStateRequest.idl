// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/GetLocalizationStateRequest.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/RequestHeader.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct GetLocalizationStateRequest {
      @verbatim (language="comment", text=
        "The GetLocalizationState request message requests the current localization state and any other" "\n"
        "live data from the robot if desired. The localization consists of a waypoint ID and the relative" "\n"
        "pose of the robot with respect to that waypoint." "\n"
        "Common request header.")
      bosdyn_msgs::msg::RequestHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "Return the localization relative to this waypoint, if specified.")
      string waypoint_id;

      @verbatim (language="comment", text=
        "If true, request the live edge-segmented point cloud that was used" "\n"
        "to generate this localization.")
      boolean request_live_point_cloud;

      @verbatim (language="comment", text=
        "If true, request the live images from realsense cameras at the time of" "\n"
        "localization.")
      boolean request_live_images;

      @verbatim (language="comment", text=
        "If true, request the live terrain maps at the time of localization.")
      boolean request_live_terrain_maps;

      @verbatim (language="comment", text=
        "If true, reqeuest the live world objects at the time of localization.")
      boolean request_live_world_objects;

      @verbatim (language="comment", text=
        "If true, requests the full live robot state at the time of localization.")
      boolean request_live_robot_state;

      @verbatim (language="comment", text=
        "If true, the smallest available encoding will be used for the live point cloud" "\n"
        "data. If false, three 32 bit floats will be used per point in the point cloud.")
      boolean compress_live_point_cloud;
    };
  };
};
