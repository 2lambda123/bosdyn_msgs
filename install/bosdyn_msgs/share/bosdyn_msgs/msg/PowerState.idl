// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/PowerState.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/PowerStateMotorPowerState.idl"
#include "bosdyn_msgs/msg/PowerStatePayloadPortsPowerState.idl"
#include "bosdyn_msgs/msg/PowerStateRobotPowerState.idl"
#include "bosdyn_msgs/msg/PowerStateShorePowerState.idl"
#include "bosdyn_msgs/msg/PowerStateWifiRadioPowerState.idl"
#include "builtin_interfaces/msg/Duration.idl"
#include "builtin_interfaces/msg/Time.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct PowerState {
      @verbatim (language="comment", text=
        "The power state for the robot." "\n"
        "If a robot is not in the POWER OFF state, if is not safe to approach." "\n"
        "The robot must not be E-Stopped to enter the POWER_ON state." "\n"
        "Robot clock timestamp corresponding to these readings.")
      builtin_interfaces::msg::Time timestamp;

      boolean timestamp_is_set;

      @verbatim (language="comment", text=
        "The motor power state of the robot.")
      bosdyn_msgs::msg::PowerStateMotorPowerState motor_power_state;

      @verbatim (language="comment", text=
        "State describing if robot is connected to shore (wall) power. Robot can't be powered on" "\n"
        "while on shore power" "\n"
        "The shore power state of the robot.")
      bosdyn_msgs::msg::PowerStateShorePowerState shore_power_state;

      @verbatim (language="comment", text=
        "State describing if the robot has power." "\n"
        "The payload ports power state of the robot.")
      bosdyn_msgs::msg::PowerStateRobotPowerState robot_power_state;

      @verbatim (language="comment", text=
        "State describing if the payload port has power." "\n"
        "The payload ports power state of the robot.")
      bosdyn_msgs::msg::PowerStatePayloadPortsPowerState payload_ports_power_state;

      @verbatim (language="comment", text=
        "State describing if the robot Wi-Fi router has power." "\n"
        "The hardware radio power state of the robot.")
      bosdyn_msgs::msg::PowerStateWifiRadioPowerState wifi_radio_power_state;

      @verbatim (language="comment", text=
        "Number from 0 (empty) to 100 (full) indicating the estimated state of charge." "\n"
        "This field provides a summary of the BatteryStates that provide power for motor and/or" "\n"
        "base compute power, both of which are required for locomotion.")
      double locomotion_charge_percentage;

      boolean locomotion_charge_percentage_is_set;

      @verbatim (language="comment", text=
        "An estimate of remaining runtime. Note that this field might not be populated." "\n"
        "This field provides a summary of the BatteryStates that provide power for motor and/or" "\n"
        "base compute power, both of which are required for locomotion.")
      builtin_interfaces::msg::Duration locomotion_estimated_runtime;

      boolean locomotion_estimated_runtime_is_set;
    };
  };
};
