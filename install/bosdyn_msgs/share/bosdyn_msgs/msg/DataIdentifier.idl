// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/DataIdentifier.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/CaptureActionId.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct DataIdentifier {
      @verbatim (language="comment", text=
        "A way to identify an individual piece of data stored in the data buffer." "\n"
        "The action where the data was acquired.")
      bosdyn_msgs::msg::CaptureActionId action_id;

      boolean action_id_is_set;

      @verbatim (language="comment", text=
        "Data buffer channel associated with the DataBlob. The channel is used to group data across" "\n"
        "actions by a specific source, and it can be used in queries to retrieve some subset of data." "\n"
        "For example, the channel could be \"ptz\" and queries can be made for all PTZ images.")
      string channel;

      @verbatim (language="comment", text=
        "Data-specific identifier that can optionally be used to disambiguate cases where the" "\n"
        "action_id and channel are insufficient. For example, you save cropped SpotCAM pano image that" "\n"
        "are detected as gauges to a \"detected_gauges\" channel, but want a way to further individually" "\n"
        "identify them as each specific gauge, so you give each detection a unique data_name.")
      string data_name;

      @verbatim (language="comment", text=
        "Unique identifier specified by the Data Acquisition Store service for this individual piece" "\n"
        "of data. It is a monotonically-increasing value that is incremented for each stored capture." "\n"
        "This value is intended to be unique to a robot and not globally unique. We do not guarantee" "\n"
        "uniqueness pre and post software upgrades or factory resets. This id does not necessarily" "\n"
        "start at 0.")
      uint64 id;
    };
  };
};
