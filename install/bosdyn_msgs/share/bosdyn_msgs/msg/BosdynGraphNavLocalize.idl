// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/BosdynGraphNavLocalize.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/SetLocalizationRequest.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct BosdynGraphNavLocalize {
      @verbatim (language="comment", text=
        "Tell GraphNav to re-localize the robot using a SetLocalizationRequest. This overrides whatever" "\n"
        "the current localization is. This can be useful to reinitialize the system at a known state." "\n"
        "Name of the service to use.")
      string service_name;

      @verbatim (language="comment", text=
        "Host machine the service is running on.")
      string host;

      @verbatim (language="comment", text=
        "If no localization_request is provided, the default options used" "\n"
        "are FIDUCIAL_INIT_NEAREST (the system will initialize to the nearest fiducial)." "\n"
        "Otherwise, the options inside the set_localization_request will be used." "\n"
        "Note that ko_tform_body in the request will be ignored (it will be recalculated at runtime).")
      bosdyn_msgs::msg::SetLocalizationRequest localization_request;

      boolean localization_request_is_set;

      @verbatim (language="comment", text=
        "If true, a poor quality check will not result in the node returning FAILURE." "\n"
        "If false, the localization will be checked for quality by comparing agains the map data, and" "\n"
        "if the localization is poor quality, the node returns FAILURE.")
      boolean allow_bad_quality;

      @verbatim (language="comment", text=
        "If non-empty, the blackboard variable with this name will contain the response of the" "\n"
        "graph nav SetLocalization request after this node receives it.")
      string response_bb_key;
    };
  };
};
