// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/EstopEndpoint.msg
// generated code does not contain a copyright notice

#include "builtin_interfaces/msg/Duration.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct EstopEndpoint {
      @verbatim (language="comment", text=
        "An  to the robot software-E-Stop system." "\n"
        "Role of this endpoint. Should be a user-friendly string, e.g. \"OCU\".")
      string role;

      @verbatim (language="comment", text=
        "Name of this endpoint. Specifies a thing to fill the given role, e.g. \"patrol-ocu01\"")
      string name;

      @verbatim (language="comment", text=
        "Unique ID assigned by the server.")
      string unique_id;

      @verbatim (language="comment", text=
        "Maximum delay between challenge and response for this endpoint prior to soft power off" "\n"
        "handling. After timeout seconds has passed, the robot will try to get to a safe state prior" "\n"
        "to disabling motor power. The robot response is equivalent to an ESTOP_LEVEL_SETTLE_THEN_CUT" "\n"
        "which may involve the robot sitting down in order to prepare for disabling motor power.")
      builtin_interfaces::msg::Duration timeout;

      boolean timeout_is_set;

      @verbatim (language="comment", text=
        "Optional maximum delay between challenge and response for this endpoint prior to disabling" "\n"
        "motor power. After cut_power_timeout seconds has passed, motor power will be disconnected" "\n"
        "immediately regardless of current robot state. If this value is not set robot will default" "\n"
        "to timeout plus a nominal expected duration to reach a safe state. In practice this" "\n"
        "is typically 3-4 seconds. The response is equivalent to an ESTOP_LEVEL_CUT.")
      builtin_interfaces::msg::Duration cut_power_timeout;

      boolean cut_power_timeout_is_set;
    };
  };
};
