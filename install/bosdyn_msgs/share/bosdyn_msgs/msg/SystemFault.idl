// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/SystemFault.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/SystemFaultSeverity.idl"
#include "builtin_interfaces/msg/Duration.idl"
#include "builtin_interfaces/msg/Time.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct SystemFault {
      @verbatim (language="comment", text=
        "The current system faults for a robot." "\n"
        "A fault is an indicator of a hardware or software problem on the robot. An" "\n"
        "active fault may indicate the robot may fail to comply with a user request." "\n"
        "The exact response a fault may vary, but possible responses include: failure" "\n"
        "to enable motor power, loss of perception enabled behavior, or triggering a" "\n"
        "fault recovery behavior on robot." "\n"
        "Name of the fault.")
      string name;

      @verbatim (language="comment", text=
        "Time of robot local clock at fault onset.")
      builtin_interfaces::msg::Time onset_timestamp;

      boolean onset_timestamp_is_set;

      @verbatim (language="comment", text=
        "Time elapsed since onset of the fault.")
      builtin_interfaces::msg::Duration duration;

      boolean duration_is_set;

      @verbatim (language="comment", text=
        "Error code returned by a fault. The exact interpretation of the fault code" "\n"
        "is unique to each variety of fault on the robot. The code is useful for" "\n"
        "Boston Dynamics support staff to diagnose hardware/software issues on" "\n"
        "robot.")
      int32 code;

      @verbatim (language="comment", text=
        "Fault UID")
      uint64 uid;

      @verbatim (language="comment", text=
        "User visible description of the fault (and possibly remedies.)")
      string error_message;

      @verbatim (language="comment", text=
        "Fault attributes" "\n"
        "Each fault may be flagged with attribute metadata (strings in this case.)" "\n"
        "These attributes are useful to communicate that a particular fault may" "\n"
        "have significant effect on robot operations. Some potential attributes" "\n"
        "may be \"robot\", \"imu\", \"vision\", or \"battery\". These attributes would let" "\n"
        "us flag a fault as indicating a problem with the base robot hardware," "\n"
        "gyro, perception system, or battery respectively. A fault may have, zero," "\n"
        "one, or more attributes attached to it, i.e. a \"battery\" fault may also" "\n"
        "be considered a \"robot\" fault.")
      sequence<string> attributes;

      @verbatim (language="comment", text=
        "Fault severity, how bad is the fault?" "\n"
        "The severity level will have some indication of the potential robot" "\n"
        "response to the fault. For example, a fault marked with \"battery\"" "\n"
        "attribute and severity level SEVERITY_WARN may indicate a low battery" "\n"
        "state of charge. However a \"battery\" fault with severity level" "\n"
        "SEVERITY_CRITICAL likely means the robot is going to shutdown" "\n"
        "immediately.")
      bosdyn_msgs::msg::SystemFaultSeverity severity;
    };
  };
};
