// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/StartRecordingRequest.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/Lease.idl"
#include "bosdyn_msgs/msg/RecordingEnvironment.idl"
#include "bosdyn_msgs/msg/RequestHeader.idl"
#include "builtin_interfaces/msg/Time.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct StartRecordingRequest {
      @verbatim (language="comment", text=
        "The StartRecording request tells the recording service to begin creating waypoints with the" "\n"
        "specified recording_environment." "\n"
        "Common request header.")
      bosdyn_msgs::msg::RequestHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "The recording service is protected by a lease. The client must have a" "\n"
        "lease to the recording service to modify its internal state.")
      bosdyn_msgs::msg::Lease lease;

      boolean lease_is_set;

      @verbatim (language="comment", text=
        "This will be merged into a copy of the existing persistent recording" "\n"
        "environment and used as the environment for the created waypoint" "\n"
        "and the edge from the previous waypoint to the new one." "\n"
        "It will not affect the persistent environment.")
      bosdyn_msgs::msg::RecordingEnvironment recording_environment;

      boolean recording_environment_is_set;

      @verbatim (language="comment", text=
        "If filled out, asks that the record service verify that the given fiducial IDs" "\n"
        "are presently visible before starting to record. This is useful for verifying" "\n"
        "that the robot is where the user thinks it is in an area with known fiducials.")
      sequence<int32> require_fiducials;

      @verbatim (language="comment", text=
        "If provided, this timestamp will be used in every waypoint snapshot as the" "\n"
        "\"started_recording_on\" timestamp. Otherwise, a new timestmap will be generated" "\n"
        "after \"StartRecording\" is called. This is to allow association between waypoint" "\n"
        "snapshots based on recording session time.")
      builtin_interfaces::msg::Time session_start_time;

      boolean session_start_time_is_set;
    };
  };
};
