// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/Vec3Trajectory.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/PositionalInterpolation.idl"
#include "bosdyn_msgs/msg/Vec3TrajectoryPoint.idl"
#include "builtin_interfaces/msg/Time.idl"
#include "geometry_msgs/msg/Vector3.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct Vec3Trajectory {
      @verbatim (language="comment", text=
        "A 3D point trajectory, described by 3D points, a starting and ending velocity, and" "\n"
        "a reference time." "\n"
        "The points in trajectory.")
      sequence<bosdyn_msgs::msg::Vec3TrajectoryPoint> points;

      @verbatim (language="comment", text=
        "All trajectories specify times relative to this reference time. The reference time should be" "\n"
        "in robot clock. If this field is not included, this time will be the receive time of the" "\n"
        "command.")
      builtin_interfaces::msg::Time reference_time;

      boolean reference_time_is_set;

      @verbatim (language="comment", text=
        "Parameters for how trajectories will be interpolated on robot.")
      bosdyn_msgs::msg::PositionalInterpolation pos_interpolation;

      @verbatim (language="comment", text=
        "Velocity at the starting point of the trajectory.")
      geometry_msgs::msg::Vector3 starting_velocity;

      boolean starting_velocity_is_set;

      @verbatim (language="comment", text=
        "Velocity at the ending point of the trajectory.")
      geometry_msgs::msg::Vector3 ending_velocity;

      boolean ending_velocity_is_set;
    };
  };
};
