// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/SetLocalizationRequest.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/Localization.idl"
#include "bosdyn_msgs/msg/RequestHeader.idl"
#include "bosdyn_msgs/msg/SetLocalizationRequestFiducialInit.idl"
#include "bosdyn_msgs/msg/SetLocalizationRequestOneOfRefinement.idl"
#include "geometry_msgs/msg/Pose.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct SetLocalizationRequest {
      @verbatim (language="comment", text=
        "The SetLocalization request is used to initialize or reset the localization of GraphNav" "\n"
        "to a map. A localization consists of a waypoint ID, and a pose of the robot relative to that waypoint." "\n"
        "GraphNav uses the localization to decide how to navigate through a map." "\n"
        "The SetLocalizationRequest contains parameters to help find a correct localization. For example," "\n"
        "AprilTags (fiducials) may be used to set the localization, or the caller can provide an explicit" "\n"
        "guess of the localization." "\n"
        "Once the SetLocalizationRequest completes, the current localization to the map" "\n"
        "will be modified, and can be retrieved using a GetLocalizationStateRequest." "\n"
        "Common request header.")
      bosdyn_msgs::msg::RequestHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "Operator-supplied guess at localization.")
      bosdyn_msgs::msg::Localization initial_guess;

      boolean initial_guess_is_set;

      @verbatim (language="comment", text=
        "Robot pose when the initial_guess was made." "\n"
        "This overcomes the race that occurs when the client is trying to initialize a moving robot." "\n"
        "GraphNav will use its local ko_tform_body and this ko_tform_body to update the initial" "\n"
        "localization guess, if necessary.")
      geometry_msgs::msg::Pose ko_tform_body;

      boolean ko_tform_body_is_set;

      @verbatim (language="comment", text=
        "The max distance is how far away the robot is allowed to localize from the position supplied" "\n"
        "in the initial guess. If not specified, the offset is used directly. Otherwise it searches a neighborhood" "\n"
        "of the given size.")
      @unit (value="meters")
      double max_distance;

      @verbatim (language="comment", text=
        "The max yaw is how different the localized yaw is allowed to be from the supplied yaw" "\n"
        "in the initial guess. If not specified, the offset is used directly. Otherwise it searches a neighborhood" "\n"
        "of the given size.")
      @unit (value="radians")
      double max_yaw;

      @verbatim (language="comment", text=
        "Tells the initializer whether to use fiducials, and how to use them.")
      bosdyn_msgs::msg::SetLocalizationRequestFiducialInit fiducial_init;

      @verbatim (language="comment", text=
        "If using FIDUCIAL_INIT_SPECIFIC, this is the specific fiducial ID to use for initialization." "\n"
        "If no detection of this fiducial exists, the service will return STATUS_NO_MATCHING_FIDUCIAL." "\n"
        "If detections exist, but are low quality, STATUS_FIDUCIAL_TOO_FAR_AWAY, FIDUCIAL_TOO_OLD, or FIDUCIAL_POSE_UNCERTAIN will be returned.")
      int32 use_fiducial_id;

      @verbatim (language="comment", text=
        "If true, consider how nearby localizations appear (like turned 180).")
      boolean do_ambiguity_check;

      @verbatim (language="comment", text=
        "If using FIDUCIAL_INIT_SPECIFIC and this is true, the initializer will only consider" "\n"
        "fiducial detections from the target waypoint (from initial_guess). Otherwise, if the" "\n"
        "target waypoint does not contain a good measurement of the desired fiducial, nearby waypoints" "\n"
        "may be used to infer the robot's location.")
      boolean restrict_fiducial_detections_to_target_waypoint;

      bosdyn_msgs::msg::SetLocalizationRequestOneOfRefinement refinement;
    };
  };
};
