// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/SignalTick.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/SignalTickEncoding.idl"
#include "builtin_interfaces/msg/Time.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct SignalTick {
      @verbatim (language="comment", text=
        "A timestamped set of signals variable values." "\n"
        "Successive ticks should have successive sequence_id's." "\n"
        "The robot uses this to determine if a tick was somehow lost.")
      int64 sequence_id;

      @verbatim (language="comment", text=
        "Timestamp at which the variable values were sampled.")
      builtin_interfaces::msg::Time timestamp;

      boolean timestamp_is_set;

      @verbatim (language="comment", text=
        "The client name." "\n"
        "This may be used to segregate data for the same variables to different parts of the buffer.")
      string source;

      @verbatim (language="comment", text=
        "This specifies the SignalSchema to be used in interpreting the |data| field." "\n"
        "This value was returned by the server when the schema was registered.")
      uint64 schema_id;

      @verbatim (language="comment", text=
        "Format describing how the data bytes array is encoded.")
      bosdyn_msgs::msg::SignalTickEncoding encoding;

      @verbatim (language="comment", text=
        "The encoded data representing a tick of multiple values of signal-styles data.")
      sequence<octet> data;
    };
  };
};
