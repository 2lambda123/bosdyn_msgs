// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/Node.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/KeyValue.idl"
#include "bosdyn_msgs/msg/NodeOneOfType.idl"
#include "bosdyn_msgs/msg/UserData.idl"
#include "bosdyn_msgs/msg/VariableDeclaration.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct Node {
      @verbatim (language="comment", text=
        "Wrapper for a mission node. Contains the basics common to all mission nodes." "\n"
        "Specifics of what the node does are contained in the \"impl\" field." "\n"
        "Human-readable name of this node, e.g. \"Goto waypoint 1\", or \"Power On\".")
      string name;

      @verbatim (language="comment", text=
        "Collection of user data associated with this node.")
      bosdyn_msgs::msg::UserData user_data;

      boolean user_data_is_set;

      @verbatim (language="comment", text=
        "Reference identifier of this node." "\n"
        "Set iff another node references this one.")
      string reference_id;

      bosdyn_msgs::msg::NodeOneOfType type;

      @verbatim (language="comment", text=
        "Defines parameters, used by this node or its children." "\n"
        "The \"key\" in KeyValue is the name of the parameter being defined." "\n"
        "The value can be a constant or another parameter value.")
      sequence<bosdyn_msgs::msg::KeyValue> parameter_values;

      @verbatim (language="comment", text=
        "Overwrites a protobuf field in this node's implementation." "\n"
        "The \"key\" in KeyValue is the name of the field to override." "\n"
        "The value to write can be sourced from a constant, or a parameter value.")
      sequence<bosdyn_msgs::msg::KeyValue> overrides;

      @verbatim (language="comment", text=
        "Declares parameters needed at compile time by this node, or children of this node." "\n"
        "This is a way for a node to communicate what parameters its implementation and/or children" "\n"
        "require, without unpacking the entire subtree.")
      sequence<bosdyn_msgs::msg::VariableDeclaration> parameters;
    };
  };
};
