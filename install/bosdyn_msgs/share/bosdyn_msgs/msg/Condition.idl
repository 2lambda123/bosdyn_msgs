// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/Condition.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/ConditionCompare.idl"
#include "bosdyn_msgs/msg/ConditionHandleStaleness.idl"
#include "bosdyn_msgs/msg/ConditionOperand.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct Condition {
      @verbatim (language="comment", text=
        "Checks a simple comparison statement." "\n"
        "Options for where to retrieve values from." "\n"
        "Left-hand side of the comparison.")
      bosdyn_msgs::msg::ConditionOperand lhs;

      boolean lhs_is_set;

      @verbatim (language="comment", text=
        "Right-hand side of the comparison.")
      bosdyn_msgs::msg::ConditionOperand rhs;

      boolean rhs_is_set;

      @verbatim (language="comment", text=
        "Comparison operator." "\n"
        "Comparison operator to compare lhs and rhs.")
      bosdyn_msgs::msg::ConditionCompare operation;

      @verbatim (language="comment", text=
        "When comparing runtime values in the blackboard, some values might be \"stale\" (i.e too old)." "\n"
        "This defines how the comparator should behave when a read value is stale.")
      bosdyn_msgs::msg::ConditionHandleStaleness handle_staleness;
    };
  };
};
