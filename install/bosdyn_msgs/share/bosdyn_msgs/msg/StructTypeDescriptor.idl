// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/StructTypeDescriptor.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/KeyStringValueUint64.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct StructTypeDescriptor {
      @verbatim (language="comment", text=
        "A struct series is a composite formed by a set of other series whose messages or signals-ticks" "\n"
        " are sampled at the same time." "\n"
        "For example, all there may be a struct series for a set of signals variables, all from a" "\n"
        " process with an 'update()' function within which all all variables are sampled with the" "\n"
        " same timestamp." "\n"
        "DataBlocks will not directly reference this series, but only child series of this series." "\n"
        "Struct series may reference other struct series, but the series structure must be a directed" "\n"
        " acyclic graph (DAG): no circular reference structures." "\n"
        "A map of a name-reference to a series, identified by its series_identifer_hash.")
      sequence<bosdyn_msgs::msg::KeyStringValueUint64> key_to_series_identifier_hash;
    };
  };
};
