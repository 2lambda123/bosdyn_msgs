// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/SimpleParallel.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/Node.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct SimpleParallel {
      @verbatim (language="comment", text=
        "Run two child nodes together, returning the primary child's result when it completes." "\n"
        "Primary node, whose completion will end the execution of SimpleParallel." "\n"
        "The secondary node will be ticked at least once.")
      bosdyn_msgs::msg::Node primary;

      boolean primary_is_set;

      @verbatim (language="comment", text=
        "Secondary node, which will be ticked as long as the primary is still running.")
      bosdyn_msgs::msg::Node secondary;

      boolean secondary_is_set;

      @verbatim (language="comment", text=
        "By default, if the secondary node finishes before the primary node, the secondary node" "\n"
        "will be restarted.  If this flag is set to true, and the secondary node completes before" "\n"
        "the primary node, it will never be restarted.")
      boolean run_secondary_node_once;
    };
  };
};
