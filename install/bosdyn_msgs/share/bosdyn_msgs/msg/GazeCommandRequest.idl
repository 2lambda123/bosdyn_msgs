// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/GazeCommandRequest.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/SE3Trajectory.idl"
#include "bosdyn_msgs/msg/Vec3Trajectory.idl"
#include "geometry_msgs/msg/Pose.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct GazeCommandRequest {
      @verbatim (language="comment", text=
        "Point(s) to look at expressed in frame1.")
      bosdyn_msgs::msg::Vec3Trajectory target_trajectory_in_frame1;

      boolean target_trajectory_in_frame1_is_set;

      string frame1_name;

      @verbatim (language="comment", text=
        "Optional, desired pose of the tool expressed in frame2.  Will be constrained to 'look at'" "\n"
        "the target regardless of the requested orientation.")
      bosdyn_msgs::msg::SE3Trajectory tool_trajectory_in_frame2;

      boolean tool_trajectory_in_frame2_is_set;

      string frame2_name;

      @verbatim (language="comment", text=
        "The transformation of the tool pose relative to the parent link (wrist)." "\n"
        "If the field is left unset, the transform will default to:" "\n"
        "     The position is wrist_tform_hand.position() [20 cm translation in wrist x]." "\n"
        "     The rotation is wrist_tform_hand_camera.rotation() [-9 degree pitch about wrist y].")
      geometry_msgs::msg::Pose wrist_tform_tool;

      boolean wrist_tform_tool_is_set;

      @verbatim (language="comment", text=
        "Optional velocity to move the target along the shortest path from the gaze's starting" "\n"
        "position to the first point in the target trajectory.")
      double target_trajectory_initial_velocity;

      boolean target_trajectory_initial_velocity_is_set;

      @verbatim (language="comment", text=
        "Optional Maximum acceleration magnitude of the end-effector." "\n"
        "Valid ranges (0, 20]")
      double maximum_acceleration;

      boolean maximum_acceleration_is_set;

      @verbatim (language="comment", text=
        "Optional Maximum linear velocity magnitude of the end-effector. (m/s)")
      double max_linear_velocity;

      boolean max_linear_velocity_is_set;

      @verbatim (language="comment", text=
        "Optional Maximum angular velocity magnitude of the end-effector. (rad/s)")
      double max_angular_velocity;

      boolean max_angular_velocity_is_set;
    };
  };
};
