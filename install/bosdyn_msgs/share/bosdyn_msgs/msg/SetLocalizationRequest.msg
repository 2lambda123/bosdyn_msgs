# AUTOMATICALLY GENERATED BY PROTO CONVERSION

# The SetLocalization request is used to initialize or reset the localization of GraphNav
# to a map. A localization consists of a waypoint ID, and a pose of the robot relative to that waypoint.
# GraphNav uses the localization to decide how to navigate through a map.
# The SetLocalizationRequest contains parameters to help find a correct localization. For example,
# AprilTags (fiducials) may be used to set the localization, or the caller can provide an explicit
# guess of the localization.
# Once the SetLocalizationRequest completes, the current localization to the map
# will be modified, and can be retrieved using a GetLocalizationStateRequest.

# Common request header.
bosdyn_msgs/RequestHeader header
bool header_is_set

# Operator-supplied guess at localization.
bosdyn_msgs/Localization initial_guess
bool initial_guess_is_set

# Robot pose when the initial_guess was made.
# This overcomes the race that occurs when the client is trying to initialize a moving robot.
# GraphNav will use its local ko_tform_body and this ko_tform_body to update the initial
# localization guess, if necessary.
geometry_msgs/Pose ko_tform_body
bool ko_tform_body_is_set

# The max distance [meters] is how far away the robot is allowed to localize from the position supplied
# in the initial guess. If not specified, the offset is used directly. Otherwise it searches a neighborhood
# of the given size.
float64 max_distance
# The max yaw [radians] is how different the localized yaw is allowed to be from the supplied yaw
# in the initial guess. If not specified, the offset is used directly. Otherwise it searches a neighborhood
# of the given size.
float64 max_yaw


# Tells the initializer whether to use fiducials, and how to use them.
bosdyn_msgs/SetLocalizationRequestFiducialInit fiducial_init

# If using FIDUCIAL_INIT_SPECIFIC, this is the specific fiducial ID to use for initialization.
# If no detection of this fiducial exists, the service will return STATUS_NO_MATCHING_FIDUCIAL.
# If detections exist, but are low quality, STATUS_FIDUCIAL_TOO_FAR_AWAY, FIDUCIAL_TOO_OLD, or FIDUCIAL_POSE_UNCERTAIN will be returned.
int32 use_fiducial_id

# If true, consider how nearby localizations appear (like turned 180).
bool do_ambiguity_check

# If using FIDUCIAL_INIT_SPECIFIC and this is true, the initializer will only consider
# fiducial detections from the target waypoint (from initial_guess). Otherwise, if the
# target waypoint does not contain a good measurement of the desired fiducial, nearby waypoints
# may be used to infer the robot's location.
bool restrict_fiducial_detections_to_target_waypoint

bosdyn_msgs/SetLocalizationRequestOneOfRefinement refinement
