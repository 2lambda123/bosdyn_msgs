// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/UploadGraphRequest.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/Graph.idl"
#include "bosdyn_msgs/msg/Lease.idl"
#include "bosdyn_msgs/msg/RequestHeader.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct UploadGraphRequest {
      @verbatim (language="comment", text=
        "Uploads a graph to the server. This graph will be appended to the graph that" "\n"
        "currently exists on the server." "\n"
        "Common request header.")
      bosdyn_msgs::msg::RequestHeader header;

      boolean header_is_set;

      @verbatim (language="comment", text=
        "Structure of the graph containing waypoints and edges without" "\n"
        "underlying sensor data.")
      bosdyn_msgs::msg::Graph graph;

      boolean graph_is_set;

      @verbatim (language="comment", text=
        "The Lease to show ownership of graph-nav service.")
      bosdyn_msgs::msg::Lease lease;

      boolean lease_is_set;

      @verbatim (language="comment", text=
        "If this is true, generate an (overwrite the) anchoring on upload.")
      boolean generate_new_anchoring;

      @verbatim (language="comment", text=
        "If true, validation warnings will be treated as errors, and STATUS_INVALID_GRAPH will be returned. This is false by" "\n"
        "default.")
      boolean treat_validation_warnings_as_errors;
    };
  };
};
