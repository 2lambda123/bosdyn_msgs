// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/ProcessAnchoringRequest.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/AnchoringHint.idl"
#include "bosdyn_msgs/msg/ProcessAnchoringRequestParams.idl"
#include "bosdyn_msgs/msg/RequestHeader.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct ProcessAnchoringRequest {
      @verbatim (language="comment", text=
        "Causes the server to optimize an existing anchoring, or generate a new anchoring for the map using the given parameters." "\n"
        "In general, if parameters are not provided, reasonable defaults will be used." "\n"
        "The new anchoring will be streamed back to the client, or modified on the server if desired." "\n"
        "Parameters for procesing an anchoring." "\n"
        "Standard request header.")
      bosdyn_msgs::msg::RequestHeader header;

      boolean header_is_set;

      bosdyn_msgs::msg::ProcessAnchoringRequestParams params;

      boolean params_is_set;

      @verbatim (language="comment", text=
        "Initial guess at some number of waypoints and world objects and their anchorings.")
      bosdyn_msgs::msg::AnchoringHint initial_hint;

      boolean initial_hint_is_set;

      @verbatim (language="comment", text=
        "If true, the map currently uploaded to the server will have its anchoring modified." "\n"
        "Otherwise, the user is expected to re-upload the anchoring.")
      boolean modify_anchoring_on_server;

      @verbatim (language="comment", text=
        "If true, the anchoring will be streamed back to the user after every iteration." "\n"
        "This is useful for debug visualization.")
      boolean stream_intermediate_results;
    };
  };
};
