// generated from rosidl_adapter/resource/msg.idl.em
// with input from bosdyn_msgs/msg/Camera.msg
// generated code does not contain a copyright notice

#include "bosdyn_msgs/msg/CameraOneOfIntrinsics.idl"
#include "bosdyn_msgs/msg/Vec2.idl"
#include "geometry_msgs/msg/Pose.idl"

module bosdyn_msgs {
  module msg {
    @verbatim (language="comment", text=
      "AUTOMATICALLY GENERATED BY PROTO CONVERSION")
    struct Camera {
      @verbatim (language="comment", text=
        "Identifier for the camera.")
      string name;

      @verbatim (language="comment", text=
        "Resolution of the sensor, where x = width and y = height.")
      bosdyn_msgs::msg::Vec2 resolution;

      boolean resolution_is_set;

      @verbatim (language="comment", text=
        "The frame name for the parent frame of this camera. This frame will show up in the" "\n"
        "FrameTreeSnapshot grabbed from the payload registration service.")
      string base_frame_name;

      @verbatim (language="comment", text=
        "'base_tfrom_sensor' defines the transform from the specific camera to the named base from." "\n"
        "DEPRECATED as of 3.0.1 in favor of 'base_tform_sensor' which follows the intended naming" "\n"
        "convention and FrameTree directionality convention of the Spot system as defined in" "\n"
        "geometry.proto." "\n"
        "The transform from the named base frame to this specific camera")
      geometry_msgs::msg::Pose base_tform_sensor;

      boolean base_tform_sensor_is_set;

      @verbatim (language="comment", text=
        "Spherical limits are the minimum and maximum angle of the image." "\n"
        "IE the upper left pixel is at min_angle.x, min_angle.y" "\n"
        "and the lower right pixel is at max_angle.x, max_angle.y" "\n"
        "for a full-FOV image this will be (-180, 90) and (180, -90)")
      bosdyn_msgs::msg::CameraOneOfIntrinsics intrinsics;
    };
  };
};
