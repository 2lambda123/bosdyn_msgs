// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/GetFeatureEnabledResponse.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__GET_FEATURE_ENABLED_RESPONSE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__GET_FEATURE_ENABLED_RESPONSE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/response_header__struct.h"
// Member 'feature_enabled'
#include "bosdyn_msgs/msg/detail/key_string_value_bool__struct.h"

/// Struct defined in msg/GetFeatureEnabledResponse in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__GetFeatureEnabledResponse
{
  /// Common response header.
  bosdyn_msgs__msg__ResponseHeader header;
  bool header_is_set;
  /// The resulting map showing the feature name (as the map key) and a boolean indicating
  /// if the feature is enabled with this license (as the map value).
  bosdyn_msgs__msg__KeyStringValueBool__Sequence feature_enabled;
} bosdyn_msgs__msg__GetFeatureEnabledResponse;

// Struct for a sequence of bosdyn_msgs__msg__GetFeatureEnabledResponse.
typedef struct bosdyn_msgs__msg__GetFeatureEnabledResponse__Sequence
{
  bosdyn_msgs__msg__GetFeatureEnabledResponse * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__GetFeatureEnabledResponse__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__GET_FEATURE_ENABLED_RESPONSE__STRUCT_H_
