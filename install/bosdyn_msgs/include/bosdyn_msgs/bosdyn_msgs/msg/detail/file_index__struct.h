// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/FileIndex.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__FILE_INDEX__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__FILE_INDEX__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'series_identifiers'
#include "bosdyn_msgs/msg/detail/series_identifier__struct.h"
// Member 'series_block_index_offsets'
// Member 'series_identifier_hashes'
#include "rosidl_runtime_c/primitives_sequence.h"

/// Struct defined in msg/FileIndex in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__FileIndex
{
  /// As a file is closed, a DescriptorBlock containing a FileIndex should be written.
  /// The FileIndex summarizes the data series stored in the file and the location of the
  ///  block-indexes for each type in the file.
  /// Each series is assigned a "series_index" within the file, and this index may be used to
  ///  index into the repeated fields in this message.
  /// E.g., for the series with series_index N, you can access its SeriesIdentifier by accessing
  ///  element N the of the series_identifiers repeated field.
  /// SeriesIdentifer for each series in this file.
  bosdyn_msgs__msg__SeriesIdentifier__Sequence series_identifiers;
  /// The offset from the start of the file of the SeriesBlockIndex block for each series.
  rosidl_runtime_c__uint64__Sequence series_block_index_offsets;
  /// The hash of the series_identifier for each series.
  rosidl_runtime_c__uint64__Sequence series_identifier_hashes;
} bosdyn_msgs__msg__FileIndex;

// Struct for a sequence of bosdyn_msgs__msg__FileIndex.
typedef struct bosdyn_msgs__msg__FileIndex__Sequence
{
  bosdyn_msgs__msg__FileIndex * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__FileIndex__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__FILE_INDEX__STRUCT_H_
