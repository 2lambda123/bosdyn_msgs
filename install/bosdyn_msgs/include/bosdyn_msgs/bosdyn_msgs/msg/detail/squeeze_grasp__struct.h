// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/SqueezeGrasp.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SQUEEZE_GRASP__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SQUEEZE_GRASP__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Struct defined in msg/SqueezeGrasp in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__SqueezeGrasp
{
  /// A "squeeze grasp" is a top-down grasp where we try to keep both jaws of the gripper in
  /// contact with the ground and bring the jaws together.  This can allow the robot to pick up
  /// small objects on the ground.
  ///
  /// If you specify a SqueezeGrasp as:
  ///      allowed:
  ///          - with no other allowable orientations:
  ///              then the robot will perform a squeeze grasp.
  ///          - with at least one other allowable orientation:
  ///              the robot will attempt to find a normal grasp with that orientation and if it
  ///              fails, will perform a squeeze grasp.
  ///      disallowed:
  ///          - with no other allowable orientations:
  ///              the robot will perform an unconstrained grasp search and a grasp if a good grasp
  ///              is found.  If no grasp is found, the robot will report
  ///              MANIP_STATE_GRASP_PLANNING_NO_SOLUTION
  ///          - with other allowable orientations:
  ///              the robot will attempt to find a valid grasp.  If it cannot it will report
  ///              MANIP_STATE_GRASP_PLANNING_NO_SOLUTION
  bool squeeze_grasp_disallowed;
} bosdyn_msgs__msg__SqueezeGrasp;

// Struct for a sequence of bosdyn_msgs__msg__SqueezeGrasp.
typedef struct bosdyn_msgs__msg__SqueezeGrasp__Sequence
{
  bosdyn_msgs__msg__SqueezeGrasp * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__SqueezeGrasp__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SQUEEZE_GRASP__STRUCT_H_
