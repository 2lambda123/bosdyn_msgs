// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/TickResponse.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__TICK_RESPONSE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__TICK_RESPONSE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/response_header__struct.h"
// Member 'status'
#include "bosdyn_msgs/msg/detail/tick_response_status__struct.h"
// Member 'missing_lease_resources'
// Member 'error_message'
#include "rosidl_runtime_c/string.h"
// Member 'lease_use_results'
#include "bosdyn_msgs/msg/detail/lease_use_result__struct.h"
// Member 'missing_inputs'
#include "bosdyn_msgs/msg/detail/variable_declaration__struct.h"
// Member 'custom_param_error'
#include "bosdyn_msgs/msg/detail/custom_param_error__struct.h"

/// Struct defined in msg/TickResponse in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__TickResponse
{
  /// Response with the results of the tick.
  /// Remote services should strive to return quickly, even if only returning RUNNING.
  /// Common response header.
  bosdyn_msgs__msg__ResponseHeader header;
  bool header_is_set;
  /// Possible results from the node. The FAILURE, RUNNING, and SUCCESS statuses map to the
  /// behavior tree terms, all others indicate an error in the TickRequest.
  /// Result of the current tick.
  bosdyn_msgs__msg__TickResponseStatus status;
  /// Need to provide leases on these resources.
  rosidl_runtime_c__String__Sequence missing_lease_resources;
  /// Details about how any leases were used.
  /// Allowed to be empty, if leases were not actually used.
  bosdyn_msgs__msg__LeaseUseResult__Sequence lease_use_results;
  /// Filled out when status is STATUS_MISSING_INPUTS, indicating what inputs were not in the
  /// request.
  bosdyn_msgs__msg__VariableDeclaration__Sequence missing_inputs;
  /// If you need to report other error details, you can use this field.
  rosidl_runtime_c__String error_message;
  /// Filled out if status is STATUS_CUSTOM_PARAMS_ERROR.
  bosdyn_msgs__msg__CustomParamError custom_param_error;
  bool custom_param_error_is_set;
} bosdyn_msgs__msg__TickResponse;

// Struct for a sequence of bosdyn_msgs__msg__TickResponse.
typedef struct bosdyn_msgs__msg__TickResponse__Sequence
{
  bosdyn_msgs__msg__TickResponse * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__TickResponse__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__TICK_RESPONSE__STRUCT_H_
