// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/AngularInterpolation.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__ANGULAR_INTERPOLATION__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__ANGULAR_INTERPOLATION__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'ANG_INTERP_UNKNOWN'.
/**
  * Parameters for how angular trajectories will be interpolated on robot.
  * Unknown interpolation, do not use.
 */
enum
{
  bosdyn_msgs__msg__AngularInterpolation__ANG_INTERP_UNKNOWN = 0
};

/// Constant 'ANG_INTERP_LINEAR'.
/**
  * Linear interpolation for angular data.
 */
enum
{
  bosdyn_msgs__msg__AngularInterpolation__ANG_INTERP_LINEAR = 1
};

/// Constant 'ANG_INTERP_CUBIC_EULER'.
/**
  * Cubic interpolation (using Euler method) for angular data.
 */
enum
{
  bosdyn_msgs__msg__AngularInterpolation__ANG_INTERP_CUBIC_EULER = 2
};

/// Struct defined in msg/AngularInterpolation in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__AngularInterpolation
{
  int8_t value;
} bosdyn_msgs__msg__AngularInterpolation;

// Struct for a sequence of bosdyn_msgs__msg__AngularInterpolation.
typedef struct bosdyn_msgs__msg__AngularInterpolation__Sequence
{
  bosdyn_msgs__msg__AngularInterpolation * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__AngularInterpolation__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__ANGULAR_INTERPOLATION__STRUCT_H_
