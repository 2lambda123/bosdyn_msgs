// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/PressureEnum.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__PRESSURE_ENUM__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__PRESSURE_ENUM__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'PRESSURE_UNKNOWN'.
enum
{
  bosdyn_msgs__msg__PressureEnum__PRESSURE_UNKNOWN = 0
};

/// Constant 'PRESSURE_PSI'.
/**
  * Pound-force per square inch
 */
enum
{
  bosdyn_msgs__msg__PressureEnum__PRESSURE_PSI = 1
};

/// Constant 'PRESSURE_KPA'.
/**
  * KiloPascal
 */
enum
{
  bosdyn_msgs__msg__PressureEnum__PRESSURE_KPA = 2
};

/// Constant 'PRESSURE_BAR'.
/**
  * Bar
 */
enum
{
  bosdyn_msgs__msg__PressureEnum__PRESSURE_BAR = 3
};

/// Struct defined in msg/PressureEnum in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__PressureEnum
{
  int8_t value;
} bosdyn_msgs__msg__PressureEnum;

// Struct for a sequence of bosdyn_msgs__msg__PressureEnum.
typedef struct bosdyn_msgs__msg__PressureEnum__Sequence
{
  bosdyn_msgs__msg__PressureEnum * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__PressureEnum__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__PRESSURE_ENUM__STRUCT_H_
