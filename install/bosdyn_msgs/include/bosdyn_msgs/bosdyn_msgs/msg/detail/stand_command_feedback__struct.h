// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/StandCommandFeedback.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__STAND_COMMAND_FEEDBACK__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__STAND_COMMAND_FEEDBACK__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'status'
#include "bosdyn_msgs/msg/detail/stand_command_feedback_status__struct.h"
// Member 'standing_state'
#include "bosdyn_msgs/msg/detail/stand_command_feedback_standing_state__struct.h"

/// Struct defined in msg/StandCommandFeedback in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__StandCommandFeedback
{
  /// The StandCommand will provide two feedback fields: status, and standing_state. Status
  /// reflects if the robot has four legs on the ground and is near a final pose. StandingState
  /// reflects if the robot has converged to a final pose and does not expect future movement.
  /// Current status of the command.
  bosdyn_msgs__msg__StandCommandFeedbackStatus status;
  /// What type of standing the robot is doing currently.
  bosdyn_msgs__msg__StandCommandFeedbackStandingState standing_state;
} bosdyn_msgs__msg__StandCommandFeedback;

// Struct for a sequence of bosdyn_msgs__msg__StandCommandFeedback.
typedef struct bosdyn_msgs__msg__StandCommandFeedback__Sequence
{
  bosdyn_msgs__msg__StandCommandFeedback * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__StandCommandFeedback__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__STAND_COMMAND_FEEDBACK__STRUCT_H_
