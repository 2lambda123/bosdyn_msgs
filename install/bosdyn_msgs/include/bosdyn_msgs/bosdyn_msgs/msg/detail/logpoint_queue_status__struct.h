// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/LogpointQueueStatus.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__LOGPOINT_QUEUE_STATUS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__LOGPOINT_QUEUE_STATUS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'QUEUED_UNKNOWN'.
enum
{
  bosdyn_msgs__msg__LogpointQueueStatus__QUEUED_UNKNOWN = 0
};

/// Constant 'QUEUED_RENDER'.
/**
  * The logpoint has been queued to be downloaded from the renderer
 */
enum
{
  bosdyn_msgs__msg__LogpointQueueStatus__QUEUED_RENDER = 1
};

/// Constant 'QUEUED_DISK'.
/**
  * The logpoint is in general ram, and will be written to the disk when
 */
enum
{
  bosdyn_msgs__msg__LogpointQueueStatus__QUEUED_DISK = 2
};

/// Struct defined in msg/LogpointQueueStatus in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__LogpointQueueStatus
{
  /// resources allow
  int8_t value;
} bosdyn_msgs__msg__LogpointQueueStatus;

// Struct for a sequence of bosdyn_msgs__msg__LogpointQueueStatus.
typedef struct bosdyn_msgs__msg__LogpointQueueStatus__Sequence
{
  bosdyn_msgs__msg__LogpointQueueStatus * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__LogpointQueueStatus__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__LOGPOINT_QUEUE_STATUS__STRUCT_H_
