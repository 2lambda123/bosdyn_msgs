// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/ImageFormat.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__IMAGE_FORMAT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__IMAGE_FORMAT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'FORMAT_UNKNOWN'.
/**
  * Unknown image format.
 */
enum
{
  bosdyn_msgs__msg__ImageFormat__FORMAT_UNKNOWN = 0
};

/// Constant 'FORMAT_JPEG'.
/**
  * Color/greyscale formats.
  * JPEG format.
 */
enum
{
  bosdyn_msgs__msg__ImageFormat__FORMAT_JPEG = 1
};

/// Constant 'FORMAT_RAW'.
/**
  * Uncompressed.  Requires pixel_format.
 */
enum
{
  bosdyn_msgs__msg__ImageFormat__FORMAT_RAW = 2
};

/// Constant 'FORMAT_RLE'.
/**
  * 1 byte run-length before each pixel value.
 */
enum
{
  bosdyn_msgs__msg__ImageFormat__FORMAT_RLE = 3
};

/// Struct defined in msg/ImageFormat in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__ImageFormat
{
  int8_t value;
} bosdyn_msgs__msg__ImageFormat;

// Struct for a sequence of bosdyn_msgs__msg__ImageFormat.
typedef struct bosdyn_msgs__msg__ImageFormat__Sequence
{
  bosdyn_msgs__msg__ImageFormat * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__ImageFormat__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__IMAGE_FORMAT__STRUCT_H_
