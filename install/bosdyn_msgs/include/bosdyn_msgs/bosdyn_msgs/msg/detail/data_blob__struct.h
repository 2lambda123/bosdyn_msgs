// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/DataBlob.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__DATA_BLOB__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__DATA_BLOB__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'timestamp'
#include "builtin_interfaces/msg/detail/time__struct.h"
// Member 'channel'
// Member 'type_id'
#include "rosidl_runtime_c/string.h"
// Member 'data'
#include "rosidl_runtime_c/primitives_sequence.h"

/// Struct defined in msg/DataBlob in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__DataBlob
{
  /// Message-style data to add to the log.
  /// Timestamp of data in robot clock time.  This is required.
  builtin_interfaces__msg__Time timestamp;
  bool timestamp_is_set;
  /// A general label for this blob.
  /// This is distinct from type_id, which identifies how the blob is to be parsed.
  /// In practice, this is often the same as the type_id.
  rosidl_runtime_c__String channel;
  /// A description of the data's content and its encoding.  This is required.
  /// This should be sufficient for deciding how to deserialize the data.
  /// For example, this could be the full name of a protobuf message type.
  rosidl_runtime_c__String type_id;
  /// Raw data.
  /// For example, jpeg data or a serialized protobuf.
  rosidl_runtime_c__octet__Sequence data;
} bosdyn_msgs__msg__DataBlob;

// Struct for a sequence of bosdyn_msgs__msg__DataBlob.
typedef struct bosdyn_msgs__msg__DataBlob__Sequence
{
  bosdyn_msgs__msg__DataBlob * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__DataBlob__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__DATA_BLOB__STRUCT_H_
