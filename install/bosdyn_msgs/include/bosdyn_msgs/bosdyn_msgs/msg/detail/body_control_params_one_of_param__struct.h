// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/BodyControlParamsOneOfParam.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__BODY_CONTROL_PARAMS_ONE_OF_PARAM__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__BODY_CONTROL_PARAMS_ONE_OF_PARAM__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'PARAM_NOT_SET'.
enum
{
  bosdyn_msgs__msg__BodyControlParamsOneOfParam__PARAM_NOT_SET = 0
};

/// Constant 'PARAM_BASE_OFFSET_RT_FOOTPRINT_SET'.
enum
{
  bosdyn_msgs__msg__BodyControlParamsOneOfParam__PARAM_BASE_OFFSET_RT_FOOTPRINT_SET = 1
};

/// Constant 'PARAM_BODY_ASSIST_FOR_MANIPULATION_SET'.
enum
{
  bosdyn_msgs__msg__BodyControlParamsOneOfParam__PARAM_BODY_ASSIST_FOR_MANIPULATION_SET = 2
};

/// Constant 'PARAM_BODY_POSE_SET'.
enum
{
  bosdyn_msgs__msg__BodyControlParamsOneOfParam__PARAM_BODY_POSE_SET = 3
};

// Include directives for member types
// Member 'base_offset_rt_footprint'
#include "bosdyn_msgs/msg/detail/se3_trajectory__struct.h"
// Member 'body_assist_for_manipulation'
#include "bosdyn_msgs/msg/detail/body_control_params_body_assist_for_manipulation__struct.h"
// Member 'body_pose'
#include "bosdyn_msgs/msg/detail/body_control_params_body_pose__struct.h"

/// Struct defined in msg/BodyControlParamsOneOfParam in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__BodyControlParamsOneOfParam
{
  /// ONEOF MESSAGE  Only one of the following can be set
  /// Desired base offset relative to the footprint pseudo-frame.
  /// The footprint pseudo-frame is a gravity aligned frame with its origin located at the
  /// geometric center of the feet in the X-Y axis, and at the nominal height of the hips in
  /// the Z axis. The yaw of the frame (wrt the world) is calcuated by the average foot
  /// locations, and is aligned with the feet.
  bosdyn_msgs__msg__SE3Trajectory base_offset_rt_footprint;
  /// The base will adjust to assist with manipulation, adjusting its height, pitch, and yaw as
  /// a function of the hand's location.  Note, manipulation assisted body control is only
  /// available for ArmCommand requests that control the end-effector, and are expressed in an
  /// inertial frame.  For example, sending a ArmCartesianCommand request with root_frame_name
  /// set to "odom" will allow the robot to compute a body adjustment.  However, sending a
  /// ArmCartesianCommand request with root_frame_name set to "body" or sending an
  /// ArmJointMoveCommand request is incompatible, and the body will reset to default height
  /// and orientation.
  bosdyn_msgs__msg__BodyControlParamsBodyAssistForManipulation body_assist_for_manipulation;
  /// An absolute desired position and orientation of the robot body origin. Command may be
  /// saturated to achievable or safe postures on receipt. Note: This parameter only has effect
  /// when coupled with a StandCommand. For other commands, the robot will fall back to
  /// defaults.
  bosdyn_msgs__msg__BodyControlParamsBodyPose body_pose;
  /// Only one of the above can be filled in.  Use the enum to choose which.
  int8_t param_choice;
} bosdyn_msgs__msg__BodyControlParamsOneOfParam;

// Struct for a sequence of bosdyn_msgs__msg__BodyControlParamsOneOfParam.
typedef struct bosdyn_msgs__msg__BodyControlParamsOneOfParam__Sequence
{
  bosdyn_msgs__msg__BodyControlParamsOneOfParam * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__BodyControlParamsOneOfParam__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__BODY_CONTROL_PARAMS_ONE_OF_PARAM__STRUCT_H_
