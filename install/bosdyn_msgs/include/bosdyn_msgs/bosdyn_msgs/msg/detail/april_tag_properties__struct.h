// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/AprilTagProperties.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__APRIL_TAG_PROPERTIES__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__APRIL_TAG_PROPERTIES__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'dimensions'
#include "bosdyn_msgs/msg/detail/vec2__struct.h"
// Member 'frame_name_fiducial'
// Member 'frame_name_fiducial_filtered'
// Member 'frame_name_camera'
// Member 'detection_covariance_reference_frame'
#include "rosidl_runtime_c/string.h"
// Member 'fiducial_pose_status'
// Member 'fiducial_filtered_pose_status'
#include "bosdyn_msgs/msg/detail/april_tag_properties_april_tag_pose_status__struct.h"
// Member 'detection_covariance'
#include "bosdyn_msgs/msg/detail/se3_covariance__struct.h"

/// Struct defined in msg/AprilTagProperties in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__AprilTagProperties
{
  ///  World object properties describing a fiducial object.
  /// Consistent integer id associated with a given apriltag. April Tag detections will be from the
  /// tag family 36h11.
  int32_t tag_id;
  /// Apriltag size in meters, where x is the row/width length and y is the
  /// height/col length of the tag
  bosdyn_msgs__msg__Vec2 dimensions;
  bool dimensions_is_set;
  /// The frame name for the raw version of this fiducial. This will be included in the transform
  /// snapshot.
  rosidl_runtime_c__String frame_name_fiducial;
  /// Status of the pose estimation of the unfiltered fiducial frame.
  bosdyn_msgs__msg__AprilTagPropertiesAprilTagPoseStatus fiducial_pose_status;
  /// The frame name for the filtered version of this fiducial. This will be included in the
  /// transform snapshot.
  rosidl_runtime_c__String frame_name_fiducial_filtered;
  /// Status of the pose estimation of the filtered fiducial frame.
  bosdyn_msgs__msg__AprilTagPropertiesAprilTagPoseStatus fiducial_filtered_pose_status;
  /// The frame name for the camera that detected this fiducial.
  rosidl_runtime_c__String frame_name_camera;
  /// A 6 x 6 Covariance matrix representing the marginal uncertainty of the last detection.
  /// The rows/columns are:
  /// rx, ry, rz, tx, ty, tz
  /// which represent incremental rotation and translation along the x, y, and z axes of the
  /// given frame, respectively.
  /// This is computed using the Jacobian of the pose estimation algorithm.
  bosdyn_msgs__msg__SE3Covariance detection_covariance;
  bool detection_covariance_is_set;
  /// The frame that the detection covariance is expressed in.
  rosidl_runtime_c__String detection_covariance_reference_frame;
} bosdyn_msgs__msg__AprilTagProperties;

// Struct for a sequence of bosdyn_msgs__msg__AprilTagProperties.
typedef struct bosdyn_msgs__msg__AprilTagProperties__Sequence
{
  bosdyn_msgs__msg__AprilTagProperties * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__AprilTagProperties__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__APRIL_TAG_PROPERTIES__STRUCT_H_
