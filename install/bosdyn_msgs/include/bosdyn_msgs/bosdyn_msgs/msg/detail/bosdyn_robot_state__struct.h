// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/BosdynRobotState.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__BOSDYN_ROBOT_STATE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__BOSDYN_ROBOT_STATE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'service_name'
// Member 'host'
// Member 'state_name'
#include "rosidl_runtime_c/string.h"
// Member 'child'
#include "bosdyn_msgs/msg/detail/node__struct.h"

/// Struct defined in msg/BosdynRobotState in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__BosdynRobotState
{
  /// Get state from the robot.
  /// Name of the service to use.
  rosidl_runtime_c__String service_name;
  /// Host machine the service is running on.
  rosidl_runtime_c__String host;
  /// Child node. Children will have access to the state gathered by this node.
  bosdyn_msgs__msg__Node child;
  bool child_is_set;
  /// Name of the bosdyn.api.RobotState object in the blackboard. For example, if this is set to
  /// "robot", children can look up "robot.power_state.motor_power_state" in the blackboard.
  rosidl_runtime_c__String state_name;
} bosdyn_msgs__msg__BosdynRobotState;

// Struct for a sequence of bosdyn_msgs__msg__BosdynRobotState.
typedef struct bosdyn_msgs__msg__BosdynRobotState__Sequence
{
  bosdyn_msgs__msg__BosdynRobotState * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__BosdynRobotState__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__BOSDYN_ROBOT_STATE__STRUCT_H_
