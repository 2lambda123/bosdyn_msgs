// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/SetLocalizationRequest.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SET_LOCALIZATION_REQUEST__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SET_LOCALIZATION_REQUEST__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/request_header__struct.h"
// Member 'initial_guess'
#include "bosdyn_msgs/msg/detail/localization__struct.h"
// Member 'ko_tform_body'
#include "geometry_msgs/msg/detail/pose__struct.h"
// Member 'fiducial_init'
#include "bosdyn_msgs/msg/detail/set_localization_request_fiducial_init__struct.h"
// Member 'refinement'
#include "bosdyn_msgs/msg/detail/set_localization_request_one_of_refinement__struct.h"

/// Struct defined in msg/SetLocalizationRequest in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__SetLocalizationRequest
{
  /// The SetLocalization request is used to initialize or reset the localization of GraphNav
  /// to a map. A localization consists of a waypoint ID, and a pose of the robot relative to that waypoint.
  /// GraphNav uses the localization to decide how to navigate through a map.
  /// The SetLocalizationRequest contains parameters to help find a correct localization. For example,
  /// AprilTags (fiducials) may be used to set the localization, or the caller can provide an explicit
  /// guess of the localization.
  /// Once the SetLocalizationRequest completes, the current localization to the map
  /// will be modified, and can be retrieved using a GetLocalizationStateRequest.
  /// Common request header.
  bosdyn_msgs__msg__RequestHeader header;
  bool header_is_set;
  /// Operator-supplied guess at localization.
  bosdyn_msgs__msg__Localization initial_guess;
  bool initial_guess_is_set;
  /// Robot pose when the initial_guess was made.
  /// This overcomes the race that occurs when the client is trying to initialize a moving robot.
  /// GraphNav will use its local ko_tform_body and this ko_tform_body to update the initial
  /// localization guess, if necessary.
  geometry_msgs__msg__Pose ko_tform_body;
  bool ko_tform_body_is_set;
  /// The max distance is how far away the robot is allowed to localize from the position supplied
  /// in the initial guess. If not specified, the offset is used directly. Otherwise it searches a neighborhood
  /// of the given size.
  double max_distance;
  /// The max yaw is how different the localized yaw is allowed to be from the supplied yaw
  /// in the initial guess. If not specified, the offset is used directly. Otherwise it searches a neighborhood
  /// of the given size.
  double max_yaw;
  /// Tells the initializer whether to use fiducials, and how to use them.
  bosdyn_msgs__msg__SetLocalizationRequestFiducialInit fiducial_init;
  /// If using FIDUCIAL_INIT_SPECIFIC, this is the specific fiducial ID to use for initialization.
  /// If no detection of this fiducial exists, the service will return STATUS_NO_MATCHING_FIDUCIAL.
  /// If detections exist, but are low quality, STATUS_FIDUCIAL_TOO_FAR_AWAY, FIDUCIAL_TOO_OLD, or FIDUCIAL_POSE_UNCERTAIN will be returned.
  int32_t use_fiducial_id;
  /// If true, consider how nearby localizations appear (like turned 180).
  bool do_ambiguity_check;
  /// If using FIDUCIAL_INIT_SPECIFIC and this is true, the initializer will only consider
  /// fiducial detections from the target waypoint (from initial_guess). Otherwise, if the
  /// target waypoint does not contain a good measurement of the desired fiducial, nearby waypoints
  /// may be used to infer the robot's location.
  bool restrict_fiducial_detections_to_target_waypoint;
  bosdyn_msgs__msg__SetLocalizationRequestOneOfRefinement refinement;
} bosdyn_msgs__msg__SetLocalizationRequest;

// Struct for a sequence of bosdyn_msgs__msg__SetLocalizationRequest.
typedef struct bosdyn_msgs__msg__SetLocalizationRequest__Sequence
{
  bosdyn_msgs__msg__SetLocalizationRequest * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__SetLocalizationRequest__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SET_LOCALIZATION_REQUEST__STRUCT_H_
