// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/ServiceFaultId.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SERVICE_FAULT_ID__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SERVICE_FAULT_ID__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'fault_name'
// Member 'service_name'
// Member 'payload_guid'
#include "rosidl_runtime_c/string.h"

/// Struct defined in msg/ServiceFaultId in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__ServiceFaultId
{
  /// Information necessary to uniquely specify a service fault.
  /// A service fault typically is associated with a service running on the robot or a
  /// payload. Occassionally, the fault may pertain to a payload but no specific service
  /// on the payload. In that situation, no service_name should not be specified and instead
  /// a payload_guid should be specified. Otherwise, in the standard case of a service
  /// originating fault, only the service_name should be specified and the payload_guid
  /// will be populated automatically by the fault service on robot.
  /// Name of the fault.
  rosidl_runtime_c__String fault_name;
  /// Name of the registered service associated with the fault.
  /// Optional. Service name does not need to be specified if this is a payload-level
  /// fault with no associated service.
  rosidl_runtime_c__String service_name;
  /// GUID of the payload associated with the faulted service.
  /// Optional. If not set, it will be assigned to the payload associated with the
  /// service_name.
  rosidl_runtime_c__String payload_guid;
} bosdyn_msgs__msg__ServiceFaultId;

// Struct for a sequence of bosdyn_msgs__msg__ServiceFaultId.
typedef struct bosdyn_msgs__msg__ServiceFaultId__Sequence
{
  bosdyn_msgs__msg__ServiceFaultId * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__ServiceFaultId__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SERVICE_FAULT_ID__STRUCT_H_
