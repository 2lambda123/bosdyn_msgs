// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/PowerCommandRequestRequest.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__POWER_COMMAND_REQUEST_REQUEST__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__POWER_COMMAND_REQUEST_REQUEST__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'REQUEST_UNKNOWN'.
/**
  * Invalid request; do not use.
 */
enum
{
  bosdyn_msgs__msg__PowerCommandRequestRequest__REQUEST_UNKNOWN = 0
};

/// Constant 'REQUEST_OFF_MOTORS'.
/**
  * Cut power to motors immediately.
 */
enum
{
  bosdyn_msgs__msg__PowerCommandRequestRequest__REQUEST_OFF_MOTORS = 1
};

/// Constant 'REQUEST_ON_MOTORS'.
/**
  * Turn on power to the robot motors.
 */
enum
{
  bosdyn_msgs__msg__PowerCommandRequestRequest__REQUEST_ON_MOTORS = 2
};

/// Constant 'REQUEST_OFF_ROBOT'.
/**
  * Turn off the robot. Same as physical switch.
 */
enum
{
  bosdyn_msgs__msg__PowerCommandRequestRequest__REQUEST_OFF_ROBOT = 3
};

/// Constant 'REQUEST_CYCLE_ROBOT'.
/**
  * Power cycle the robot. Same as physical switch.
 */
enum
{
  bosdyn_msgs__msg__PowerCommandRequestRequest__REQUEST_CYCLE_ROBOT = 4
};

/// Constant 'REQUEST_OFF_PAYLOAD_PORTS'.
/**
  * Cut power to the payload ports.
 */
enum
{
  bosdyn_msgs__msg__PowerCommandRequestRequest__REQUEST_OFF_PAYLOAD_PORTS = 5
};

/// Constant 'REQUEST_ON_PAYLOAD_PORTS'.
/**
  * Turn on power to the payload ports.
 */
enum
{
  bosdyn_msgs__msg__PowerCommandRequestRequest__REQUEST_ON_PAYLOAD_PORTS = 6
};

/// Constant 'REQUEST_OFF_WIFI_RADIO'.
/**
  * Cut power to the hardware Wi-Fi radio.
 */
enum
{
  bosdyn_msgs__msg__PowerCommandRequestRequest__REQUEST_OFF_WIFI_RADIO = 7
};

/// Constant 'REQUEST_ON_WIFI_RADIO'.
/**
  * Power on the hardware Wi-Fi radio.
 */
enum
{
  bosdyn_msgs__msg__PowerCommandRequestRequest__REQUEST_ON_WIFI_RADIO = 8
};

/// Struct defined in msg/PowerCommandRequestRequest in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__PowerCommandRequestRequest
{
  int8_t value;
} bosdyn_msgs__msg__PowerCommandRequestRequest;

// Struct for a sequence of bosdyn_msgs__msg__PowerCommandRequestRequest.
typedef struct bosdyn_msgs__msg__PowerCommandRequestRequest__Sequence
{
  bosdyn_msgs__msg__PowerCommandRequestRequest * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__PowerCommandRequestRequest__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__POWER_COMMAND_REQUEST_REQUEST__STRUCT_H_
