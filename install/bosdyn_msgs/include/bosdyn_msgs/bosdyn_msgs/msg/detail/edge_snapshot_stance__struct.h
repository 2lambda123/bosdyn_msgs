// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/EdgeSnapshotStance.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__EDGE_SNAPSHOT_STANCE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__EDGE_SNAPSHOT_STANCE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'timestamp'
#include "builtin_interfaces/msg/detail/time__struct.h"
// Member 'foot_states'
#include "bosdyn_msgs/msg/detail/foot_state__struct.h"
// Member 'ko_tform_body'
// Member 'vision_tform_body'
#include "geometry_msgs/msg/detail/pose__struct.h"

/// Struct defined in msg/EdgeSnapshotStance in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__EdgeSnapshotStance
{
  /// Timestamp of the stance.
  builtin_interfaces__msg__Time timestamp;
  bool timestamp_is_set;
  /// List of all the foot positions for a single stance.
  bosdyn_msgs__msg__FootState__Sequence foot_states;
  /// KO Body position corresponding to this stance.
  geometry_msgs__msg__Pose ko_tform_body;
  bool ko_tform_body_is_set;
  /// Vision Body position corresponding to this stance.
  geometry_msgs__msg__Pose vision_tform_body;
  bool vision_tform_body_is_set;
  /// Does this stance correspond to a planar ground region.
  bool planar_ground;
  bool planar_ground_is_set;
} bosdyn_msgs__msg__EdgeSnapshotStance;

// Struct for a sequence of bosdyn_msgs__msg__EdgeSnapshotStance.
typedef struct bosdyn_msgs__msg__EdgeSnapshotStance__Sequence
{
  bosdyn_msgs__msg__EdgeSnapshotStance * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__EdgeSnapshotStance__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__EDGE_SNAPSHOT_STANCE__STRUCT_H_
