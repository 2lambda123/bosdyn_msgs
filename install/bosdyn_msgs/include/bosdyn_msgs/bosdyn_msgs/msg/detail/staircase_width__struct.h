// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/StaircaseWidth.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__STAIRCASE_WIDTH__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__STAIRCASE_WIDTH__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'bounded_width'
#include "bosdyn_msgs/msg/detail/staircase_width_bounded_width__struct.h"

/// Struct defined in msg/StaircaseWidth in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__StaircaseWidth
{
  /// The distance in meters between the left and right side of the staircase.
  double width;
  /// It may be that we do not know the location of one or both walls/railings.
  /// For any sides that are not considered bounded, the stairs extend at least as far as the
  /// specified width, but may extend farther.
  /// The two sides of a staircase are designated "east" and "west" as if north is up.
  /// The "west" side is the left when facing up the stairs and the right when facing down.
  /// The "east" side is the right when facing up the stairs and the left when facing down.
  bosdyn_msgs__msg__StaircaseWidthBoundedWidth bounded_width;
} bosdyn_msgs__msg__StaircaseWidth;

// Struct for a sequence of bosdyn_msgs__msg__StaircaseWidth.
typedef struct bosdyn_msgs__msg__StaircaseWidth__Sequence
{
  bosdyn_msgs__msg__StaircaseWidth * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__StaircaseWidth__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__STAIRCASE_WIDTH__STRUCT_H_
