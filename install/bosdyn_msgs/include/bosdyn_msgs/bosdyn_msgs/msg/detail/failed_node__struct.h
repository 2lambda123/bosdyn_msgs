// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/FailedNode.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__FAILED_NODE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__FAILED_NODE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'name'
// Member 'error'
// Member 'impl_typename'
#include "rosidl_runtime_c/string.h"

/// Struct defined in msg/FailedNode in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__FailedNode
{
  /// General message describing a node that has failed, for example as part of a PlayMission or
  /// LoadMission RPC.
  /// Human-readable name of this node, e.g. "Goto waypoint 1", or "Power On".
  rosidl_runtime_c__String name;
  /// The reason why this node failed. May not be provided by all nodes.
  rosidl_runtime_c__String error;
  /// The type of node, e.g. "bosdyn.api.mission.Sequence". May not be provided by all nodes.
  rosidl_runtime_c__String impl_typename;
} bosdyn_msgs__msg__FailedNode;

// Struct for a sequence of bosdyn_msgs__msg__FailedNode.
typedef struct bosdyn_msgs__msg__FailedNode__Sequence
{
  bosdyn_msgs__msg__FailedNode * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__FailedNode__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__FAILED_NODE__STRUCT_H_
