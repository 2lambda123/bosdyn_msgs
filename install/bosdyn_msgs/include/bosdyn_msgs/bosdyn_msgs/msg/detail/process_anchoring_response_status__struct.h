// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/ProcessAnchoringResponseStatus.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__PROCESS_ANCHORING_RESPONSE_STATUS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__PROCESS_ANCHORING_RESPONSE_STATUS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'STATUS_UNKNOWN'.
/**
  * Programming error.
 */
enum
{
  bosdyn_msgs__msg__ProcessAnchoringResponseStatus__STATUS_UNKNOWN = 0
};

/// Constant 'STATUS_OK'.
/**
  * Success.
 */
enum
{
  bosdyn_msgs__msg__ProcessAnchoringResponseStatus__STATUS_OK = 1
};

/// Constant 'STATUS_MISSING_WAYPOINT_SNAPSHOTS'.
/**
  * Not all of the waypoint snapshots exist on the server. Upload them to continue.
 */
enum
{
  bosdyn_msgs__msg__ProcessAnchoringResponseStatus__STATUS_MISSING_WAYPOINT_SNAPSHOTS = 2
};

/// Constant 'STATUS_INVALID_GRAPH'.
/**
  * The graph is invalid topologically, for example containing missing waypoints referenced by edges.
 */
enum
{
  bosdyn_msgs__msg__ProcessAnchoringResponseStatus__STATUS_INVALID_GRAPH = 3
};

/// Constant 'STATUS_OPTIMIZATION_FAILURE'.
/**
  * The optimization failed due to local minima or an ill-conditioned problem definition.
 */
enum
{
  bosdyn_msgs__msg__ProcessAnchoringResponseStatus__STATUS_OPTIMIZATION_FAILURE = 4
};

/// Constant 'STATUS_INVALID_PARAMS'.
/**
  * The parameters passed to the optimizer do not make sense (e.g negative weights).
 */
enum
{
  bosdyn_msgs__msg__ProcessAnchoringResponseStatus__STATUS_INVALID_PARAMS = 5
};

/// Constant 'STATUS_CONSTRAINT_VIOLATION'.
/**
  * One or more anchors were moved outside of the desired constraints.
 */
enum
{
  bosdyn_msgs__msg__ProcessAnchoringResponseStatus__STATUS_CONSTRAINT_VIOLATION = 6
};

/// Constant 'STATUS_MAX_ITERATIONS'.
/**
  * The optimizer reached the maximum number of iterations before converging.
 */
enum
{
  bosdyn_msgs__msg__ProcessAnchoringResponseStatus__STATUS_MAX_ITERATIONS = 7
};

/// Constant 'STATUS_MAX_TIME'.
/**
  * The optimizer timed out before converging.
 */
enum
{
  bosdyn_msgs__msg__ProcessAnchoringResponseStatus__STATUS_MAX_TIME = 8
};

/// Constant 'STATUS_INVALID_HINTS'.
/**
  * One or more of the hints passed in to the optimizer are invalid (do not correspond to real waypoints or objects).
 */
enum
{
  bosdyn_msgs__msg__ProcessAnchoringResponseStatus__STATUS_INVALID_HINTS = 9
};

/// Constant 'STATUS_MAP_MODIFIED_DURING_PROCESSING'.
/**
  * Tried to write the anchoring after processing, but another client may have modified the map. Try again.
 */
enum
{
  bosdyn_msgs__msg__ProcessAnchoringResponseStatus__STATUS_MAP_MODIFIED_DURING_PROCESSING = 10
};

/// Constant 'STATUS_INVALID_GRAVITY_ALIGNMENT'.
/**
  * An anchor hint (waypoint or fiducial) had an invalid orientation with respect to gravity.
 */
enum
{
  bosdyn_msgs__msg__ProcessAnchoringResponseStatus__STATUS_INVALID_GRAVITY_ALIGNMENT = 11
};

/// Struct defined in msg/ProcessAnchoringResponseStatus in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__ProcessAnchoringResponseStatus
{
  int8_t value;
} bosdyn_msgs__msg__ProcessAnchoringResponseStatus;

// Struct for a sequence of bosdyn_msgs__msg__ProcessAnchoringResponseStatus.
typedef struct bosdyn_msgs__msg__ProcessAnchoringResponseStatus__Sequence
{
  bosdyn_msgs__msg__ProcessAnchoringResponseStatus * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__ProcessAnchoringResponseStatus__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__PROCESS_ANCHORING_RESPONSE_STATUS__STRUCT_H_
