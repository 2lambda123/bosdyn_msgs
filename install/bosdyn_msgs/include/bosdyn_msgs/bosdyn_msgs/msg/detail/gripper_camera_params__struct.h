// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/GripperCameraParams.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__GRIPPER_CAMERA_PARAMS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__GRIPPER_CAMERA_PARAMS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'camera_mode'
#include "bosdyn_msgs/msg/detail/gripper_camera_params_camera_mode__struct.h"
// Member 'exposure_roi'
// Member 'focus_roi'
#include "bosdyn_msgs/msg/detail/roi_parameters__struct.h"
// Member 'hdr'
#include "bosdyn_msgs/msg/detail/hdr_parameters__struct.h"
// Member 'led_mode'
#include "bosdyn_msgs/msg/detail/gripper_camera_params_led_mode__struct.h"

/// Struct defined in msg/GripperCameraParams in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__GripperCameraParams
{
  /// CameraMode sets the resolution, frame rate and image format.
  bosdyn_msgs__msg__GripperCameraParamsCameraMode camera_mode;
  /// Set the image brightness level.
  /// Min 0, max 1
  float brightness;
  bool brightness_is_set;
  /// Set the image contrast level.
  /// Min 0, max 1
  float contrast;
  bool contrast_is_set;
  /// Set the image saturation level.
  /// Min 0, max 1
  float saturation;
  bool saturation_is_set;
  /// Set the image gain level.
  /// This paramater is only effective when manual exposure is used.
  /// Min 0, max 1
  float gain;
  bool gain_is_set;
  /// Whether the camera should use auto exposure.
  /// Unset is equivalent to setting exposure_auto = true
  bool exposure_auto;
  bool exposure_auto_is_set;
  /// Manually set the image exposure level. This value is only used if exposure_auto is false.
  /// Min 0, max 1
  float exposure_absolute;
  bool exposure_absolute_is_set;
  /// Region of interest for exposure.  Specify a spot exposure on a
  /// certain part of the image.  Only used in auto-exposure mode.
  bosdyn_msgs__msg__RoiParameters exposure_roi;
  bool exposure_roi_is_set;
  /// Whether the camera should automatically focus the image.
  /// Unset is equivalent to setting focus_auto = true
  bool focus_auto;
  bool focus_auto_is_set;
  /// Manually set the image focus. This value is only used if focus_auto is false.
  /// Min 0, max 1
  /// 0 corresponds to focus at infinity, 1 corresponds to a focal point close to the camera.
  float focus_absolute;
  bool focus_absolute_is_set;
  /// Region of interest for focus.  Only used when in auto-focus mode.
  bosdyn_msgs__msg__RoiParameters focus_roi;
  bool focus_roi_is_set;
  /// Set to true to draw a rectangle in the image where the focus ROI is.
  /// Unset is equivalent to setting draw_focus_roi_rectangle = false
  bool draw_focus_roi_rectangle;
  bool draw_focus_roi_rectangle_is_set;
  /// High dynamic range (HDR) mode sets the camera to take multiple frames to get exposure
  /// in a large range.  HDR will reduce framerate in high-framerate modes.
  bosdyn_msgs__msg__HdrParameters hdr;
  /// Set the LED mode.
  bosdyn_msgs__msg__GripperCameraParamsLedMode led_mode;
  /// Brightness of the LED in torch mode.  Min = 0, max = 1.
  /// Note: A brightness value of 0 is *not* off, but is the minimum brightness.
  ///       To turn off the LED, set the led_mode to LED_MODE_OFF
  float led_torch_brightness;
  bool led_torch_brightness_is_set;
  /// Whether the camera should use auto white balance
  /// Unset is equivalent to setting white_balance_temperature_auto = true
  bool white_balance_temperature_auto;
  bool white_balance_temperature_auto_is_set;
  /// Set the image gamma level.
  /// Min 0, max 1
  float gamma;
  bool gamma_is_set;
  /// Manually set the white balance focus. This value is only used if white_balance_temperature_auto is false.
  /// Min 0, max 1
  /// 0 corresponds to focus at infinity, 1 corresponds to a focal point close to the camera.
  float white_balance_temperature;
  bool white_balance_temperature_is_set;
  /// Set the image sharpness level.
  /// Min 0, max 1
  float sharpness;
  bool sharpness_is_set;
} bosdyn_msgs__msg__GripperCameraParams;

// Struct for a sequence of bosdyn_msgs__msg__GripperCameraParams.
typedef struct bosdyn_msgs__msg__GripperCameraParams__Sequence
{
  bosdyn_msgs__msg__GripperCameraParams * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__GripperCameraParams__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__GRIPPER_CAMERA_PARAMS__STRUCT_H_
