// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/EdgeEdgeSource.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__EDGE_EDGE_SOURCE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__EDGE_EDGE_SOURCE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'EDGE_SOURCE_UNKNOWN'.
enum
{
  bosdyn_msgs__msg__EdgeEdgeSource__EDGE_SOURCE_UNKNOWN = 0
};

/// Constant 'EDGE_SOURCE_ODOMETRY'.
/**
  * Edges with transforms from odometry.
 */
enum
{
  bosdyn_msgs__msg__EdgeEdgeSource__EDGE_SOURCE_ODOMETRY = 1
};

/// Constant 'EDGE_SOURCE_SMALL_LOOP_CLOSURE'.
/**
  * Edges with transforms from a short chain of other edges.
 */
enum
{
  bosdyn_msgs__msg__EdgeEdgeSource__EDGE_SOURCE_SMALL_LOOP_CLOSURE = 2
};

/// Constant 'EDGE_SOURCE_FIDUCIAL_LOOP_CLOSURE'.
/**
  * Edges with transforms from multiple fiducial observations.
 */
enum
{
  bosdyn_msgs__msg__EdgeEdgeSource__EDGE_SOURCE_FIDUCIAL_LOOP_CLOSURE = 3
};

/// Constant 'EDGE_SOURCE_ALTERNATE_ROUTE_FINDING'.
/**
  * Edges that may help find alternate routes.
 */
enum
{
  bosdyn_msgs__msg__EdgeEdgeSource__EDGE_SOURCE_ALTERNATE_ROUTE_FINDING = 4
};

/// Constant 'EDGE_SOURCE_USER_REQUEST'.
/**
  * Created via a CreateEdge RPC.
 */
enum
{
  bosdyn_msgs__msg__EdgeEdgeSource__EDGE_SOURCE_USER_REQUEST = 5
};

/// Constant 'EDGE_SOURCE_LOCALIZATION'.
/**
  * Created when we start recording after recording has been paused.
  * For example, an "extension" of a graph will start with an edge
  * of type EDGE_SOURCE_LOCALIZATION.
 */
enum
{
  bosdyn_msgs__msg__EdgeEdgeSource__EDGE_SOURCE_LOCALIZATION = 6
};

/// Struct defined in msg/EdgeEdgeSource in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__EdgeEdgeSource
{
  int8_t value;
} bosdyn_msgs__msg__EdgeEdgeSource;

// Struct for a sequence of bosdyn_msgs__msg__EdgeEdgeSource.
typedef struct bosdyn_msgs__msg__EdgeEdgeSource__Sequence
{
  bosdyn_msgs__msg__EdgeEdgeSource * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__EdgeEdgeSource__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__EDGE_EDGE_SOURCE__STRUCT_H_
