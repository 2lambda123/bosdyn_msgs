// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/SwingHeight.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SWING_HEIGHT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SWING_HEIGHT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'SWING_HEIGHT_UNKNOWN'.
/**
  * The type of swing height for a step.
  * Invalid; do not use.
 */
enum
{
  bosdyn_msgs__msg__SwingHeight__SWING_HEIGHT_UNKNOWN = 0
};

/// Constant 'SWING_HEIGHT_LOW'.
/**
  * Low-stepping. Robot will try to only swing legs a few cm away from ground.
 */
enum
{
  bosdyn_msgs__msg__SwingHeight__SWING_HEIGHT_LOW = 1
};

/// Constant 'SWING_HEIGHT_MEDIUM'.
/**
  * Default for most cases, use other values with caution.
 */
enum
{
  bosdyn_msgs__msg__SwingHeight__SWING_HEIGHT_MEDIUM = 2
};

/// Constant 'SWING_HEIGHT_HIGH'.
/**
  * High-stepping. Possibly useful with degraded vision operation.
 */
enum
{
  bosdyn_msgs__msg__SwingHeight__SWING_HEIGHT_HIGH = 3
};

/// Struct defined in msg/SwingHeight in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__SwingHeight
{
  int8_t value;
} bosdyn_msgs__msg__SwingHeight;

// Struct for a sequence of bosdyn_msgs__msg__SwingHeight.
typedef struct bosdyn_msgs__msg__SwingHeight__Sequence
{
  bosdyn_msgs__msg__SwingHeight * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__SwingHeight__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SWING_HEIGHT__STRUCT_H_
