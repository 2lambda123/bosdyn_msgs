// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/EdgeAnnotationsDirectionConstraint.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__EDGE_ANNOTATIONS_DIRECTION_CONSTRAINT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__EDGE_ANNOTATIONS_DIRECTION_CONSTRAINT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'DIRECTION_CONSTRAINT_UNKNOWN'.
/**
  * We don't know if there are direction constraints.
 */
enum
{
  bosdyn_msgs__msg__EdgeAnnotationsDirectionConstraint__DIRECTION_CONSTRAINT_UNKNOWN = 0
};

/// Constant 'DIRECTION_CONSTRAINT_NO_TURN'.
/**
  * The robot must not turn while walking the edge, but can face either waypoint.
 */
enum
{
  bosdyn_msgs__msg__EdgeAnnotationsDirectionConstraint__DIRECTION_CONSTRAINT_NO_TURN = 1
};

/// Constant 'DIRECTION_CONSTRAINT_FORWARD'.
/**
  * Robot should walk the edge face-first.
 */
enum
{
  bosdyn_msgs__msg__EdgeAnnotationsDirectionConstraint__DIRECTION_CONSTRAINT_FORWARD = 2
};

/// Constant 'DIRECTION_CONSTRAINT_REVERSE'.
/**
  * Robot should walk the edge rear-first.
 */
enum
{
  bosdyn_msgs__msg__EdgeAnnotationsDirectionConstraint__DIRECTION_CONSTRAINT_REVERSE = 3
};

/// Constant 'DIRECTION_CONSTRAINT_NONE'.
/**
  * No constraints on which way the robot faces.
 */
enum
{
  bosdyn_msgs__msg__EdgeAnnotationsDirectionConstraint__DIRECTION_CONSTRAINT_NONE = 4
};

/// Struct defined in msg/EdgeAnnotationsDirectionConstraint in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__EdgeAnnotationsDirectionConstraint
{
  int8_t value;
} bosdyn_msgs__msg__EdgeAnnotationsDirectionConstraint;

// Struct for a sequence of bosdyn_msgs__msg__EdgeAnnotationsDirectionConstraint.
typedef struct bosdyn_msgs__msg__EdgeAnnotationsDirectionConstraint__Sequence
{
  bosdyn_msgs__msg__EdgeAnnotationsDirectionConstraint * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__EdgeAnnotationsDirectionConstraint__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__EDGE_ANNOTATIONS_DIRECTION_CONSTRAINT__STRUCT_H_
