// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/ListLeasesResponse.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__LIST_LEASES_RESPONSE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__LIST_LEASES_RESPONSE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/response_header__struct.h"
// Member 'resources'
#include "bosdyn_msgs/msg/detail/lease_resource__struct.h"
// Member 'resource_tree'
#include "bosdyn_msgs/msg/detail/resource_tree__struct.h"

/// Struct defined in msg/ListLeasesResponse in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__ListLeasesResponse
{
  /// The ListLease response message returns all known lease resources from the LeaseService.
  /// Common response header.
  bosdyn_msgs__msg__ResponseHeader header;
  bool header_is_set;
  /// The resources managed by the LeaseService.
  bosdyn_msgs__msg__LeaseResource__Sequence resources;
  /// Provide the hierarchical lease structure.
  /// A resource can encapsulate multiple sub-resources.
  /// For example, the "body" lease may include control of the legs, arm, and gripper.
  bosdyn_msgs__msg__ResourceTree resource_tree;
  bool resource_tree_is_set;
} bosdyn_msgs__msg__ListLeasesResponse;

// Struct for a sequence of bosdyn_msgs__msg__ListLeasesResponse.
typedef struct bosdyn_msgs__msg__ListLeasesResponse__Sequence
{
  bosdyn_msgs__msg__ListLeasesResponse * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__ListLeasesResponse__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__LIST_LEASES_RESPONSE__STRUCT_H_
