// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/RegisterPayloadRequest.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__REGISTER_PAYLOAD_REQUEST__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__REGISTER_PAYLOAD_REQUEST__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/request_header__struct.h"
// Member 'payload'
#include "bosdyn_msgs/msg/detail/payload__struct.h"
// Member 'payload_secret'
#include "rosidl_runtime_c/string.h"

/// Struct defined in msg/RegisterPayloadRequest in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__RegisterPayloadRequest
{
  /// The RegisterPayload request message contains the payload information and secret to be
  /// able to register it to the directory.
  /// Common request header.
  bosdyn_msgs__msg__RequestHeader header;
  bool header_is_set;
  /// The payload to register, which must have, at minimum, GUID specified correctly.
  /// The admin console can be used to verify that the payload definition is valid
  /// after registration.
  bosdyn_msgs__msg__Payload payload;
  bool payload_is_set;
  /// A private string provided by the payload to verify identity for auth.
  rosidl_runtime_c__String payload_secret;
} bosdyn_msgs__msg__RegisterPayloadRequest;

// Struct for a sequence of bosdyn_msgs__msg__RegisterPayloadRequest.
typedef struct bosdyn_msgs__msg__RegisterPayloadRequest__Sequence
{
  bosdyn_msgs__msg__RegisterPayloadRequest * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__RegisterPayloadRequest__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__REGISTER_PAYLOAD_REQUEST__STRUCT_H_
