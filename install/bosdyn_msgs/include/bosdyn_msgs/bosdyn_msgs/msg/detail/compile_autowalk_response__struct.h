// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/CompileAutowalkResponse.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__COMPILE_AUTOWALK_RESPONSE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__COMPILE_AUTOWALK_RESPONSE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/response_header__struct.h"
// Member 'status'
#include "bosdyn_msgs/msg/detail/compile_autowalk_response_status__struct.h"
// Member 'root'
#include "bosdyn_msgs/msg/detail/node__struct.h"
// Member 'element_identifiers'
#include "bosdyn_msgs/msg/detail/element_identifiers__struct.h"
// Member 'failed_elements'
#include "bosdyn_msgs/msg/detail/key_int32_value_bosdyn_msgs_failed_element__struct.h"
// Member 'docking_node'
// Member 'loop_node'
#include "bosdyn_msgs/msg/detail/node_identifier__struct.h"

/// Struct defined in msg/CompileAutowalkResponse in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__CompileAutowalkResponse
{
  /// Common response header.
  bosdyn_msgs__msg__ResponseHeader header;
  bool header_is_set;
  /// Possible results of compiling a walk to mission.
  /// Result of compiling the mission.
  bosdyn_msgs__msg__CompileAutowalkResponseStatus status;
  /// Reserved for deprecated fields.
  /// Root node of compiled walk.
  bosdyn_msgs__msg__Node root;
  bool root_is_set;
  /// There will be one ElementIdentifier for each Element in the input Walk.
  /// The index of each ElementIdentifier corresponds to the index of the Element in the input
  /// Walk. Skipped elements will have default values for id's.  (0 and empty string)
  bosdyn_msgs__msg__ElementIdentifiers__Sequence element_identifiers;
  /// If certain elements failed compilation, they will be reported back in this field.
  /// The map correlates the index of the Element in the input Walk to the FailedElement.
  bosdyn_msgs__msg__KeyInt32ValueBosdynMsgsFailedElement__Sequence failed_elements;
  /// Final docking node.
  bosdyn_msgs__msg__NodeIdentifier docking_node;
  bool docking_node_is_set;
  /// Node that contains the main sequence of actions performed in the walk.
  /// In continuous playback mode, the walk repeats when this node completes.
  bosdyn_msgs__msg__NodeIdentifier loop_node;
  bool loop_node_is_set;
} bosdyn_msgs__msg__CompileAutowalkResponse;

// Struct for a sequence of bosdyn_msgs__msg__CompileAutowalkResponse.
typedef struct bosdyn_msgs__msg__CompileAutowalkResponse__Sequence
{
  bosdyn_msgs__msg__CompileAutowalkResponse * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__CompileAutowalkResponse__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__COMPILE_AUTOWALK_RESPONSE__STRUCT_H_
