// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/ForDuration.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__FOR_DURATION__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__FOR_DURATION__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'duration'
#include "builtin_interfaces/msg/detail/duration__struct.h"
// Member 'child'
// Member 'timeout_child'
#include "bosdyn_msgs/msg/detail/node__struct.h"
// Member 'time_remaining_name'
#include "rosidl_runtime_c/string.h"

/// Struct defined in msg/ForDuration in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__ForDuration
{
  /// Run this child for a maximum amount of mission execution time.
  /// Will exit with child's status if the child finishes early,
  /// FAILURE if the child remains in RUNNING state for too long
  /// and no timeout_child is specified, or the status of the
  /// timeout_child.
  /// Maximum duration of mission execution time.
  builtin_interfaces__msg__Duration duration;
  bool duration_is_set;
  /// Child to execute for the duration.
  bosdyn_msgs__msg__Node child;
  bool child_is_set;
  /// Optional blackboard variable name.  If specified, this node will define a blackboard
  /// variable that its child has access to, and write the number of seconds remaining as
  /// a double to the blackboard under this name.
  rosidl_runtime_c__String time_remaining_name;
  /// Optional node that will run if the child times out.  If not specified, this node
  /// will return FAILURE when the child times out.  If specified, and the
  /// child times out, this node will return the status of the timeout_child.
  /// The timeout_child does not respect the original timeout.
  bosdyn_msgs__msg__Node timeout_child;
  bool timeout_child_is_set;
} bosdyn_msgs__msg__ForDuration;

// Struct for a sequence of bosdyn_msgs__msg__ForDuration.
typedef struct bosdyn_msgs__msg__ForDuration__Sequence
{
  bosdyn_msgs__msg__ForDuration * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__ForDuration__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__FOR_DURATION__STRUCT_H_
