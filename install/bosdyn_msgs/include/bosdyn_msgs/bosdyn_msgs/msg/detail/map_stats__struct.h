// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/MapStats.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__MAP_STATS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__MAP_STATS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'waypoints'
// Member 'waypoint_snapshots'
// Member 'alternate_waypoints'
// Member 'edges'
// Member 'edge_snapshots'
// Member 'alternate_edges'
// Member 'waypoint_anchors'
// Member 'object_anchors'
#include "bosdyn_msgs/msg/detail/map_stats_stat__struct.h"

/// Struct defined in msg/MapStats in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__MapStats
{
  /// General statistics on the map that is loaded into GraphNav on the robot, including
  /// information on the graph topology and snapshot data.
  /// Statistics from a particular type of object stored in the GraphNav map.
  /// Waypoints (including alternate route finding waypoints).
  bosdyn_msgs__msg__MapStatsStat waypoints;
  bool waypoints_is_set;
  /// Waypoint snapshots.
  bosdyn_msgs__msg__MapStatsStat waypoint_snapshots;
  bool waypoint_snapshots_is_set;
  /// The alternate route finding waypoints (used for alternate path planning).
  bosdyn_msgs__msg__MapStatsStat alternate_waypoints;
  bool alternate_waypoints_is_set;
  /// Edges (including alternate route finding edges).
  bosdyn_msgs__msg__MapStatsStat edges;
  bool edges_is_set;
  /// Edge snapshots.
  bosdyn_msgs__msg__MapStatsStat edge_snapshots;
  bool edge_snapshots_is_set;
  /// Alternate edges (used for alternate path planning).
  bosdyn_msgs__msg__MapStatsStat alternate_edges;
  bool alternate_edges_is_set;
  /// Anchors for waypoints. (For computing anchorings to fixed reference frames).
  bosdyn_msgs__msg__MapStatsStat waypoint_anchors;
  bool waypoint_anchors_is_set;
  /// Anchors for world objects (fiducials).
  bosdyn_msgs__msg__MapStatsStat object_anchors;
  bool object_anchors_is_set;
  /// The total distance travelled along recorded edges by the robot in the loaded
  /// map.
  double total_path_length;
} bosdyn_msgs__msg__MapStats;

// Struct for a sequence of bosdyn_msgs__msg__MapStats.
typedef struct bosdyn_msgs__msg__MapStats__Sequence
{
  bosdyn_msgs__msg__MapStats * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__MapStats__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__MAP_STATS__STRUCT_H_
