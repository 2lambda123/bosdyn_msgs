// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/WaypointAnnotationsLoopClosureSettings.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__WAYPOINT_ANNOTATIONS_LOOP_CLOSURE_SETTINGS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__WAYPOINT_ANNOTATIONS_LOOP_CLOSURE_SETTINGS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Struct defined in msg/WaypointAnnotationsLoopClosureSettings in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__WaypointAnnotationsLoopClosureSettings
{
  /// If true, loop closure will be fully disabled at this waypoint.
  bool disable_loop_closure;
  /// If true, collision checking will be disabled for loop closures
  /// from or to this waypoint.
  bool disable_collision_check;
  /// If nonzero, edges are allowed to be this long when making loop
  /// closures to this waypoint. If zero, global/default settings will
  /// be used.
  double max_edge_length;
  /// If nonzero, loop closures to this waypoint may shortcut this amount
  /// of path length. If zero, global/default settings will be used.
  double max_odometry_path_length;
} bosdyn_msgs__msg__WaypointAnnotationsLoopClosureSettings;

// Struct for a sequence of bosdyn_msgs__msg__WaypointAnnotationsLoopClosureSettings.
typedef struct bosdyn_msgs__msg__WaypointAnnotationsLoopClosureSettings__Sequence
{
  bosdyn_msgs__msg__WaypointAnnotationsLoopClosureSettings * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__WaypointAnnotationsLoopClosureSettings__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__WAYPOINT_ANNOTATIONS_LOOP_CLOSURE_SETTINGS__STRUCT_H_
