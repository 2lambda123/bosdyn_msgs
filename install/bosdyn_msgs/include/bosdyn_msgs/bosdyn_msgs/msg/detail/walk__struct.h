// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/Walk.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__WALK__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__WALK__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'global_parameters'
#include "bosdyn_msgs/msg/detail/global_parameters__struct.h"
// Member 'playback_mode'
#include "bosdyn_msgs/msg/detail/playback_mode__struct.h"
// Member 'map_name'
// Member 'mission_name'
// Member 'id'
#include "rosidl_runtime_c/string.h"
// Member 'elements'
#include "bosdyn_msgs/msg/detail/element__struct.h"
// Member 'docks'
#include "bosdyn_msgs/msg/detail/dock__struct.h"

/// Struct defined in msg/Walk in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__Walk
{
  /// Parameters that apply to the entire mission.
  bosdyn_msgs__msg__GlobalParameters global_parameters;
  bool global_parameters_is_set;
  /// Governs the mode and frequency at which playbacks occur.
  bosdyn_msgs__msg__PlaybackMode playback_mode;
  bool playback_mode_is_set;
  /// The name of the map this mission corresponds to.
  rosidl_runtime_c__String map_name;
  /// The name of the mission.
  rosidl_runtime_c__String mission_name;
  /// The list of actions and their associated locations.
  bosdyn_msgs__msg__Element__Sequence elements;
  /// The docks the mission can dock at.
  /// AT THE MOMENT AUTOWALK ONLY SUPPORTS A SINGLE DOCK.
  /// However, this is subject to change.
  bosdyn_msgs__msg__Dock__Sequence docks;
  /// Unique identifier for this walk.  This will be embedded in various Data Acquisition captures
  /// and various logging bundles.  This should be globally unique across all walks.
  rosidl_runtime_c__String id;
} bosdyn_msgs__msg__Walk;

// Struct for a sequence of bosdyn_msgs__msg__Walk.
typedef struct bosdyn_msgs__msg__Walk__Sequence
{
  bosdyn_msgs__msg__Walk * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__Walk__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__WALK__STRUCT_H_
