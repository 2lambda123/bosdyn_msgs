// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/RetainLeaseRequest.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__RETAIN_LEASE_REQUEST__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__RETAIN_LEASE_REQUEST__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/request_header__struct.h"
// Member 'lease'
#include "bosdyn_msgs/msg/detail/lease__struct.h"

/// Struct defined in msg/RetainLeaseRequest in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__RetainLeaseRequest
{
  /// The RetainLease request will inform the LeaseService that the application contains to hold
  /// ownership of this lease. Lease holders are expected to be reachable and alive. If enough time
  /// has passed since the last RetainLeaseRequest, the LeaseService will revoke the lease.
  /// Common request header.
  bosdyn_msgs__msg__RequestHeader header;
  bool header_is_set;
  /// The Lease to retain ownership over. May also be a "super" lease of the lease to retain
  /// ownership over.
  bosdyn_msgs__msg__Lease lease;
  bool lease_is_set;
} bosdyn_msgs__msg__RetainLeaseRequest;

// Struct for a sequence of bosdyn_msgs__msg__RetainLeaseRequest.
typedef struct bosdyn_msgs__msg__RetainLeaseRequest__Sequence
{
  bosdyn_msgs__msg__RetainLeaseRequest * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__RetainLeaseRequest__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__RETAIN_LEASE_REQUEST__STRUCT_H_
