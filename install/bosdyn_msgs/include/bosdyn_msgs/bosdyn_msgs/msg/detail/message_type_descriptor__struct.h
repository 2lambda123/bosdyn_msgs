// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/MessageTypeDescriptor.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__MESSAGE_TYPE_DESCRIPTOR__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__MESSAGE_TYPE_DESCRIPTOR__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'content_type'
// Member 'type_name'
#include "rosidl_runtime_c/string.h"

/// Struct defined in msg/MessageTypeDescriptor in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__MessageTypeDescriptor
{
  /// If a data series contains a sequence of binary messages, the encoding and format of these
  ///  messages is described by a MesssageTypeDescriptor.
  /// Description of the content type.
  /// E.g., "application/protobuf", "image/jpeg", "text/csv", ...
  rosidl_runtime_c__String content_type;
  /// If content_type is "application/protobuf", this is the full-name of the protobuf type.
  rosidl_runtime_c__String type_name;
  /// If true, message contents are necessary for interpreting other messages.
  /// If the content of this file is split into multiple output files, these messages should be
  ///  copied into each.
  bool is_metadata;
} bosdyn_msgs__msg__MessageTypeDescriptor;

// Struct for a sequence of bosdyn_msgs__msg__MessageTypeDescriptor.
typedef struct bosdyn_msgs__msg__MessageTypeDescriptor__Sequence
{
  bosdyn_msgs__msg__MessageTypeDescriptor * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__MessageTypeDescriptor__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__MESSAGE_TYPE_DESCRIPTOR__STRUCT_H_
