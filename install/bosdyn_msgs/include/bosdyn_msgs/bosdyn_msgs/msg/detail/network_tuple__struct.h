// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/NetworkTuple.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__NETWORK_TUPLE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__NETWORK_TUPLE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Struct defined in msg/NetworkTuple in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__NetworkTuple
{
  /// Network configuration data.
  /// a big-endian representation of an IPv4 address
  uint32_t address;
  bool address_is_set;
  /// The mask used for defining the system's subnet
  uint32_t netmask;
  bool netmask_is_set;
  /// A global routing is set up for the address defined below (if present)
  uint32_t gateway;
  bool gateway_is_set;
  /// If MTU is present, and <16 bits wide, then it is set for the ethernet interface's MTU
  /// if not, the MTU is set to 1500
  uint32_t mtu;
  bool mtu_is_set;
} bosdyn_msgs__msg__NetworkTuple;

// Struct for a sequence of bosdyn_msgs__msg__NetworkTuple.
typedef struct bosdyn_msgs__msg__NetworkTuple__Sequence
{
  bosdyn_msgs__msg__NetworkTuple * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__NetworkTuple__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__NETWORK_TUPLE__STRUCT_H_
