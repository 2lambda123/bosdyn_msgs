// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/PtzFocusState.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__PTZ_FOCUS_STATE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__PTZ_FOCUS_STATE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'mode'
#include "bosdyn_msgs/msg/detail/ptz_focus_state_ptz_focus_mode__struct.h"

/// Struct defined in msg/PtzFocusState in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__PtzFocusState
{
  /// focus commands only affect the mech EO camera
  bosdyn_msgs__msg__PtzFocusStatePtzFocusMode mode;
  /// focus_position only settable in PTZ_FOCUS_MANUAL mode
  /// this represents a precise lens position for the camera for repeatable operations
  int32_t focus_position;
  bool focus_position_is_set;
  /// approx_distance only settable in PTZ_FOCUS_MANUAL mode
  /// approx_distance is most accurate between 1.2m and 20m
  /// approx_distance is ignored on a Set operation if focus_position is included
  float approx_distance;
  bool approx_distance_is_set;
} bosdyn_msgs__msg__PtzFocusState;

// Struct for a sequence of bosdyn_msgs__msg__PtzFocusState.
typedef struct bosdyn_msgs__msg__PtzFocusState__Sequence
{
  bosdyn_msgs__msg__PtzFocusState * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__PtzFocusState__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__PTZ_FOCUS_STATE__STRUCT_H_
