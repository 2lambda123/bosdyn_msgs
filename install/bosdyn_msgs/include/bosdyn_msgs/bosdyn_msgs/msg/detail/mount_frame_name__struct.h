// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/MountFrameName.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__MOUNT_FRAME_NAME__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__MOUNT_FRAME_NAME__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'MOUNT_FRAME_UNKNOWN'.
/**
  * Payloads are defined relative to a frame on the robot. These are the possible frames.
  * This is the default. For backwards compatibility, we assume unknown means body mount frame.
 */
enum
{
  bosdyn_msgs__msg__MountFrameName__MOUNT_FRAME_UNKNOWN = 0
};

/// Constant 'MOUNT_FRAME_BODY_PAYLOAD'.
/**
  * The body payload mount frame, as defined in documentation.
 */
enum
{
  bosdyn_msgs__msg__MountFrameName__MOUNT_FRAME_BODY_PAYLOAD = 1
};

/// Constant 'MOUNT_FRAME_GRIPPER_PAYLOAD'.
/**
  * The gripper payload mount frame, as defined in documentation.
 */
enum
{
  bosdyn_msgs__msg__MountFrameName__MOUNT_FRAME_GRIPPER_PAYLOAD = 2
};

/// Constant 'MOUNT_FRAME_WR1'.
/**
  * The wrist link frame, as defined in the gripper CAD and documentation.
 */
enum
{
  bosdyn_msgs__msg__MountFrameName__MOUNT_FRAME_WR1 = 3
};

/// Struct defined in msg/MountFrameName in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__MountFrameName
{
  int8_t value;
} bosdyn_msgs__msg__MountFrameName;

// Struct for a sequence of bosdyn_msgs__msg__MountFrameName.
typedef struct bosdyn_msgs__msg__MountFrameName__Sequence
{
  bosdyn_msgs__msg__MountFrameName * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__MountFrameName__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__MOUNT_FRAME_NAME__STRUCT_H_
