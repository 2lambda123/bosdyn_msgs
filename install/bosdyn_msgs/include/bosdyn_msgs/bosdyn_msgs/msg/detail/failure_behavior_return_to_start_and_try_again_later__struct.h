// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/FailureBehaviorReturnToStartAndTryAgainLater.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__FAILURE_BEHAVIOR_RETURN_TO_START_AND_TRY_AGAIN_LATER__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__FAILURE_BEHAVIOR_RETURN_TO_START_AND_TRY_AGAIN_LATER__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'try_again_delay'
#include "builtin_interfaces/msg/detail/duration__struct.h"

/// Struct defined in msg/FailureBehaviorReturnToStartAndTryAgainLater in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__FailureBehaviorReturnToStartAndTryAgainLater
{
  /// How long to wait at start of mission (or on dock) before trying again.
  /// A minimum duration of 60 seconds is enforced.
  builtin_interfaces__msg__Duration try_again_delay;
  bool try_again_delay_is_set;
} bosdyn_msgs__msg__FailureBehaviorReturnToStartAndTryAgainLater;

// Struct for a sequence of bosdyn_msgs__msg__FailureBehaviorReturnToStartAndTryAgainLater.
typedef struct bosdyn_msgs__msg__FailureBehaviorReturnToStartAndTryAgainLater__Sequence
{
  bosdyn_msgs__msg__FailureBehaviorReturnToStartAndTryAgainLater * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__FailureBehaviorReturnToStartAndTryAgainLater__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__FAILURE_BEHAVIOR_RETURN_TO_START_AND_TRY_AGAIN_LATER__STRUCT_H_
