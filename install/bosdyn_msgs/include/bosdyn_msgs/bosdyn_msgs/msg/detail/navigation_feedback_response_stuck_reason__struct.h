// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/NavigationFeedbackResponseStuckReason.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__NAVIGATION_FEEDBACK_RESPONSE_STUCK_REASON__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__NAVIGATION_FEEDBACK_RESPONSE_STUCK_REASON__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'STUCK_REASON_UNKNOWN'.
enum
{
  bosdyn_msgs__msg__NavigationFeedbackResponseStuckReason__STUCK_REASON_UNKNOWN = 0
};

/// Constant 'STUCK_REASON_OBSTACLE'.
/**
  * The robot failed to find a way past an obstacle.
 */
enum
{
  bosdyn_msgs__msg__NavigationFeedbackResponseStuckReason__STUCK_REASON_OBSTACLE = 1
};

/// Constant 'STUCK_REASON_AREA_CALLBACK_BLOCKED'.
/**
  * An area callback reported that it is blocked.
 */
enum
{
  bosdyn_msgs__msg__NavigationFeedbackResponseStuckReason__STUCK_REASON_AREA_CALLBACK_BLOCKED = 2
};

/// Constant 'STUCK_REASON_AREA_CALLBACK_FAILED'.
/**
  * An area callback failed, but in a way that the robot is still able to navigate to
  * other locations.
 */
enum
{
  bosdyn_msgs__msg__NavigationFeedbackResponseStuckReason__STUCK_REASON_AREA_CALLBACK_FAILED = 3
};

/// Constant 'STUCK_REASON_GOAL_BLOCKED'.
/**
  * The robot has seen the goal and perceived that there is no pose it can navigate to to
  * reach the goal. There is no value in rerouting.
 */
enum
{
  bosdyn_msgs__msg__NavigationFeedbackResponseStuckReason__STUCK_REASON_GOAL_BLOCKED = 4
};

/// Struct defined in msg/NavigationFeedbackResponseStuckReason in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__NavigationFeedbackResponseStuckReason
{
  int8_t value;
} bosdyn_msgs__msg__NavigationFeedbackResponseStuckReason;

// Struct for a sequence of bosdyn_msgs__msg__NavigationFeedbackResponseStuckReason.
typedef struct bosdyn_msgs__msg__NavigationFeedbackResponseStuckReason__Sequence
{
  bosdyn_msgs__msg__NavigationFeedbackResponseStuckReason * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__NavigationFeedbackResponseStuckReason__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__NAVIGATION_FEEDBACK_RESPONSE_STUCK_REASON__STRUCT_H_
