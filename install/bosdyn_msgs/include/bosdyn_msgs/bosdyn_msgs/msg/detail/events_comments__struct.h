// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/EventsComments.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__EVENTS_COMMENTS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__EVENTS_COMMENTS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'time_range'
#include "bosdyn_msgs/msg/detail/time_range__struct.h"
// Member 'events'
#include "bosdyn_msgs/msg/detail/event__struct.h"
// Member 'operator_comments'
#include "bosdyn_msgs/msg/detail/operator_comment__struct.h"

/// Struct defined in msg/EventsComments in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__EventsComments
{
  /// Requested Events and/or OperatorComments.
  /// Timespan for data
  bosdyn_msgs__msg__TimeRange time_range;
  bool time_range_is_set;
  bosdyn_msgs__msg__Event__Sequence events;
  bosdyn_msgs__msg__OperatorComment__Sequence operator_comments;
  /// True if the number of events returned was limited by query maximum.
  bool events_limited;
  /// True if the number of comments returned was limited by query maximum.
  bool operator_comments_limited;
} bosdyn_msgs__msg__EventsComments;

// Struct for a sequence of bosdyn_msgs__msg__EventsComments.
typedef struct bosdyn_msgs__msg__EventsComments__Sequence
{
  bosdyn_msgs__msg__EventsComments * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__EventsComments__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__EVENTS_COMMENTS__STRUCT_H_
