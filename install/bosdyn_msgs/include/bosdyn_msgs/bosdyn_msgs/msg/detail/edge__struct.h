// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/Edge.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__EDGE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__EDGE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'id'
#include "bosdyn_msgs/msg/detail/edge_id__struct.h"
// Member 'snapshot_id'
#include "rosidl_runtime_c/string.h"
// Member 'from_tform_to'
#include "geometry_msgs/msg/detail/pose__struct.h"
// Member 'annotations'
#include "bosdyn_msgs/msg/detail/edge_annotations__struct.h"

/// Struct defined in msg/Edge in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__Edge
{
  /// A base element of the graph nav map. Edges consist of a directed edge from one
  /// waypoint to another and a transform that estimates the relationship in 3D space
  /// between the two waypoints.
  /// An edge is uniquely identified by the waypoints it connects.
  /// Two waypoints will only ever be connected by a single edge.
  /// That edge is traversable in either direction.
  /// Identifier of this Edge.
  /// Edges are mutable -- the identifier does not have to be updated when other fields change.
  bosdyn_msgs__msg__EdgeId id;
  bool id_is_set;
  /// Identifier of this edge's Snapshot data.
  rosidl_runtime_c__String snapshot_id;
  /// Describes the transform between the "from" waypoint and the "to" waypoint.
  geometry_msgs__msg__Pose from_tform_to;
  bool from_tform_to_is_set;
  /// Annotations understood by BostonDynamics systems.
  /// Annotations specific to the current edge.
  bosdyn_msgs__msg__EdgeAnnotations annotations;
  bool annotations_is_set;
} bosdyn_msgs__msg__Edge;

// Struct for a sequence of bosdyn_msgs__msg__Edge.
typedef struct bosdyn_msgs__msg__Edge__Sequence
{
  bosdyn_msgs__msg__Edge * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__Edge__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__EDGE__STRUCT_H_
