// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/DoorCommandFeedback.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__DOOR_COMMAND_FEEDBACK__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__DOOR_COMMAND_FEEDBACK__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'status'
#include "bosdyn_msgs/msg/detail/door_command_feedback_status__struct.h"

/// Struct defined in msg/DoorCommandFeedback in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__DoorCommandFeedback
{
  /// Current status of the command.
  bosdyn_msgs__msg__DoorCommandFeedbackStatus status;
  /// This is the distance the robot (i.e. the origin of the 'body' frame) is past the door
  /// frame threshold. When it's negative the robot is on the starting side of the door, 0 when
  /// the robot is in the middle of the door, and positive when the robot is on the finishing
  /// side.
  double distance_past_threshold;
} bosdyn_msgs__msg__DoorCommandFeedback;

// Struct for a sequence of bosdyn_msgs__msg__DoorCommandFeedback.
typedef struct bosdyn_msgs__msg__DoorCommandFeedback__Sequence
{
  bosdyn_msgs__msg__DoorCommandFeedback * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__DoorCommandFeedback__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__DOOR_COMMAND_FEEDBACK__STRUCT_H_
