// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/ICEServer.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__ICE_SERVER__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__ICE_SERVER__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'type'
#include "bosdyn_msgs/msg/detail/ice_server_servertype__struct.h"
// Member 'address'
#include "rosidl_runtime_c/string.h"
// Member 'transport'
#include "bosdyn_msgs/msg/detail/ice_server_icetransport__struct.h"
// Member 'auth'
#include "bosdyn_msgs/msg/detail/ice_server_auth_params__struct.h"

/// Struct defined in msg/ICEServer in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__ICEServer
{
  /// Servers used in the ICE resolution process.
  /// Possible types of servers
  /// STUN or TURN server.
  bosdyn_msgs__msg__ICEServerServertype type;
  /// Network address of the server.
  rosidl_runtime_c__String address;
  /// Only the least significant 16 bits are used.
  uint32_t port;
  bosdyn_msgs__msg__ICEServerIcetransport transport;
  /// auth is optional, and is only used for TURN
  bosdyn_msgs__msg__ICEServerAuthParams auth;
  bool auth_is_set;
} bosdyn_msgs__msg__ICEServer;

// Struct for a sequence of bosdyn_msgs__msg__ICEServer.
typedef struct bosdyn_msgs__msg__ICEServer__Sequence
{
  bosdyn_msgs__msg__ICEServer * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__ICEServer__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__ICE_SERVER__STRUCT_H_
