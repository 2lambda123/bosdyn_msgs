// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/GetServiceEntryResponse.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__GET_SERVICE_ENTRY_RESPONSE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__GET_SERVICE_ENTRY_RESPONSE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/response_header__struct.h"
// Member 'status'
#include "bosdyn_msgs/msg/detail/get_service_entry_response_status__struct.h"
// Member 'service_entry'
#include "bosdyn_msgs/msg/detail/service_entry__struct.h"

/// Struct defined in msg/GetServiceEntryResponse in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__GetServiceEntryResponse
{
  /// The GetServiceEntry response message returns a ServiceEntry for the desired service name.
  /// Common response Header.
  bosdyn_msgs__msg__ResponseHeader header;
  bool header_is_set;
  /// Current status of the request.
  bosdyn_msgs__msg__GetServiceEntryResponseStatus status;
  /// The record for the discovered service.  Only set if 'status' field == STATUS_OK.
  bosdyn_msgs__msg__ServiceEntry service_entry;
  bool service_entry_is_set;
} bosdyn_msgs__msg__GetServiceEntryResponse;

// Struct for a sequence of bosdyn_msgs__msg__GetServiceEntryResponse.
typedef struct bosdyn_msgs__msg__GetServiceEntryResponse__Sequence
{
  bosdyn_msgs__msg__GetServiceEntryResponse * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__GetServiceEntryResponse__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__GET_SERVICE_ENTRY_RESPONSE__STRUCT_H_
