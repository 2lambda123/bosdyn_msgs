// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/Association.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__ASSOCIATION__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__ASSOCIATION__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'mac_address'
#include "rosidl_runtime_c/string.h"
// Member 'connected_time'
#include "builtin_interfaces/msg/detail/duration__struct.h"

/// Struct defined in msg/Association in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__Association
{
  /// MAC address of the associated station
  rosidl_runtime_c__String mac_address;
  /// Time duration since the station last connected.
  builtin_interfaces__msg__Duration connected_time;
  bool connected_time_is_set;
  /// Signal strength of last received packet
  int32_t rx_signal_dbm;
  /// Signal strength average
  int32_t rx_signal_avg_dbm;
  /// Signal strength average for beacons only.
  int32_t rx_beacon_signal_avg_dbm;
  /// Expected throughput
  int64_t expected_bits_per_second;
  /// Total received bytes
  int64_t rx_bytes;
  /// Total received packets from the associated station
  int64_t rx_packets;
  /// Last unicast receive rate
  int64_t rx_bits_per_second;
  /// Total transmitted bytes
  int64_t tx_bytes;
  /// Total transmitted packets to the associated station
  int64_t tx_packets;
  /// Current unicast transmit rate
  int64_t tx_bits_per_second;
  /// Cumulative retry count to this station, within connected time
  int64_t tx_retries;
  /// Cumulative failed tx packet count to this station, within connected time
  int64_t tx_failed;
  /// Number of beacons received from this peer
  int64_t beacons_received;
  /// Number of times beacon loss was detected
  int64_t beacon_loss_count;
} bosdyn_msgs__msg__Association;

// Struct for a sequence of bosdyn_msgs__msg__Association.
typedef struct bosdyn_msgs__msg__Association__Sequence
{
  bosdyn_msgs__msg__Association * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__Association__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__ASSOCIATION__STRUCT_H_
