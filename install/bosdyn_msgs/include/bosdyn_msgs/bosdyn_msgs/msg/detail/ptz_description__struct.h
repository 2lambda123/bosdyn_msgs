// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/PtzDescription.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__PTZ_DESCRIPTION__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__PTZ_DESCRIPTION__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'name'
#include "rosidl_runtime_c/string.h"
// Member 'pan_limit'
// Member 'tilt_limit'
// Member 'zoom_limit'
#include "bosdyn_msgs/msg/detail/ptz_description_limits__struct.h"

/// Struct defined in msg/PtzDescription in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__PtzDescription
{
  /// PtzDescription provides information about a given PTZ. The name is usually all that's required to
  /// describe a PTZ, but ListPtzResponse will include more information.
  /// Identifier of a particular controllable PTZ mechanism (real or virtual).
  rosidl_runtime_c__String name;
  /// Limits for a single axis.
  /// If a limit is not set, all positions are valid
  /// PtzDescriptionLimits in degrees.
  bosdyn_msgs__msg__PtzDescriptionLimits pan_limit;
  bool pan_limit_is_set;
  /// PtzDescriptionLimits in degrees.
  bosdyn_msgs__msg__PtzDescriptionLimits tilt_limit;
  bool tilt_limit_is_set;
  /// PtzDescriptionLimits in zoom level.
  bosdyn_msgs__msg__PtzDescriptionLimits zoom_limit;
  bool zoom_limit_is_set;
} bosdyn_msgs__msg__PtzDescription;

// Struct for a sequence of bosdyn_msgs__msg__PtzDescription.
typedef struct bosdyn_msgs__msg__PtzDescription__Sequence
{
  bosdyn_msgs__msg__PtzDescription * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__PtzDescription__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__PTZ_DESCRIPTION__STRUCT_H_
