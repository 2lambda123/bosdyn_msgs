// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/FanPowerCommandFeedbackResponse.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__FAN_POWER_COMMAND_FEEDBACK_RESPONSE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__FAN_POWER_COMMAND_FEEDBACK_RESPONSE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/response_header__struct.h"
// Member 'status'
#include "bosdyn_msgs/msg/detail/fan_power_command_feedback_response_status__struct.h"
// Member 'desired_end_time'
// Member 'early_stop_time'
#include "builtin_interfaces/msg/detail/time__struct.h"

/// Struct defined in msg/FanPowerCommandFeedbackResponse in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__FanPowerCommandFeedbackResponse
{
  /// The PowerCommandFeedback response message, which contains the progress of the power command.
  /// Common response header.
  bosdyn_msgs__msg__ResponseHeader header;
  bool header_is_set;
  /// Feedback on the current state of a fan power command on the robot.
  /// Current status of specified command.
  bosdyn_msgs__msg__FanPowerCommandFeedbackResponseStatus status;
  /// Based on duration, the time that this command was intended to stop being in effect. If
  /// stopped/overriden prematurely, early_stop_time will reflect the actual time the command
  /// stopped being in effect
  builtin_interfaces__msg__Time desired_end_time;
  bool desired_end_time_is_set;
  /// If the command was stopped or overridden before its desired end time, the time at which it
  /// was stopped. If command succeeded, this time is empty.
  builtin_interfaces__msg__Time early_stop_time;
  bool early_stop_time_is_set;
} bosdyn_msgs__msg__FanPowerCommandFeedbackResponse;

// Struct for a sequence of bosdyn_msgs__msg__FanPowerCommandFeedbackResponse.
typedef struct bosdyn_msgs__msg__FanPowerCommandFeedbackResponse__Sequence
{
  bosdyn_msgs__msg__FanPowerCommandFeedbackResponse * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__FanPowerCommandFeedbackResponse__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__FAN_POWER_COMMAND_FEEDBACK_RESPONSE__STRUCT_H_
