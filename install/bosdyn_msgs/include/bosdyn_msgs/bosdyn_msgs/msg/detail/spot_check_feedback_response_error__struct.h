// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/SpotCheckFeedbackResponseError.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SPOT_CHECK_FEEDBACK_RESPONSE_ERROR__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SPOT_CHECK_FEEDBACK_RESPONSE_ERROR__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'ERROR_UNKNOWN'.
/**
  * Unused enum.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_UNKNOWN = 0
};

/// Constant 'ERROR_NONE'.
/**
  * No error has occurred.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_NONE = 1
};

/// Constant 'ERROR_UNEXPECTED_POWER_CHANGE'.
/**
  * Unexpected motor power state transition.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_UNEXPECTED_POWER_CHANGE = 2
};

/// Constant 'ERROR_INIT_IMU_CHECK'.
/**
  * Robot body is not flat on the ground.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_INIT_IMU_CHECK = 3
};

/// Constant 'ERROR_INIT_NOT_SITTING'.
/**
  * Robot body is not close to a sitting pose
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_INIT_NOT_SITTING = 4
};

/// Constant 'ERROR_LOADCELL_TIMEOUT'.
/**
  * Timeout during loadcell calibration.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_LOADCELL_TIMEOUT = 5
};

/// Constant 'ERROR_POWER_ON_FAILURE'.
/**
  * Error enabling motor power.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_POWER_ON_FAILURE = 6
};

/// Constant 'ERROR_ENDSTOP_TIMEOUT'.
/**
  * Timeout during endstop calibration.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_ENDSTOP_TIMEOUT = 7
};

/// Constant 'ERROR_FAILED_STAND'.
/**
  * Robot failed to stand.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_FAILED_STAND = 8
};

/// Constant 'ERROR_CAMERA_TIMEOUT'.
/**
  * Timeout during camera check.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_CAMERA_TIMEOUT = 9
};

/// Constant 'ERROR_GROUND_CHECK'.
/**
  * Flat ground check failed.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_GROUND_CHECK = 10
};

/// Constant 'ERROR_POWER_OFF_FAILURE'.
/**
  * Robot failed to power off.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_POWER_OFF_FAILURE = 11
};

/// Constant 'ERROR_REVERT_FAILURE'.
/**
  * Robot failed to revert calibration.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_REVERT_FAILURE = 12
};

/// Constant 'ERROR_FGKC_FAILURE'.
/**
  * Robot failed to do flat ground kinematic calibration.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_FGKC_FAILURE = 13
};

/// Constant 'ERROR_GRIPPER_CAL_TIMEOUT'.
/**
  * Timeout during gripper calibration.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_GRIPPER_CAL_TIMEOUT = 14
};

/// Constant 'ERROR_ARM_CHECK_COLLISION'.
/**
  * Arm motion would cause collisions (eg. w/ a payload).
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_ARM_CHECK_COLLISION = 15
};

/// Constant 'ERROR_ARM_CHECK_TIMEOUT'.
/**
  * Timeout during arm joint check.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError__ERROR_ARM_CHECK_TIMEOUT = 16
};

/// Struct defined in msg/SpotCheckFeedbackResponseError in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__SpotCheckFeedbackResponseError
{
  int8_t value;
} bosdyn_msgs__msg__SpotCheckFeedbackResponseError;

// Struct for a sequence of bosdyn_msgs__msg__SpotCheckFeedbackResponseError.
typedef struct bosdyn_msgs__msg__SpotCheckFeedbackResponseError__Sequence
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseError * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__SpotCheckFeedbackResponseError__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SPOT_CHECK_FEEDBACK_RESPONSE_ERROR__STRUCT_H_
