// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/SeriesBlockIndex.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SERIES_BLOCK_INDEX__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SERIES_BLOCK_INDEX__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'block_entries'
#include "bosdyn_msgs/msg/detail/series_block_index_block_entry__struct.h"

/// Struct defined in msg/SeriesBlockIndex in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__SeriesBlockIndex
{
  /// This describes the location of the SeriesDescriptor DescriptorBlock for the series, and
  ///  the timestamp and location in the file of every data block in the series.
  /// The series_index for the series described by this index block.
  uint32_t series_index;
  /// Offset of type descriptor block from start of file.
  uint64_t descriptor_file_offset;
  /// The timestamp and location of each data block for this series.
  bosdyn_msgs__msg__SeriesBlockIndexBlockEntry__Sequence block_entries;
  /// The total size of the data stored in the data blocks of this series.
  uint64_t total_bytes;
} bosdyn_msgs__msg__SeriesBlockIndex;

// Struct for a sequence of bosdyn_msgs__msg__SeriesBlockIndex.
typedef struct bosdyn_msgs__msg__SeriesBlockIndex__Sequence
{
  bosdyn_msgs__msg__SeriesBlockIndex * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__SeriesBlockIndex__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SERIES_BLOCK_INDEX__STRUCT_H_
