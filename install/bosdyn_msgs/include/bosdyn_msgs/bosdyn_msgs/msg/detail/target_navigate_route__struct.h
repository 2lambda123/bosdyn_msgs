// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/TargetNavigateRoute.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__TARGET_NAVIGATE_ROUTE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__TARGET_NAVIGATE_ROUTE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'route'
#include "bosdyn_msgs/msg/detail/route__struct.h"
// Member 'travel_params'
#include "bosdyn_msgs/msg/detail/travel_params__struct.h"

/// Struct defined in msg/TargetNavigateRoute in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__TargetNavigateRoute
{
  /// A route for the robot to follow.
  bosdyn_msgs__msg__Route route;
  bool route_is_set;
  /// Parameters that define how to traverse and end the route. For
  /// example, the user may decide how close to the destination waypoint
  /// the robot needs to be in order to declare success.
  bosdyn_msgs__msg__TravelParams travel_params;
  bool travel_params_is_set;
} bosdyn_msgs__msg__TargetNavigateRoute;

// Struct for a sequence of bosdyn_msgs__msg__TargetNavigateRoute.
typedef struct bosdyn_msgs__msg__TargetNavigateRoute__Sequence
{
  bosdyn_msgs__msg__TargetNavigateRoute * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__TargetNavigateRoute__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__TARGET_NAVIGATE_ROUTE__STRUCT_H_
