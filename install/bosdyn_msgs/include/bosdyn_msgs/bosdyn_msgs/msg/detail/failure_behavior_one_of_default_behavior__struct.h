// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/FailureBehaviorOneOfDefaultBehavior.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__FAILURE_BEHAVIOR_ONE_OF_DEFAULT_BEHAVIOR__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__FAILURE_BEHAVIOR_ONE_OF_DEFAULT_BEHAVIOR__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'DEFAULT_BEHAVIOR_NOT_SET'.
enum
{
  bosdyn_msgs__msg__FailureBehaviorOneOfDefaultBehavior__DEFAULT_BEHAVIOR_NOT_SET = 0
};

/// Constant 'DEFAULT_BEHAVIOR_SAFE_POWER_OFF_SET'.
enum
{
  bosdyn_msgs__msg__FailureBehaviorOneOfDefaultBehavior__DEFAULT_BEHAVIOR_SAFE_POWER_OFF_SET = 1
};

/// Constant 'DEFAULT_BEHAVIOR_PROCEED_IF_ABLE_SET'.
enum
{
  bosdyn_msgs__msg__FailureBehaviorOneOfDefaultBehavior__DEFAULT_BEHAVIOR_PROCEED_IF_ABLE_SET = 2
};

/// Constant 'DEFAULT_BEHAVIOR_RETURN_TO_START_AND_TRY_AGAIN_LATER_SET'.
enum
{
  bosdyn_msgs__msg__FailureBehaviorOneOfDefaultBehavior__DEFAULT_BEHAVIOR_RETURN_TO_START_AND_TRY_AGAIN_LATER_SET = 3
};

/// Constant 'DEFAULT_BEHAVIOR_RETURN_TO_START_AND_TERMINATE_SET'.
enum
{
  bosdyn_msgs__msg__FailureBehaviorOneOfDefaultBehavior__DEFAULT_BEHAVIOR_RETURN_TO_START_AND_TERMINATE_SET = 4
};

// Include directives for member types
// Member 'safe_power_off'
#include "bosdyn_msgs/msg/detail/failure_behavior_safe_power_off__struct.h"
// Member 'proceed_if_able'
#include "bosdyn_msgs/msg/detail/failure_behavior_proceed_if_able__struct.h"
// Member 'return_to_start_and_try_again_later'
#include "bosdyn_msgs/msg/detail/failure_behavior_return_to_start_and_try_again_later__struct.h"
// Member 'return_to_start_and_terminate'
#include "bosdyn_msgs/msg/detail/failure_behavior_return_to_start_and_terminate__struct.h"

/// Struct defined in msg/FailureBehaviorOneOfDefaultBehavior in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__FailureBehaviorOneOfDefaultBehavior
{
  /// ONEOF MESSAGE  Only one of the following can be set
  bosdyn_msgs__msg__FailureBehaviorSafePowerOff safe_power_off;
  bosdyn_msgs__msg__FailureBehaviorProceedIfAble proceed_if_able;
  bosdyn_msgs__msg__FailureBehaviorReturnToStartAndTryAgainLater return_to_start_and_try_again_later;
  bosdyn_msgs__msg__FailureBehaviorReturnToStartAndTerminate return_to_start_and_terminate;
  /// Only one of the above can be filled in.  Use the enum to choose which.
  int8_t default_behavior_choice;
} bosdyn_msgs__msg__FailureBehaviorOneOfDefaultBehavior;

// Struct for a sequence of bosdyn_msgs__msg__FailureBehaviorOneOfDefaultBehavior.
typedef struct bosdyn_msgs__msg__FailureBehaviorOneOfDefaultBehavior__Sequence
{
  bosdyn_msgs__msg__FailureBehaviorOneOfDefaultBehavior * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__FailureBehaviorOneOfDefaultBehavior__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__FAILURE_BEHAVIOR_ONE_OF_DEFAULT_BEHAVIOR__STRUCT_H_
