// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/AcquireDataRequest.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__ACQUIRE_DATA_REQUEST__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__ACQUIRE_DATA_REQUEST__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/request_header__struct.h"
// Member 'action_id'
#include "bosdyn_msgs/msg/detail/capture_action_id__struct.h"
// Member 'metadata'
#include "bosdyn_msgs/msg/detail/metadata__struct.h"
// Member 'acquisition_requests'
#include "bosdyn_msgs/msg/detail/acquisition_request_list__struct.h"
// Member 'min_timeout'
#include "builtin_interfaces/msg/detail/duration__struct.h"

/// Struct defined in msg/AcquireDataRequest in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__AcquireDataRequest
{
  /// Common request header.
  bosdyn_msgs__msg__RequestHeader header;
  bool header_is_set;
  /// Define the unique action that all data should be saved with.
  bosdyn_msgs__msg__CaptureActionId action_id;
  bool action_id_is_set;
  /// Metadata to store with the data capture. The main Data Acquisition service saves it in the
  /// DataBuffer.
  bosdyn_msgs__msg__Metadata metadata;
  bool metadata_is_set;
  /// List of capability requests that should be collected as part of this capture action.
  bosdyn_msgs__msg__AcquisitionRequestList acquisition_requests;
  bool acquisition_requests_is_set;
  /// Optional duration used to extend the amount of time that the data request may take, in
  /// the event that a plugin is incorrectly specifying its timeout.
  /// The amount of time allowed will be the maximum of this duration and any requests
  /// made to plugins or other capture sources.
  builtin_interfaces__msg__Duration min_timeout;
  bool min_timeout_is_set;
} bosdyn_msgs__msg__AcquireDataRequest;

// Struct for a sequence of bosdyn_msgs__msg__AcquireDataRequest.
typedef struct bosdyn_msgs__msg__AcquireDataRequest__Sequence
{
  bosdyn_msgs__msg__AcquireDataRequest * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__AcquireDataRequest__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__ACQUIRE_DATA_REQUEST__STRUCT_H_
