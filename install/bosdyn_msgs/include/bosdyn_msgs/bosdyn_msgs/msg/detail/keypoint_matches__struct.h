// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/KeypointMatches.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__KEYPOINT_MATCHES__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__KEYPOINT_MATCHES__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'reference_keypoints'
// Member 'live_keypoints'
#include "bosdyn_msgs/msg/detail/keypoint_set__struct.h"
// Member 'matches'
#include "bosdyn_msgs/msg/detail/match__struct.h"

/// Struct defined in msg/KeypointMatches in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__KeypointMatches
{
  /// A pair of keypoint sets containing only features in common that have been matched.
  /// The set of common keypoints in a first ("reference") image.
  bosdyn_msgs__msg__KeypointSet reference_keypoints;
  bool reference_keypoints_is_set;
  /// The set of common keypoints in a second ("live") image.
  bosdyn_msgs__msg__KeypointSet live_keypoints;
  bool live_keypoints_is_set;
  /// Indices of pairs of matches in the two KeypointSets and their distance measure.
  bosdyn_msgs__msg__Match__Sequence matches;
} bosdyn_msgs__msg__KeypointMatches;

// Struct for a sequence of bosdyn_msgs__msg__KeypointMatches.
typedef struct bosdyn_msgs__msg__KeypointMatches__Sequence
{
  bosdyn_msgs__msg__KeypointMatches * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__KeypointMatches__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__KEYPOINT_MATCHES__STRUCT_H_
