// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/ArmJointTrajectoryPoint.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__ARM_JOINT_TRAJECTORY_POINT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__ARM_JOINT_TRAJECTORY_POINT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'position'
#include "bosdyn_msgs/msg/detail/arm_joint_position__struct.h"
// Member 'velocity'
#include "bosdyn_msgs/msg/detail/arm_joint_velocity__struct.h"
// Member 'time_since_reference'
#include "builtin_interfaces/msg/detail/duration__struct.h"

/// Struct defined in msg/ArmJointTrajectoryPoint in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__ArmJointTrajectoryPoint
{
  /// A set of joint angles and velocities that can be used as a point within a joint trajectory.
  /// Desired joint angles in radians
  bosdyn_msgs__msg__ArmJointPosition position;
  bool position_is_set;
  /// Optional desired joint velocities in radians / sec
  bosdyn_msgs__msg__ArmJointVelocity velocity;
  bool velocity_is_set;
  /// The time since reference at which we wish to achieve this position / velocity
  builtin_interfaces__msg__Duration time_since_reference;
  bool time_since_reference_is_set;
} bosdyn_msgs__msg__ArmJointTrajectoryPoint;

// Struct for a sequence of bosdyn_msgs__msg__ArmJointTrajectoryPoint.
typedef struct bosdyn_msgs__msg__ArmJointTrajectoryPoint__Sequence
{
  bosdyn_msgs__msg__ArmJointTrajectoryPoint * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__ArmJointTrajectoryPoint__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__ARM_JOINT_TRAJECTORY_POINT__STRUCT_H_
