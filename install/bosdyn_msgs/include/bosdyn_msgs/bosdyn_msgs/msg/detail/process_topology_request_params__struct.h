// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/ProcessTopologyRequestParams.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__PROCESS_TOPOLOGY_REQUEST_PARAMS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__PROCESS_TOPOLOGY_REQUEST_PARAMS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'odometry_loop_closure_params'
#include "bosdyn_msgs/msg/detail/process_topology_request_odometry_loop_closure_params__struct.h"
// Member 'icp_params'
#include "bosdyn_msgs/msg/detail/process_topology_request_icp_params__struct.h"
// Member 'fiducial_loop_closure_params'
#include "bosdyn_msgs/msg/detail/process_topology_request_fiducial_loop_closure_params__struct.h"
// Member 'collision_check_params'
#include "bosdyn_msgs/msg/detail/process_topology_request_collision_checking_params__struct.h"

/// Struct defined in msg/ProcessTopologyRequestParams in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__ProcessTopologyRequestParams
{
  /// True by default -- generate loop closure candidates using odometry.
  bool do_odometry_loop_closure;
  bool do_odometry_loop_closure_is_set;
  /// Parameters for generating loop closure candidates using odometry.
  bosdyn_msgs__msg__ProcessTopologyRequestOdometryLoopClosureParams odometry_loop_closure_params;
  bool odometry_loop_closure_params_is_set;
  /// Parameters for refining loop closure candidates using iterative closest point
  /// cloud matching.
  bosdyn_msgs__msg__ProcessTopologyRequestICPParams icp_params;
  bool icp_params_is_set;
  /// True by default -- generate loop closure candidates using fiducials.
  bool do_fiducial_loop_closure;
  bool do_fiducial_loop_closure_is_set;
  /// Parameters for generating loop closure candidates using fiducials.
  bosdyn_msgs__msg__ProcessTopologyRequestFiducialLoopClosureParams fiducial_loop_closure_params;
  bool fiducial_loop_closure_params_is_set;
  /// Parameters which control rejecting loop closure candidates which
  /// collide with obstacles.
  bosdyn_msgs__msg__ProcessTopologyRequestCollisionCheckingParams collision_check_params;
  bool collision_check_params_is_set;
  /// Causes the processing to time out after this many seconds. If not set, a default of 45 seconds
  /// will be used. If this timeout occurs before the overall RPC timeout, a partial result will be
  /// returned with ProcessTopologyResponse.timed_out set to true. Processing can be continued by
  /// calling ProcessTopology again.
  double timeout_seconds;
} bosdyn_msgs__msg__ProcessTopologyRequestParams;

// Struct for a sequence of bosdyn_msgs__msg__ProcessTopologyRequestParams.
typedef struct bosdyn_msgs__msg__ProcessTopologyRequestParams__Sequence
{
  bosdyn_msgs__msg__ProcessTopologyRequestParams * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__ProcessTopologyRequestParams__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__PROCESS_TOPOLOGY_REQUEST_PARAMS__STRUCT_H_
