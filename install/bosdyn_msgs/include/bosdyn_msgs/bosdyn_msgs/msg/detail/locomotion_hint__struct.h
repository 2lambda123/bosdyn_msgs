// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/LocomotionHint.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__LOCOMOTION_HINT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__LOCOMOTION_HINT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'HINT_UNKNOWN'.
/**
  * The locomotion hint specifying the gait of the robot.
  * Invalid; do not use.
 */
enum
{
  bosdyn_msgs__msg__LocomotionHint__HINT_UNKNOWN = 0
};

/// Constant 'HINT_AUTO'.
/**
  * No hint, robot chooses an appropriate gait (typically trot.)
 */
enum
{
  bosdyn_msgs__msg__LocomotionHint__HINT_AUTO = 1
};

/// Constant 'HINT_TROT'.
/**
  * Most robust gait which moves diagonal legs together.
 */
enum
{
  bosdyn_msgs__msg__LocomotionHint__HINT_TROT = 2
};

/// Constant 'HINT_SPEED_SELECT_TROT'.
/**
  * Trot which comes to a stand when not commanded to move.
 */
enum
{
  bosdyn_msgs__msg__LocomotionHint__HINT_SPEED_SELECT_TROT = 3
};

/// Constant 'HINT_CRAWL'.
/**
  * Slow and steady gait which moves only one foot at a time.
 */
enum
{
  bosdyn_msgs__msg__LocomotionHint__HINT_CRAWL = 4
};

/// Constant 'HINT_SPEED_SELECT_CRAWL'.
/**
  * Crawl which comes to a stand when not commanded to move.
 */
enum
{
  bosdyn_msgs__msg__LocomotionHint__HINT_SPEED_SELECT_CRAWL = 5
};

/// Constant 'HINT_AMBLE'.
/**
  * Four beat gait where one foot touches down at a time.
 */
enum
{
  bosdyn_msgs__msg__LocomotionHint__HINT_AMBLE = 6
};

/// Constant 'HINT_SPEED_SELECT_AMBLE'.
/**
  * Amble which comes to a stand when not commanded to move.
 */
enum
{
  bosdyn_msgs__msg__LocomotionHint__HINT_SPEED_SELECT_AMBLE = 7
};

/// Constant 'HINT_JOG'.
/**
  * Demo gait which moves diagonal leg pairs together with an aerial phase.
 */
enum
{
  bosdyn_msgs__msg__LocomotionHint__HINT_JOG = 8
};

/// Constant 'HINT_HOP'.
/**
  * Demo gait which hops while holding some feet in the air.
 */
enum
{
  bosdyn_msgs__msg__LocomotionHint__HINT_HOP = 9
};

/// Constant 'HINT_AUTO_TROT'.
/**
  * HINT_AUTO_TROT is deprecated due to the name being too similar to the Spot Autowalk feature.
  * It has been replaced by HINT_SPEED_SELECT_TROT. Keeping this value in here for now for
  * backwards compatibility, but this may be removed in future releases.
 */
enum
{
  bosdyn_msgs__msg__LocomotionHint__HINT_AUTO_TROT = 10
};

/// Constant 'HINT_AUTO_AMBLE'.
/**
  * HINT_AUTO_AMBLE is deprecated due to the name being too similar to the Spot Autowalk feature.
  * It has been replaced by HINT_SPEED_SELECT_AMBLE. Keeping this value in here for now for
  * backwards compatibility, but this may be removed in future releases.
 */
enum
{
  bosdyn_msgs__msg__LocomotionHint__HINT_AUTO_AMBLE = 11
};

/// Struct defined in msg/LocomotionHint in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__LocomotionHint
{
  int8_t value;
} bosdyn_msgs__msg__LocomotionHint;

// Struct for a sequence of bosdyn_msgs__msg__LocomotionHint.
typedef struct bosdyn_msgs__msg__LocomotionHint__Sequence
{
  bosdyn_msgs__msg__LocomotionHint * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__LocomotionHint__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__LOCOMOTION_HINT__STRUCT_H_
