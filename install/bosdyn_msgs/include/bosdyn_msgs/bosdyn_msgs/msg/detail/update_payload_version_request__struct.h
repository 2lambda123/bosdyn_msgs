// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/UpdatePayloadVersionRequest.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__UPDATE_PAYLOAD_VERSION_REQUEST__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__UPDATE_PAYLOAD_VERSION_REQUEST__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/request_header__struct.h"
// Member 'payload_credentials'
#include "bosdyn_msgs/msg/detail/payload_credentials__struct.h"
// Member 'updated_version'
#include "bosdyn_msgs/msg/detail/software_version__struct.h"

/// Struct defined in msg/UpdatePayloadVersionRequest in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__UpdatePayloadVersionRequest
{
  /// Update the payload definition of the payload with matching GUID. The existing payload must
  /// have a secret set and the request must provide the secret for access.
  /// GUID and is_authorized fields are immutable and cannot be updated.
  /// Common request header.
  bosdyn_msgs__msg__RequestHeader header;
  bool header_is_set;
  /// Payload credentials.
  bosdyn_msgs__msg__PayloadCredentials payload_credentials;
  bool payload_credentials_is_set;
  /// The GUID of the payload to be updated.
  /// DEPRECATED as of 3.0.0. Please use payload_credentials instead.
  /// The payload secret for the specified payload.
  /// DEPRECATED as of 3.0.0. Please use payload_credentials instead.
  /// The new software version that the payload is being updated to.
  bosdyn_msgs__msg__SoftwareVersion updated_version;
  bool updated_version_is_set;
} bosdyn_msgs__msg__UpdatePayloadVersionRequest;

// Struct for a sequence of bosdyn_msgs__msg__UpdatePayloadVersionRequest.
typedef struct bosdyn_msgs__msg__UpdatePayloadVersionRequest__Sequence
{
  bosdyn_msgs__msg__UpdatePayloadVersionRequest * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__UpdatePayloadVersionRequest__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__UPDATE_PAYLOAD_VERSION_REQUEST__STRUCT_H_
