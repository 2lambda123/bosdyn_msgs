// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/DownloadWaypointSnapshotRequest.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__DOWNLOAD_WAYPOINT_SNAPSHOT_REQUEST__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__DOWNLOAD_WAYPOINT_SNAPSHOT_REQUEST__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/request_header__struct.h"
// Member 'waypoint_snapshot_id'
#include "rosidl_runtime_c/string.h"

/// Struct defined in msg/DownloadWaypointSnapshotRequest in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__DownloadWaypointSnapshotRequest
{
  /// The DownloadWaypointSnapshot request asks for a specific waypoint snapshot id to
  /// be downloaded and has parameters to decrease the amount of data downloaded. After
  /// recording a map, first call the DownloadGraph RPC. Then, for each waypoint snapshot id,
  /// request the waypoint snapshot from the server using the DownloadWaypointSnapshot RPC.
  /// Common request header.
  bosdyn_msgs__msg__RequestHeader header;
  bool header_is_set;
  /// ID of the snapshot associated with a waypoint.
  rosidl_runtime_c__String waypoint_snapshot_id;
  /// If true, download the full images and point clouds from
  /// each camera.
  bool download_images;
  /// If true, the point cloud will be compressed using the smallest
  /// available point cloud encoding. If false, three 32-bit floats will
  /// be used per point.
  bool compress_point_cloud;
  /// Skip downloading the point cloud, and only download other data such as images or world
  /// objects.
  bool do_not_download_point_cloud;
} bosdyn_msgs__msg__DownloadWaypointSnapshotRequest;

// Struct for a sequence of bosdyn_msgs__msg__DownloadWaypointSnapshotRequest.
typedef struct bosdyn_msgs__msg__DownloadWaypointSnapshotRequest__Sequence
{
  bosdyn_msgs__msg__DownloadWaypointSnapshotRequest * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__DownloadWaypointSnapshotRequest__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__DOWNLOAD_WAYPOINT_SNAPSHOT_REQUEST__STRUCT_H_
