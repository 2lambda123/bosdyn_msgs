// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/Condition.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__CONDITION__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__CONDITION__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'lhs'
// Member 'rhs'
#include "bosdyn_msgs/msg/detail/condition_operand__struct.h"
// Member 'operation'
#include "bosdyn_msgs/msg/detail/condition_compare__struct.h"
// Member 'handle_staleness'
#include "bosdyn_msgs/msg/detail/condition_handle_staleness__struct.h"

/// Struct defined in msg/Condition in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__Condition
{
  /// Checks a simple comparison statement.
  /// Options for where to retrieve values from.
  /// Left-hand side of the comparison.
  bosdyn_msgs__msg__ConditionOperand lhs;
  bool lhs_is_set;
  /// Right-hand side of the comparison.
  bosdyn_msgs__msg__ConditionOperand rhs;
  bool rhs_is_set;
  /// Comparison operator.
  /// Comparison operator to compare lhs and rhs.
  bosdyn_msgs__msg__ConditionCompare operation;
  /// When comparing runtime values in the blackboard, some values might be "stale" (i.e too old).
  /// This defines how the comparator should behave when a read value is stale.
  bosdyn_msgs__msg__ConditionHandleStaleness handle_staleness;
} bosdyn_msgs__msg__Condition;

// Struct for a sequence of bosdyn_msgs__msg__Condition.
typedef struct bosdyn_msgs__msg__Condition__Sequence
{
  bosdyn_msgs__msg__Condition * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__Condition__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__CONDITION__STRUCT_H_
