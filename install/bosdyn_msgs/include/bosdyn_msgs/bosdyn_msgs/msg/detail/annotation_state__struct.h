// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/AnnotationState.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__ANNOTATION_STATE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__ANNOTATION_STATE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'ANNOTATION_STATE_UNKNOWN'.
/**
  * Indicator of whether or not the waypoint and edge annotations are complete and filled out.
  * No assertions made about this annotation.
 */
enum
{
  bosdyn_msgs__msg__AnnotationState__ANNOTATION_STATE_UNKNOWN = 0
};

/// Constant 'ANNOTATION_STATE_SET'.
/**
  * This annotation and all of its fields have been deliberately set.
 */
enum
{
  bosdyn_msgs__msg__AnnotationState__ANNOTATION_STATE_SET = 1
};

/// Constant 'ANNOTATION_STATE_NONE'.
/**
  * This annotation has been deliberately set to "no annotation" -- any subfields are unset.
 */
enum
{
  bosdyn_msgs__msg__AnnotationState__ANNOTATION_STATE_NONE = 2
};

/// Struct defined in msg/AnnotationState in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__AnnotationState
{
  int8_t value;
} bosdyn_msgs__msg__AnnotationState;

// Struct for a sequence of bosdyn_msgs__msg__AnnotationState.
typedef struct bosdyn_msgs__msg__AnnotationState__Sequence
{
  bosdyn_msgs__msg__AnnotationState * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__AnnotationState__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__ANNOTATION_STATE__STRUCT_H_
