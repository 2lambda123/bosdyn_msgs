// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/BlobSpec.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__BLOB_SPEC__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__BLOB_SPEC__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'source'
// Member 'message_type'
// Member 'channel'
// Member 'channel_glob'
#include "rosidl_runtime_c/string.h"

/// Struct defined in msg/BlobSpec in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__BlobSpec
{
  /// Specification for selecting of blob messages.
  /// If set, require the message source to match this.
  rosidl_runtime_c__String source;
  /// If set, require the message type to match this value.
  rosidl_runtime_c__String message_type;
  /// If both channel and channel_glob are set, messages are selected which match either one.
  /// If set, require the channel to match this value (or channel_glob, if set).
  rosidl_runtime_c__String channel;
  /// Optionally require the channel to match a glob (or channel, if set)..
  /// For example, 'gps/*' will match all channels starting with 'gps/'.
  rosidl_runtime_c__String channel_glob;
} bosdyn_msgs__msg__BlobSpec;

// Struct for a sequence of bosdyn_msgs__msg__BlobSpec.
typedef struct bosdyn_msgs__msg__BlobSpec__Sequence
{
  bosdyn_msgs__msg__BlobSpec * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__BlobSpec__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__BLOB_SPEC__STRUCT_H_
