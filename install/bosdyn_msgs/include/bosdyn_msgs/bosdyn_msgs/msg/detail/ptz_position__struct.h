// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/PtzPosition.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__PTZ_POSITION__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__PTZ_POSITION__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'ptz'
#include "bosdyn_msgs/msg/detail/ptz_description__struct.h"

/// Struct defined in msg/PtzPosition in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__PtzPosition
{
  /// Doubles as a description of current state, or a command for a new position.
  /// The "mech" ptz can pan [0, 360] degrees,
  /// tilt approximately [-30, 100] degrees where 0 is the horizon, IR and PTZ models differ
  /// and zoom between 1x and 30x.
  bosdyn_msgs__msg__PtzDescription ptz;
  bool ptz_is_set;
  /// degrees
  float pan;
  bool pan_is_set;
  /// degrees
  float tilt;
  bool tilt_is_set;
  /// zoom level
  float zoom;
  bool zoom_is_set;
} bosdyn_msgs__msg__PtzPosition;

// Struct for a sequence of bosdyn_msgs__msg__PtzPosition.
typedef struct bosdyn_msgs__msg__PtzPosition__Sequence
{
  bosdyn_msgs__msg__PtzPosition * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__PtzPosition__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__PTZ_POSITION__STRUCT_H_
