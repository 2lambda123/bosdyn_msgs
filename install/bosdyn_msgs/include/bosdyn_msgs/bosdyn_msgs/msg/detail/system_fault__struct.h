// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/SystemFault.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SYSTEM_FAULT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SYSTEM_FAULT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'name'
// Member 'error_message'
// Member 'attributes'
#include "rosidl_runtime_c/string.h"
// Member 'onset_timestamp'
#include "builtin_interfaces/msg/detail/time__struct.h"
// Member 'duration'
#include "builtin_interfaces/msg/detail/duration__struct.h"
// Member 'severity'
#include "bosdyn_msgs/msg/detail/system_fault_severity__struct.h"

/// Struct defined in msg/SystemFault in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__SystemFault
{
  /// The current system faults for a robot.
  /// A fault is an indicator of a hardware or software problem on the robot. An
  /// active fault may indicate the robot may fail to comply with a user request.
  /// The exact response a fault may vary, but possible responses include: failure
  /// to enable motor power, loss of perception enabled behavior, or triggering a
  /// fault recovery behavior on robot.
  /// Name of the fault.
  rosidl_runtime_c__String name;
  /// Time of robot local clock at fault onset.
  builtin_interfaces__msg__Time onset_timestamp;
  bool onset_timestamp_is_set;
  /// Time elapsed since onset of the fault.
  builtin_interfaces__msg__Duration duration;
  bool duration_is_set;
  /// Error code returned by a fault. The exact interpretation of the fault code
  /// is unique to each variety of fault on the robot. The code is useful for
  /// Boston Dynamics support staff to diagnose hardware/software issues on
  /// robot.
  int32_t code;
  /// Fault UID
  uint64_t uid;
  /// User visible description of the fault (and possibly remedies.)
  rosidl_runtime_c__String error_message;
  /// Fault attributes
  /// Each fault may be flagged with attribute metadata (strings in this case.)
  /// These attributes are useful to communicate that a particular fault may
  /// have significant effect on robot operations. Some potential attributes
  /// may be "robot", "imu", "vision", or "battery". These attributes would let
  /// us flag a fault as indicating a problem with the base robot hardware,
  /// gyro, perception system, or battery respectively. A fault may have, zero,
  /// one, or more attributes attached to it, i.e. a "battery" fault may also
  /// be considered a "robot" fault.
  rosidl_runtime_c__String__Sequence attributes;
  /// Fault severity, how bad is the fault?
  /// The severity level will have some indication of the potential robot
  /// response to the fault. For example, a fault marked with "battery"
  /// attribute and severity level SEVERITY_WARN may indicate a low battery
  /// state of charge. However a "battery" fault with severity level
  /// SEVERITY_CRITICAL likely means the robot is going to shutdown
  /// immediately.
  bosdyn_msgs__msg__SystemFaultSeverity severity;
} bosdyn_msgs__msg__SystemFault;

// Struct for a sequence of bosdyn_msgs__msg__SystemFault.
typedef struct bosdyn_msgs__msg__SystemFault__Sequence
{
  bosdyn_msgs__msg__SystemFault * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__SystemFault__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SYSTEM_FAULT__STRUCT_H_
