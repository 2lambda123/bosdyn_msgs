// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/Sleep.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SLEEP__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SLEEP__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Struct defined in msg/Sleep in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__Sleep
{
  /// When started, begins a sleep timer for X seconds. Returns "success" after the timer elapses,
  /// "running" otherwise.
  /// Number of seconds to sleep for.
  float seconds;
  /// If this node is stopped, should it restart the timer?
  bool restart_after_stop;
} bosdyn_msgs__msg__Sleep;

// Struct for a sequence of bosdyn_msgs__msg__Sleep.
typedef struct bosdyn_msgs__msg__Sleep__Sequence
{
  bosdyn_msgs__msg__Sleep * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__Sleep__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SLEEP__STRUCT_H_
