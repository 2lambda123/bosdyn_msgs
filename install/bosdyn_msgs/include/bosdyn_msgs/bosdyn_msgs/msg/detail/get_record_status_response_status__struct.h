// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/GetRecordStatusResponseStatus.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__GET_RECORD_STATUS_RESPONSE_STATUS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__GET_RECORD_STATUS_RESPONSE_STATUS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'STATUS_UNKNOWN'.
enum
{
  bosdyn_msgs__msg__GetRecordStatusResponseStatus__STATUS_UNKNOWN = 0
};

/// Constant 'STATUS_OK'.
enum
{
  bosdyn_msgs__msg__GetRecordStatusResponseStatus__STATUS_OK = 1
};

/// Constant 'STATUS_ROBOT_IMPAIRED'.
/**
  * Unable to record waypoints because the robot is impaired. When this happens,
  * the system will not create new waypoints until the robot is no longer impaired.
  * See impaired_state for more details.
 */
enum
{
  bosdyn_msgs__msg__GetRecordStatusResponseStatus__STATUS_ROBOT_IMPAIRED = 2
};

/// Struct defined in msg/GetRecordStatusResponseStatus in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__GetRecordStatusResponseStatus
{
  int8_t value;
} bosdyn_msgs__msg__GetRecordStatusResponseStatus;

// Struct for a sequence of bosdyn_msgs__msg__GetRecordStatusResponseStatus.
typedef struct bosdyn_msgs__msg__GetRecordStatusResponseStatus__Sequence
{
  bosdyn_msgs__msg__GetRecordStatusResponseStatus * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__GetRecordStatusResponseStatus__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__GET_RECORD_STATUS_RESPONSE_STATUS__STRUCT_H_
