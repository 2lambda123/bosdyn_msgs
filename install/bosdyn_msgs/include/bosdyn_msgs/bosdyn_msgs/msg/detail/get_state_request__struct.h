// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/GetStateRequest.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__GET_STATE_REQUEST__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__GET_STATE_REQUEST__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/request_header__struct.h"
// Member 'lower_bound'
#include "bosdyn_msgs/msg/detail/get_state_request_one_of_lower_bound__struct.h"

/// Struct defined in msg/GetStateRequest in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__GetStateRequest
{
  /// Get the state of the mission.
  /// Common request header.
  bosdyn_msgs__msg__RequestHeader header;
  bool header_is_set;
  /// Upper bound on the node state to retrieve, inclusive. Leave unset for the latest data.
  int64_t history_upper_tick_bound;
  bool history_upper_tick_bound_is_set;
  /// Specify the lower bound of per-node state history to retrieve.
  /// The service may not remember all the state you ask for. In this case, all of the state
  /// available between the specified bounds will be returned.
  /// This is optional -- if left unset, you will get exactly one set of per-node state.
  bosdyn_msgs__msg__GetStateRequestOneOfLowerBound lower_bound;
} bosdyn_msgs__msg__GetStateRequest;

// Struct for a sequence of bosdyn_msgs__msg__GetStateRequest.
typedef struct bosdyn_msgs__msg__GetStateRequest__Sequence
{
  bosdyn_msgs__msg__GetStateRequest * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__GetStateRequest__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__GET_STATE_REQUEST__STRUCT_H_
