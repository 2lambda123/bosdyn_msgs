// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/PowerStateShorePowerState.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__POWER_STATE_SHORE_POWER_STATE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__POWER_STATE_SHORE_POWER_STATE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'SHORE_POWER_STATE_UNKNOWN'.
/**
  * Unknown shore power state. Do not use.
 */
enum
{
  bosdyn_msgs__msg__PowerStateShorePowerState__SHORE_POWER_STATE_UNKNOWN = 0
};

/// Constant 'SHORE_POWER_STATE_ON'.
/**
  * The robot is connected to shore power. The robot will not power on while connected to
  * shore power.
 */
enum
{
  bosdyn_msgs__msg__PowerStateShorePowerState__SHORE_POWER_STATE_ON = 1
};

/// Constant 'SHORE_POWER_STATE_OFF'.
/**
  * The robot is disconnected from shore power and motors can be powered up.
 */
enum
{
  bosdyn_msgs__msg__PowerStateShorePowerState__SHORE_POWER_STATE_OFF = 2
};

/// Struct defined in msg/PowerStateShorePowerState in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__PowerStateShorePowerState
{
  int8_t value;
} bosdyn_msgs__msg__PowerStateShorePowerState;

// Struct for a sequence of bosdyn_msgs__msg__PowerStateShorePowerState.
typedef struct bosdyn_msgs__msg__PowerStateShorePowerState__Sequence
{
  bosdyn_msgs__msg__PowerStateShorePowerState * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__PowerStateShorePowerState__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__POWER_STATE_SHORE_POWER_STATE__STRUCT_H_
