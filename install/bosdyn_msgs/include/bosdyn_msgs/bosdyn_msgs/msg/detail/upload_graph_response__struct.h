// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/UploadGraphResponse.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__UPLOAD_GRAPH_RESPONSE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__UPLOAD_GRAPH_RESPONSE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/response_header__struct.h"
// Member 'status'
#include "bosdyn_msgs/msg/detail/upload_graph_response_status__struct.h"
// Member 'lease_use_result'
#include "bosdyn_msgs/msg/detail/lease_use_result__struct.h"
// Member 'loaded_waypoint_snapshot_ids'
// Member 'unknown_waypoint_snapshot_ids'
// Member 'loaded_edge_snapshot_ids'
// Member 'unknown_edge_snapshot_ids'
#include "rosidl_runtime_c/string.h"
// Member 'license_status'
#include "bosdyn_msgs/msg/detail/license_info_status__struct.h"
// Member 'sensor_status'
#include "bosdyn_msgs/msg/detail/sensor_compatibility_status__struct.h"
// Member 'area_callback_error'
#include "bosdyn_msgs/msg/detail/area_callback_service_error__struct.h"
// Member 'map_stats'
#include "bosdyn_msgs/msg/detail/map_stats__struct.h"
// Member 'validation_status'
#include "bosdyn_msgs/msg/detail/upload_graph_response_validation_status__struct.h"

/// Struct defined in msg/UploadGraphResponse in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__UploadGraphResponse
{
  /// Response to the UploadGraphRequest. After uploading a graph, the user is expected
  /// to upload large data at waypoints and edges (called snapshots). The response provides
  /// a list of snapshot IDs which are not yet cached on the server. Snapshots with these IDs should
  /// be uploaded by the client.
  /// Common response header.
  bosdyn_msgs__msg__ResponseHeader header;
  bool header_is_set;
  /// Status for an upload request.
  bosdyn_msgs__msg__UploadGraphResponseStatus status;
  /// Details about how the lease was used.
  bosdyn_msgs__msg__LeaseUseResult lease_use_result;
  bool lease_use_result_is_set;
  /// The waypoint snapshot ids for which there was cached data.
  rosidl_runtime_c__String__Sequence loaded_waypoint_snapshot_ids;
  /// The waypoint snapshot ids for which there is no cached data.
  rosidl_runtime_c__String__Sequence unknown_waypoint_snapshot_ids;
  /// The edge snapshot ids for which there was cached data.
  rosidl_runtime_c__String__Sequence loaded_edge_snapshot_ids;
  /// The edge snapshot ids for which there was no cached data.
  rosidl_runtime_c__String__Sequence unknown_edge_snapshot_ids;
  /// Large graphs can only be uploaded if the license permits them.
  bosdyn_msgs__msg__LicenseInfoStatus license_status;
  bosdyn_msgs__msg__SensorCompatibilityStatus sensor_status;
  bool sensor_status_is_set;
  /// Errors about Area Callbacks in the map.
  bosdyn_msgs__msg__AreaCallbackServiceError area_callback_error;
  bool area_callback_error_is_set;
  /// General map statistics.
  bosdyn_msgs__msg__MapStats map_stats;
  bool map_stats_is_set;
  /// Detailed information about why STATUS_INVALID_GRAPH was returned. This will only
  /// contain information if the UploadGraph request could not be validated.
  /// If the returned status is STATUS_INVALID_GRAPH, this contains the detailed information about why the
  /// graph was invalid. Note that some graph validation errors are warnings and the robot will be able to navigate
  /// on the graph even when they are present.
  bosdyn_msgs__msg__UploadGraphResponseValidationStatus validation_status;
  bool validation_status_is_set;
} bosdyn_msgs__msg__UploadGraphResponse;

// Struct for a sequence of bosdyn_msgs__msg__UploadGraphResponse.
typedef struct bosdyn_msgs__msg__UploadGraphResponse__Sequence
{
  bosdyn_msgs__msg__UploadGraphResponse * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__UploadGraphResponse__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__UPLOAD_GRAPH_RESPONSE__STRUCT_H_
