// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/OperatorComment.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__OPERATOR_COMMENT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__OPERATOR_COMMENT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'message'
#include "rosidl_runtime_c/string.h"
// Member 'timestamp'
#include "builtin_interfaces/msg/detail/time__struct.h"

/// Struct defined in msg/OperatorComment in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__OperatorComment
{
  /// An operator comment to be added to the log.
  /// These are notes especially intended to mark when logs should be preserved and reviewed
  ///  to ensure that robot hardware and/or software is working as intended.
  /// String annotation message to add to the log.
  rosidl_runtime_c__String message;
  /// The timestamp of the annotation.  This must be in robot time.
  /// If this is not specified, this will default to the time the server received the message.
  builtin_interfaces__msg__Time timestamp;
  bool timestamp_is_set;
} bosdyn_msgs__msg__OperatorComment;

// Struct for a sequence of bosdyn_msgs__msg__OperatorComment.
typedef struct bosdyn_msgs__msg__OperatorComment__Sequence
{
  bosdyn_msgs__msg__OperatorComment * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__OperatorComment__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__OPERATOR_COMMENT__STRUCT_H_
