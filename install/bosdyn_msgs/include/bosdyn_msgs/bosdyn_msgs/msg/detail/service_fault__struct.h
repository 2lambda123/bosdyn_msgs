// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/ServiceFault.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SERVICE_FAULT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SERVICE_FAULT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'fault_id'
#include "bosdyn_msgs/msg/detail/service_fault_id__struct.h"
// Member 'error_message'
// Member 'attributes'
#include "rosidl_runtime_c/string.h"
// Member 'severity'
#include "bosdyn_msgs/msg/detail/service_fault_severity__struct.h"
// Member 'onset_timestamp'
#include "builtin_interfaces/msg/detail/time__struct.h"
// Member 'duration'
#include "builtin_interfaces/msg/detail/duration__struct.h"

/// Struct defined in msg/ServiceFault in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__ServiceFault
{
  /// The current service faults for services registered with the robot.
  /// A fault is an indicator of a problem with a service or payload registered
  /// with the robot. An active fault may indicate a service may fail to comply
  /// with a user request.
  /// If the name, service_name, and payload_guid of a newly triggered ServiceFault matches an
  /// already active ServiceFault the new fault will not be added to the active fault list.
  /// The oldest matching fault will be maintained.
  /// Identifying information of the fault.
  bosdyn_msgs__msg__ServiceFaultId fault_id;
  bool fault_id_is_set;
  /// User visible description of the fault (and possibly remedies). Will be
  /// displayed on tablet.
  rosidl_runtime_c__String error_message;
  /// Fault attributes
  /// Each fault may be flagged with attribute metadata (strings in this case.)
  /// These attributes are useful to communicate that a particular fault may
  /// have significant effect on the operations of services. Some potential attributes
  /// may be "autowalk", "Spot CORE", "vision", or "gauge detection". These
  /// attributes enable the caller to flag a fault as indicating a problem with
  /// particular robot abstractions. A fault may have, zero, one, or more
  /// attributes attached to it.
  rosidl_runtime_c__String__Sequence attributes;
  /// The severity level will have some indication of the potential breakage
  /// resulting from the fault. For example, a fault associated with payload
  /// X and severity level SEVERITY_INFO may indicate the payload is in an
  /// unexpected state but still operational. However, a fault with serverity
  /// level SEVERITY_CRITICAL may indicate the payload is no
  /// longer operational.
  bosdyn_msgs__msg__ServiceFaultSeverity severity;
  /// Time of robot local clock at fault onset. Set by robot-state service.
  builtin_interfaces__msg__Time onset_timestamp;
  bool onset_timestamp_is_set;
  /// Time elapsed since onset of the fault. Set by robot-state service.
  builtin_interfaces__msg__Duration duration;
  bool duration_is_set;
} bosdyn_msgs__msg__ServiceFault;

// Struct for a sequence of bosdyn_msgs__msg__ServiceFault.
typedef struct bosdyn_msgs__msg__ServiceFault__Sequence
{
  bosdyn_msgs__msg__ServiceFault * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__ServiceFault__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SERVICE_FAULT__STRUCT_H_
