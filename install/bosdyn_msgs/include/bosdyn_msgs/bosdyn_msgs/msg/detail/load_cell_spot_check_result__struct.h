// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/LoadCellSpotCheckResult.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__LOAD_CELL_SPOT_CHECK_RESULT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__LOAD_CELL_SPOT_CHECK_RESULT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'error'
#include "bosdyn_msgs/msg/detail/load_cell_spot_check_result_error__struct.h"

/// Struct defined in msg/LoadCellSpotCheckResult in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__LoadCellSpotCheckResult
{
  /// Results from load cell check.
  /// Errors reflect an issue with robot hardware.
  /// A flag to indicate if results has an error.
  bosdyn_msgs__msg__LoadCellSpotCheckResultError error;
  /// The current loadcell zero as fraction of full range
  float zero;
  /// The previous loadcell zero as fraction of full range
  float old_zero;
} bosdyn_msgs__msg__LoadCellSpotCheckResult;

// Struct for a sequence of bosdyn_msgs__msg__LoadCellSpotCheckResult.
typedef struct bosdyn_msgs__msg__LoadCellSpotCheckResult__Sequence
{
  bosdyn_msgs__msg__LoadCellSpotCheckResult * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__LoadCellSpotCheckResult__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__LOAD_CELL_SPOT_CHECK_RESULT__STRUCT_H_
