// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/DataCapture.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__DATA_CAPTURE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__DATA_CAPTURE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'name'
#include "rosidl_runtime_c/string.h"
// Member 'custom_params'
#include "bosdyn_msgs/msg/detail/dict_param__struct.h"

/// Struct defined in msg/DataCapture in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__DataCapture
{
  /// An individual capture which can be specified in the AcquireData request to identify a piece of
  /// non-image data to be collected.
  /// Name of the data to be captured. This should match the uniquely identifying name from
  /// the DataAcquisitionCapability.
  rosidl_runtime_c__String name;
  /// Values passed to the service at capture time.
  /// See the DictParam.Spec in DataAcquisitionCapability.
  bosdyn_msgs__msg__DictParam custom_params;
  bool custom_params_is_set;
} bosdyn_msgs__msg__DataCapture;

// Struct for a sequence of bosdyn_msgs__msg__DataCapture.
typedef struct bosdyn_msgs__msg__DataCapture__Sequence
{
  bosdyn_msgs__msg__DataCapture * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__DataCapture__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__DATA_CAPTURE__STRUCT_H_
