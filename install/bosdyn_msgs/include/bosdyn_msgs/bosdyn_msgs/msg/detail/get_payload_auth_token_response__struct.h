// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/GetPayloadAuthTokenResponse.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__GET_PAYLOAD_AUTH_TOKEN_RESPONSE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__GET_PAYLOAD_AUTH_TOKEN_RESPONSE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/response_header__struct.h"
// Member 'status'
#include "bosdyn_msgs/msg/detail/get_payload_auth_token_response_status__struct.h"
// Member 'token'
#include "rosidl_runtime_c/string.h"

/// Struct defined in msg/GetPayloadAuthTokenResponse in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__GetPayloadAuthTokenResponse
{
  /// The GetPayloadAuthToken response message that returns the token for the payload.
  /// Common response header.
  bosdyn_msgs__msg__ResponseHeader header;
  bool header_is_set;
  /// Return status for the request.
  bosdyn_msgs__msg__GetPayloadAuthTokenResponseStatus status;
  /// A limited-access user token provided on successful payload registration
  rosidl_runtime_c__String token;
} bosdyn_msgs__msg__GetPayloadAuthTokenResponse;

// Struct for a sequence of bosdyn_msgs__msg__GetPayloadAuthTokenResponse.
typedef struct bosdyn_msgs__msg__GetPayloadAuthTokenResponse__Sequence
{
  bosdyn_msgs__msg__GetPayloadAuthTokenResponse * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__GetPayloadAuthTokenResponse__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__GET_PAYLOAD_AUTH_TOKEN_RESPONSE__STRUCT_H_
