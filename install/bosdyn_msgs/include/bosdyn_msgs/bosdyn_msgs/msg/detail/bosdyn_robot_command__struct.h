// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/BosdynRobotCommand.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__BOSDYN_ROBOT_COMMAND__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__BOSDYN_ROBOT_COMMAND__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'service_name'
// Member 'host'
#include "rosidl_runtime_c/string.h"
// Member 'command'
#include "bosdyn_msgs/msg/detail/robot_command__struct.h"

/// Struct defined in msg/BosdynRobotCommand in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__BosdynRobotCommand
{
  /// Execute a RobotCommand.
  /// These nodes will "succeed" once a feedback response is received indicating success. Any commands
  /// that require an "end time" will have that information set based on the end time of the mission.
  /// Name of the service to use.
  rosidl_runtime_c__String service_name;
  /// Host machine the directory is running on.
  rosidl_runtime_c__String host;
  /// The command to execute. See the RobotCommand documentation for details.
  bosdyn_msgs__msg__RobotCommand command;
  bool command_is_set;
} bosdyn_msgs__msg__BosdynRobotCommand;

// Struct for a sequence of bosdyn_msgs__msg__BosdynRobotCommand.
typedef struct bosdyn_msgs__msg__BosdynRobotCommand__Sequence
{
  bosdyn_msgs__msg__BosdynRobotCommand * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__BosdynRobotCommand__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__BOSDYN_ROBOT_COMMAND__STRUCT_H_
