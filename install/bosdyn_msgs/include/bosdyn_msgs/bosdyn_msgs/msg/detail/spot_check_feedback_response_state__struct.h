// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/SpotCheckFeedbackResponseState.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SPOT_CHECK_FEEDBACK_RESPONSE_STATE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SPOT_CHECK_FEEDBACK_RESPONSE_STATE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'STATE_UNKNOWN'.
/**
  * Unused enum.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_UNKNOWN = 0
};

/// Constant 'STATE_USER_ABORTED'.
/**
  * SpotCheck is aborted by the user.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_USER_ABORTED = 1
};

/// Constant 'STATE_STARTING'.
/**
  * SpotCheck is initializing.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_STARTING = 2
};

/// Constant 'STATE_LOADCELL_CAL'.
/**
  * Load cell calibration underway.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_LOADCELL_CAL = 3
};

/// Constant 'STATE_ENDSTOP_CAL'.
/**
  * Endstop calibration underway.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_ENDSTOP_CAL = 4
};

/// Constant 'STATE_CAMERA_CHECK'.
/**
  * Camera check underway.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_CAMERA_CHECK = 5
};

/// Constant 'STATE_BODY_POSING'.
/**
  * Body pose routine underway.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_BODY_POSING = 6
};

/// Constant 'STATE_FINISHED'.
/**
  * Spot check successfully finished.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_FINISHED = 7
};

/// Constant 'STATE_REVERTING_CAL'.
/**
  * Reverting calibration to previous values.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_REVERTING_CAL = 8
};

/// Constant 'STATE_ERROR'.
/**
  * Error occurred while running spotcheck. Inspect error for more info.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_ERROR = 9
};

/// Constant 'STATE_WAITING_FOR_COMMAND'.
/**
  * Waiting for user command.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_WAITING_FOR_COMMAND = 10
};

/// Constant 'STATE_HIP_RANGE_OF_MOTION_CHECK'.
/**
  * Hip range of motion check underway.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_HIP_RANGE_OF_MOTION_CHECK = 11
};

/// Constant 'STATE_GRIPPER_CAL'.
/**
  * Gripper calibration underway.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_GRIPPER_CAL = 12
};

/// Constant 'STATE_SIT_DOWN_AFTER_RUN'.
/**
  * Sitting down after run.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_SIT_DOWN_AFTER_RUN = 13
};

/// Constant 'STATE_ARM_JOINT_CHECK'.
/**
  * Arm joint endstops and cross error check underway.
 */
enum
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState__STATE_ARM_JOINT_CHECK = 14
};

/// Struct defined in msg/SpotCheckFeedbackResponseState in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__SpotCheckFeedbackResponseState
{
  int8_t value;
} bosdyn_msgs__msg__SpotCheckFeedbackResponseState;

// Struct for a sequence of bosdyn_msgs__msg__SpotCheckFeedbackResponseState.
typedef struct bosdyn_msgs__msg__SpotCheckFeedbackResponseState__Sequence
{
  bosdyn_msgs__msg__SpotCheckFeedbackResponseState * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__SpotCheckFeedbackResponseState__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SPOT_CHECK_FEEDBACK_RESPONSE_STATE__STRUCT_H_
