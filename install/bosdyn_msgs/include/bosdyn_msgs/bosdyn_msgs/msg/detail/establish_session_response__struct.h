// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/EstablishSessionResponse.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__ESTABLISH_SESSION_RESPONSE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__ESTABLISH_SESSION_RESPONSE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/response_header__struct.h"
// Member 'status'
#include "bosdyn_msgs/msg/detail/establish_session_response_status__struct.h"
// Member 'session_id'
// Member 'missing_lease_resources'
#include "rosidl_runtime_c/string.h"
// Member 'lease_use_results'
#include "bosdyn_msgs/msg/detail/lease_use_result__struct.h"

/// Struct defined in msg/EstablishSessionResponse in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__EstablishSessionResponse
{
  /// Provide the id to use for the particular mission node to tick this remote service.
  /// Common response header.
  bosdyn_msgs__msg__ResponseHeader header;
  bool header_is_set;
  /// Possible results of establishing a session.
  /// Result of this establish session request.
  bosdyn_msgs__msg__EstablishSessionResponseStatus status;
  /// On success, contains an ID for this session.
  rosidl_runtime_c__String session_id;
  /// Need to provide leases on these resources.
  rosidl_runtime_c__String__Sequence missing_lease_resources;
  /// Details about how any leases were used.
  /// Allowed to be empty, if leases were not actually used.
  bosdyn_msgs__msg__LeaseUseResult__Sequence lease_use_results;
} bosdyn_msgs__msg__EstablishSessionResponse;

// Struct for a sequence of bosdyn_msgs__msg__EstablishSessionResponse.
typedef struct bosdyn_msgs__msg__EstablishSessionResponse__Sequence
{
  bosdyn_msgs__msg__EstablishSessionResponse * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__EstablishSessionResponse__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__ESTABLISH_SESSION_RESPONSE__STRUCT_H_
