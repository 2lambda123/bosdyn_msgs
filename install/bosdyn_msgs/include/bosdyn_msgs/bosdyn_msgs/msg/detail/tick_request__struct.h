// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/TickRequest.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__TICK_REQUEST__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__TICK_REQUEST__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/request_header__struct.h"
// Member 'session_id'
// Member 'group_name'
#include "rosidl_runtime_c/string.h"
// Member 'leases'
#include "bosdyn_msgs/msg/detail/lease__struct.h"
// Member 'inputs'
#include "bosdyn_msgs/msg/detail/key_value__struct.h"
// Member 'params'
#include "bosdyn_msgs/msg/detail/dict_param__struct.h"

/// Struct defined in msg/TickRequest in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__TickRequest
{
  /// Request that the remote tick itself for a particular node in the mission.
  /// Common request header.
  bosdyn_msgs__msg__RequestHeader header;
  bool header_is_set;
  /// Session ID as returned by the EstablishSessionResponse.
  /// Used to guarantee coherence between a single client and a servicer.
  rosidl_runtime_c__String session_id;
  /// All leases that the remote service may need.
  bosdyn_msgs__msg__Lease__Sequence leases;
  /// Inputs provided to the servicer.
  /// DEPRECATED as of 3.3.  Please use 'params' instead.
  bosdyn_msgs__msg__KeyValue__Sequence inputs;
  /// Parameters set by the client.  Depending on the structure of the mission,
  /// the value may change during ticking.
  bosdyn_msgs__msg__DictParam params;
  bool params_is_set;
  /// Callbacks can be used to record data using Data Acquisition.  The mission
  /// can provide a hint to the callback with the current group, so that the
  /// data the callback saves is correctly grouped with other data generated
  /// by the mission.  The value may change during ticking.
  rosidl_runtime_c__String group_name;
} bosdyn_msgs__msg__TickRequest;

// Struct for a sequence of bosdyn_msgs__msg__TickRequest.
typedef struct bosdyn_msgs__msg__TickRequest__Sequence
{
  bosdyn_msgs__msg__TickRequest * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__TickRequest__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__TICK_REQUEST__STRUCT_H_
