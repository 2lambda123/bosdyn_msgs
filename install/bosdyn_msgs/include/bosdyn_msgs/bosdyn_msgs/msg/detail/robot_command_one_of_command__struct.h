// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/RobotCommandOneOfCommand.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__ROBOT_COMMAND_ONE_OF_COMMAND__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__ROBOT_COMMAND_ONE_OF_COMMAND__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'COMMAND_NOT_SET'.
/**
  * DEPRECATED as of 2.1.0, will be removed in 4.0.  Please use synchronized_command instead.
  * A mobility command for a robot to execute.
 */
enum
{
  bosdyn_msgs__msg__RobotCommandOneOfCommand__COMMAND_NOT_SET = 0
};

/// Constant 'COMMAND_FULL_BODY_COMMAND_SET'.
enum
{
  bosdyn_msgs__msg__RobotCommandOneOfCommand__COMMAND_FULL_BODY_COMMAND_SET = 1
};

/// Constant 'COMMAND_SYNCHRONIZED_COMMAND_SET'.
enum
{
  bosdyn_msgs__msg__RobotCommandOneOfCommand__COMMAND_SYNCHRONIZED_COMMAND_SET = 2
};

// Include directives for member types
// Member 'full_body_command'
#include "bosdyn_msgs/msg/detail/full_body_command_request__struct.h"
// Member 'synchronized_command'
#include "bosdyn_msgs/msg/detail/synchronized_command_request__struct.h"

/// Struct defined in msg/RobotCommandOneOfCommand in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__RobotCommandOneOfCommand
{
  /// ONEOF MESSAGE  Only one of the following can be set
  /// Commands which require control of entire robot.
  bosdyn_msgs__msg__FullBodyCommandRequest full_body_command;
  /// A synchronized command, for partial or full control of robot.
  bosdyn_msgs__msg__SynchronizedCommandRequest synchronized_command;
  /// Only one of the above can be filled in.  Use the enum to choose which.
  int8_t command_choice;
} bosdyn_msgs__msg__RobotCommandOneOfCommand;

// Struct for a sequence of bosdyn_msgs__msg__RobotCommandOneOfCommand.
typedef struct bosdyn_msgs__msg__RobotCommandOneOfCommand__Sequence
{
  bosdyn_msgs__msg__RobotCommandOneOfCommand * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__RobotCommandOneOfCommand__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__ROBOT_COMMAND_ONE_OF_COMMAND__STRUCT_H_
