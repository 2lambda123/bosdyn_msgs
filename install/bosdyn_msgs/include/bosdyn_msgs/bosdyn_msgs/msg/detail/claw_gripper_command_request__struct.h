// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/ClawGripperCommandRequest.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__CLAW_GRIPPER_COMMAND_REQUEST__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__CLAW_GRIPPER_COMMAND_REQUEST__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'trajectory'
#include "bosdyn_msgs/msg/detail/scalar_trajectory__struct.h"

/// Struct defined in msg/ClawGripperCommandRequest in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__ClawGripperCommandRequest
{
  /// Scalar trajectory for opening/closing the gripper. If 1 point is specified
  /// with no end time, we will execute a minimum time trajectory that observes
  /// velocity and acceleration constraints. Otherwise, we will use piecewise
  /// cubic interpolation, meaning there will be a cubic polynomial between each
  /// trajectory point, with continuous position and velocity at each trajectory
  /// point. If the requested trajectory violates the velocity or acceleration
  /// constraints below, a trajectory that is as close as possible but still
  /// obeys the constraints will be executed instead.
  /// position is radians: 0 is fully closed -1.5708 (-90 degrees) is fully open
  /// velocity is radians / sec.
  bosdyn_msgs__msg__ScalarTrajectory trajectory;
  bool trajectory_is_set;
  /// If specified, the gripper will not exceed these velocity and acceleration
  /// magnitudes. Note that if a minimum time trajectory is requested, we will
  /// accelerate and decelerate at maximum_open_close_acceleration, and coast at
  /// maximum_open_close_velocity.
  /// If unspecified, a default value of 10 (rad/s) will be used.
  double maximum_open_close_velocity;
  bool maximum_open_close_velocity_is_set;
  /// If unspecified, a default value of 40 (rad/s/s) will be used.
  double maximum_open_close_acceleration;
  bool maximum_open_close_acceleration_is_set;
  /// Maximum torque applied. If unspecified, a default value of 5.5 (Nm) will be used.
  double maximum_torque;
  bool maximum_torque_is_set;
  /// By default the gripper transitions to force control when it detects an object closing.
  /// Setting this field to true disables the transition to force control on contact detection
  /// and always keeps the gripper in position control.
  bool disable_force_on_contact;
} bosdyn_msgs__msg__ClawGripperCommandRequest;

// Struct for a sequence of bosdyn_msgs__msg__ClawGripperCommandRequest.
typedef struct bosdyn_msgs__msg__ClawGripperCommandRequest__Sequence
{
  bosdyn_msgs__msg__ClawGripperCommandRequest * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__ClawGripperCommandRequest__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__CLAW_GRIPPER_COMMAND_REQUEST__STRUCT_H_
