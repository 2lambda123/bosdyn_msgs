// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/WorldObject.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__WORLD_OBJECT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__WORLD_OBJECT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'name'
#include "rosidl_runtime_c/string.h"
// Member 'acquisition_time'
#include "builtin_interfaces/msg/detail/time__struct.h"
// Member 'transforms_snapshot'
#include "bosdyn_msgs/msg/detail/frame_tree_snapshot__struct.h"
// Member 'object_lifetime'
#include "builtin_interfaces/msg/detail/duration__struct.h"
// Member 'drawable_properties'
#include "bosdyn_msgs/msg/detail/drawable_properties__struct.h"
// Member 'apriltag_properties'
#include "bosdyn_msgs/msg/detail/april_tag_properties__struct.h"
// Member 'nogo_region_properties'
#include "bosdyn_msgs/msg/detail/no_go_region_properties__struct.h"
// Member 'image_properties'
#include "bosdyn_msgs/msg/detail/image_properties__struct.h"
// Member 'dock_properties'
#include "bosdyn_msgs/msg/detail/dock_properties__struct.h"
// Member 'ray_properties'
#include "bosdyn_msgs/msg/detail/ray_properties__struct.h"
// Member 'bounding_box_properties'
#include "bosdyn_msgs/msg/detail/bounding_box_properties__struct.h"
// Member 'staircase_properties'
#include "bosdyn_msgs/msg/detail/staircase_properties__struct.h"

/// Struct defined in msg/WorldObject in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__WorldObject
{
  /// The world object message is used to describe different objects seen by a robot. It contains
  /// information about the properties of the object in addition to a unique id and the transform
  /// snapshot. The world object uses "properties" to describe different traits about the object, such
  /// as image coordinates associated with the camera the object was detected in. A world object can
  /// have multiple different properties that are all associated with the single object.
  /// Unique integer identifier that will be consistent for the duration of a robot's battery life
  /// The id is set internally by the world object service.
  int32_t id;
  /// A human readable name for the world object. Note that this differs from any frame_name's
  /// associated with the object (since there can be multiple frames describing a single object).
  rosidl_runtime_c__String name;
  /// Time in robot time clock at which this object was most recently detected and valid.
  builtin_interfaces__msg__Time acquisition_time;
  bool acquisition_time_is_set;
  /// A tree-based collection of transformations, which will include the transformations to each
  /// of the returned world objects in addition to transformations to the common frames ("vision",
  /// "body", "odom"). All transforms within the snapshot are at the acquisition time of the world
  /// object. Note that each object's frame names are defined within the properties submessage. For
  /// example, the apriltag frame name is defined in the AprilTagProperties message as
  /// "frame_name_fiducial"
  bosdyn_msgs__msg__FrameTreeSnapshot transforms_snapshot;
  bool transforms_snapshot_is_set;
  /// Duration of time after which the obstacle expires.  If this field is left blank, the object
  /// will expire according to a default time set in the world object service.  The duration is
  /// relative to the acquisition_time if filled out, or relative to the time the object is
  /// added to the world object service if acquisition_time is left blank.
  builtin_interfaces__msg__Duration object_lifetime;
  bool object_lifetime_is_set;
  /// The drawable properties describe geometric shapes associated with an object.
  bosdyn_msgs__msg__DrawableProperties__Sequence drawable_properties;
  /// The apriltag properties describe any fiducial identifying an object.
  bosdyn_msgs__msg__AprilTagProperties apriltag_properties;
  bool apriltag_properties_is_set;
  /// Property for a user no-go
  bosdyn_msgs__msg__NoGoRegionProperties nogo_region_properties;
  bool nogo_region_properties_is_set;
  /// The image properties describe any camera and image coordinates associated with an object.
  bosdyn_msgs__msg__ImageProperties image_properties;
  bool image_properties_is_set;
  /// Properties describing a dock
  bosdyn_msgs__msg__DockProperties dock_properties;
  bool dock_properties_is_set;
  /// A ray pointing at the object.  Useful in cases where position is unknown but direction is
  /// known.
  bosdyn_msgs__msg__RayProperties ray_properties;
  bool ray_properties_is_set;
  /// Bounding box in the world, oriented at the location provided in the transforms_snapshot.
  bosdyn_msgs__msg__BoundingBoxProperties bounding_box_properties;
  bool bounding_box_properties_is_set;
  /// The staircase properties provide information that helps the robot traverse or see a staircase.
  bosdyn_msgs__msg__StaircaseProperties staircase_properties;
  bool staircase_properties_is_set;
} bosdyn_msgs__msg__WorldObject;

// Struct for a sequence of bosdyn_msgs__msg__WorldObject.
typedef struct bosdyn_msgs__msg__WorldObject__Sequence
{
  bosdyn_msgs__msg__WorldObject * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__WorldObject__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__WORLD_OBJECT__STRUCT_H_
