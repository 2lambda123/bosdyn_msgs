// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/RouteFollowingParamsStartRouteBehavior.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__ROUTE_FOLLOWING_PARAMS_START_ROUTE_BEHAVIOR__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__ROUTE_FOLLOWING_PARAMS_START_ROUTE_BEHAVIOR__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'START_UNKNOWN'.
/**
  * The mode is unset.
 */
enum
{
  bosdyn_msgs__msg__RouteFollowingParamsStartRouteBehavior__START_UNKNOWN = 0
};

/// Constant 'START_GOTO_START'.
/**
  * The robot will find the shortest path to the start of the route, possibly using
  * edges that are not in the route. After going to the start, the robot will follow the
  * route.
 */
enum
{
  bosdyn_msgs__msg__RouteFollowingParamsStartRouteBehavior__START_GOTO_START = 1
};

/// Constant 'START_GOTO_ROUTE'.
/**
  * The robot will find the shortest path to any point on the route, and go to the point
  * that gives that shortest path. Then, the robot will follow the rest of the route from
  * that point.
  * If multiple points on the route are similarly close to the robot, the robot will
  * prefer the earliest on the route.
  * This is the default.
 */
enum
{
  bosdyn_msgs__msg__RouteFollowingParamsStartRouteBehavior__START_GOTO_ROUTE = 2
};

/// Constant 'START_FAIL_WHEN_NOT_ON_ROUTE'.
/**
  * The robot will fail the command with status STATUS_NOT_LOCALIZED_TO_ROUTE.
 */
enum
{
  bosdyn_msgs__msg__RouteFollowingParamsStartRouteBehavior__START_FAIL_WHEN_NOT_ON_ROUTE = 3
};

/// Struct defined in msg/RouteFollowingParamsStartRouteBehavior in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__RouteFollowingParamsStartRouteBehavior
{
  int8_t value;
} bosdyn_msgs__msg__RouteFollowingParamsStartRouteBehavior;

// Struct for a sequence of bosdyn_msgs__msg__RouteFollowingParamsStartRouteBehavior.
typedef struct bosdyn_msgs__msg__RouteFollowingParamsStartRouteBehavior__Sequence
{
  bosdyn_msgs__msg__RouteFollowingParamsStartRouteBehavior * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__RouteFollowingParamsStartRouteBehavior__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__ROUTE_FOLLOWING_PARAMS_START_ROUTE_BEHAVIOR__STRUCT_H_
