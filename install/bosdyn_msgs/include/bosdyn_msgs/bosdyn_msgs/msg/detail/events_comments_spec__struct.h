// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/EventsCommentsSpec.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__EVENTS_COMMENTS_SPEC__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__EVENTS_COMMENTS_SPEC__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'time_range'
#include "bosdyn_msgs/msg/detail/time_range__struct.h"
// Member 'events'
#include "bosdyn_msgs/msg/detail/event_spec__struct.h"

/// Struct defined in msg/EventsCommentsSpec in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__EventsCommentsSpec
{
  /// A request for Events and/or OperatorComments over a given time range.
  /// Timespan for data we want to query
  bosdyn_msgs__msg__TimeRange time_range;
  bool time_range_is_set;
  /// Return events which match the request.
  bosdyn_msgs__msg__EventSpec__Sequence events;
  /// Return operator comments which match the request.
  bool comments;
  /// Maximum number of events to return (limited to 1024).
  uint32_t max_events;
  /// Maximum number of comments to return (limited to 1024).
  uint32_t max_comments;
} bosdyn_msgs__msg__EventsCommentsSpec;

// Struct for a sequence of bosdyn_msgs__msg__EventsCommentsSpec.
typedef struct bosdyn_msgs__msg__EventsCommentsSpec__Sequence
{
  bosdyn_msgs__msg__EventsCommentsSpec * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__EventsCommentsSpec__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__EVENTS_COMMENTS_SPEC__STRUCT_H_
