// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/PlaybackModePeriodic.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__PLAYBACK_MODE_PERIODIC__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__PLAYBACK_MODE_PERIODIC__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'interval'
#include "builtin_interfaces/msg/detail/duration__struct.h"

/// Struct defined in msg/PlaybackModePeriodic in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__PlaybackModePeriodic
{
  /// The interval is the time that will elapse between the mission
  /// finishing and starting again. It is applied relative to the time at
  /// which the mission finishes. For example, if the user sets the
  /// interval to 2 hours, starts the mission at 12:00, and the mission
  /// takes one hour (finishes at 13:00), the next mission would start at
  /// 15:00, NOT 14:00.
  /// Next mission start time = current mission end time + interval
  builtin_interfaces__msg__Duration interval;
  bool interval_is_set;
  /// The number of times the mission should be played back. If set to 1,
  /// the interval no longer applies and the mission will be played back
  /// once. If set to two or more, the mission will run that number of
  /// times, with the amount of time between playbacks equal to the
  /// interval. If set to zero, the mission will run "forever".
  int32_t repetitions;
} bosdyn_msgs__msg__PlaybackModePeriodic;

// Struct for a sequence of bosdyn_msgs__msg__PlaybackModePeriodic.
typedef struct bosdyn_msgs__msg__PlaybackModePeriodic__Sequence
{
  bosdyn_msgs__msg__PlaybackModePeriodic * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__PlaybackModePeriodic__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__PLAYBACK_MODE_PERIODIC__STRUCT_H_
