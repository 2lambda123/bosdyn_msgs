// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/TakeLeaseResponse.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__TAKE_LEASE_RESPONSE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__TAKE_LEASE_RESPONSE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/response_header__struct.h"
// Member 'status'
#include "bosdyn_msgs/msg/detail/take_lease_response_status__struct.h"
// Member 'lease'
#include "bosdyn_msgs/msg/detail/lease__struct.h"
// Member 'lease_owner'
#include "bosdyn_msgs/msg/detail/lease_owner__struct.h"

/// Struct defined in msg/TakeLeaseResponse in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__TakeLeaseResponse
{
  /// The TakeLease response returns the lease for the desired resource if it could be obtained.
  /// In most cases if the resource is managed by the LeaseService, TakeLease
  /// will succeed. However, in the future policies may be introduced which will prevent
  /// TakeLease from succeeding and clients should be prepared to handle that
  /// case.
  /// If a client obtains a new lease, the client should initiate a
  /// RetainLease bidirectional streaming request immediately after completion
  /// of TakeLease.
  /// Common response header.
  bosdyn_msgs__msg__ResponseHeader header;
  bool header_is_set;
  /// Return status for the request.
  bosdyn_msgs__msg__TakeLeaseResponseStatus status;
  /// The lease for the resource. Only set if status field == STATUS_OK.
  bosdyn_msgs__msg__Lease lease;
  bool lease_is_set;
  /// The owner for the lease. Set if status field == STATUS_OK.
  bosdyn_msgs__msg__LeaseOwner lease_owner;
  bool lease_owner_is_set;
} bosdyn_msgs__msg__TakeLeaseResponse;

// Struct for a sequence of bosdyn_msgs__msg__TakeLeaseResponse.
typedef struct bosdyn_msgs__msg__TakeLeaseResponse__Sequence
{
  bosdyn_msgs__msg__TakeLeaseResponse * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__TakeLeaseResponse__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__TAKE_LEASE_RESPONSE__STRUCT_H_
