// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/LogAnnotationLogBlob.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__LOG_ANNOTATION_LOG_BLOB__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__LOG_ANNOTATION_LOG_BLOB__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'timestamp'
// Member 'timestamp_client'
#include "builtin_interfaces/msg/detail/time__struct.h"
// Member 'channel'
// Member 'type_id'
#include "rosidl_runtime_c/string.h"
// Member 'data'
#include "rosidl_runtime_c/primitives_sequence.h"

/// Struct defined in msg/LogAnnotationLogBlob in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__LogAnnotationLogBlob
{
  /// A unit of binary data to be entered in a log.
  /// DEPRECATED as of 2.1.0: Please use the DataBufferService instead of the LogAnnotationService.
  /// Will be removed in 4.0.
  /// Required timestamp of data in robot clock time.
  builtin_interfaces__msg__Time timestamp;
  bool timestamp_is_set;
  /// A general label for this blob.
  /// This is distinct from type_id, which identifies how the blob is to be parsed.
  rosidl_runtime_c__String channel;
  /// A description of the data's content and its encoding.
  /// This should be sufficient for deciding how to deserialize the data.
  /// For example, this could be the full name of a protobuf message type.
  rosidl_runtime_c__String type_id;
  /// Raw data to be included as the blob log.
  rosidl_runtime_c__octet__Sequence data;
  /// Optional timestamp of data in client clock time.
  builtin_interfaces__msg__Time timestamp_client;
  bool timestamp_client_is_set;
} bosdyn_msgs__msg__LogAnnotationLogBlob;

// Struct for a sequence of bosdyn_msgs__msg__LogAnnotationLogBlob.
typedef struct bosdyn_msgs__msg__LogAnnotationLogBlob__Sequence
{
  bosdyn_msgs__msg__LogAnnotationLogBlob * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__LogAnnotationLogBlob__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__LOG_ANNOTATION_LOG_BLOB__STRUCT_H_
