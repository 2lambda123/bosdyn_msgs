// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/FanPowerCommandFeedbackResponseStatus.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__FAN_POWER_COMMAND_FEEDBACK_RESPONSE_STATUS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__FAN_POWER_COMMAND_FEEDBACK_RESPONSE_STATUS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'STATUS_UNKNOWN'.
/**
  * Status is not specified.
 */
enum
{
  bosdyn_msgs__msg__FanPowerCommandFeedbackResponseStatus__STATUS_UNKNOWN = 0
};

/// Constant 'STATUS_COMPLETE'.
/**
  * Fan Power command succeeded for entire requested duration and is now done.
 */
enum
{
  bosdyn_msgs__msg__FanPowerCommandFeedbackResponseStatus__STATUS_COMPLETE = 1
};

/// Constant 'STATUS_RUNNING'.
/**
  * Fan command is still in effect due to requested duration but has succeeded so far
 */
enum
{
  bosdyn_msgs__msg__FanPowerCommandFeedbackResponseStatus__STATUS_RUNNING = 2
};

/// Constant 'STATUS_TEMPERATURE_STOP'.
/**
  * ERROR: Command stopped before finish due to temperature becoming too high
 */
enum
{
  bosdyn_msgs__msg__FanPowerCommandFeedbackResponseStatus__STATUS_TEMPERATURE_STOP = 3
};

/// Constant 'STATUS_OVERRIDDEN_BY_COMMAND'.
/**
  * ERROR: A newer Fan Power Request took over before the full duration of this request was
  * up.
 */
enum
{
  bosdyn_msgs__msg__FanPowerCommandFeedbackResponseStatus__STATUS_OVERRIDDEN_BY_COMMAND = 4
};

/// Struct defined in msg/FanPowerCommandFeedbackResponseStatus in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__FanPowerCommandFeedbackResponseStatus
{
  int8_t value;
} bosdyn_msgs__msg__FanPowerCommandFeedbackResponseStatus;

// Struct for a sequence of bosdyn_msgs__msg__FanPowerCommandFeedbackResponseStatus.
typedef struct bosdyn_msgs__msg__FanPowerCommandFeedbackResponseStatus__Sequence
{
  bosdyn_msgs__msg__FanPowerCommandFeedbackResponseStatus * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__FanPowerCommandFeedbackResponseStatus__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__FAN_POWER_COMMAND_FEEDBACK_RESPONSE_STATUS__STRUCT_H_
