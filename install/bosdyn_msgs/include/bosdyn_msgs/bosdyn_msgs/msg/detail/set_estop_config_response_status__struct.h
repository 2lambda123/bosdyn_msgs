// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/SetEstopConfigResponseStatus.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SET_ESTOP_CONFIG_RESPONSE_STATUS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SET_ESTOP_CONFIG_RESPONSE_STATUS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'STATUS_UNKNOWN'.
/**
  * An unknown / unexpected error occurred.
 */
enum
{
  bosdyn_msgs__msg__SetEstopConfigResponseStatus__STATUS_UNKNOWN = 0
};

/// Constant 'STATUS_SUCCESS'.
/**
  * Request succeeded.
 */
enum
{
  bosdyn_msgs__msg__SetEstopConfigResponseStatus__STATUS_SUCCESS = 1
};

/// Constant 'STATUS_INVALID_ID'.
/**
  * Tried to replace a EstopConfig, but provided bad ID.
 */
enum
{
  bosdyn_msgs__msg__SetEstopConfigResponseStatus__STATUS_INVALID_ID = 2
};

/// Constant 'STATUS_MOTORS_ON'.
/**
  * You cannot set a configuration while the motors are on.
 */
enum
{
  bosdyn_msgs__msg__SetEstopConfigResponseStatus__STATUS_MOTORS_ON = 3
};

/// Struct defined in msg/SetEstopConfigResponseStatus in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__SetEstopConfigResponseStatus
{
  int8_t value;
} bosdyn_msgs__msg__SetEstopConfigResponseStatus;

// Struct for a sequence of bosdyn_msgs__msg__SetEstopConfigResponseStatus.
typedef struct bosdyn_msgs__msg__SetEstopConfigResponseStatus__Sequence
{
  bosdyn_msgs__msg__SetEstopConfigResponseStatus * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__SetEstopConfigResponseStatus__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SET_ESTOP_CONFIG_RESPONSE_STATUS__STRUCT_H_
