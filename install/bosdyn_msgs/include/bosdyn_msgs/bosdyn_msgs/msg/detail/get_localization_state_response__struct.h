// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/GetLocalizationStateResponse.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__GET_LOCALIZATION_STATE_RESPONSE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__GET_LOCALIZATION_STATE_RESPONSE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/response_header__struct.h"
// Member 'localization'
#include "bosdyn_msgs/msg/detail/localization__struct.h"
// Member 'robot_kinematics'
#include "bosdyn_msgs/msg/detail/kinematic_state__struct.h"
// Member 'remote_cloud_status'
#include "bosdyn_msgs/msg/detail/remote_point_cloud_status__struct.h"
// Member 'live_data'
#include "bosdyn_msgs/msg/detail/waypoint_snapshot__struct.h"
// Member 'lost_detector_state'
#include "bosdyn_msgs/msg/detail/lost_detector_state__struct.h"

/// Struct defined in msg/GetLocalizationStateResponse in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__GetLocalizationStateResponse
{
  /// The GetLocalizationState response message returns the current localization and robot state, as well
  /// as any requested live data information.
  /// Common response header.
  bosdyn_msgs__msg__ResponseHeader header;
  bool header_is_set;
  /// Where the robot currently is. If a waypoint_id was specified in the request, this localization
  /// will be relative to that waypoint.
  bosdyn_msgs__msg__Localization localization;
  bool localization_is_set;
  /// Robot kinematic state at time of localization.
  bosdyn_msgs__msg__KinematicState robot_kinematics;
  bool robot_kinematics_is_set;
  /// Status of one or more remote point cloud services (such as velodyne).
  bosdyn_msgs__msg__RemotePointCloudStatus__Sequence remote_cloud_status;
  /// Contains live data at the time of localization, with elements only filled out
  /// if requested.
  bosdyn_msgs__msg__WaypointSnapshot live_data;
  bool live_data_is_set;
  /// If the robot drives around without a good localization for a while, eventually
  /// it becomes "lost."  I.E. it has a localization, but it no longer trusts
  /// that the localization it has is accurate.  Lost detector state is
  /// available through this message.
  bosdyn_msgs__msg__LostDetectorState lost_detector_state;
  bool lost_detector_state_is_set;
} bosdyn_msgs__msg__GetLocalizationStateResponse;

// Struct for a sequence of bosdyn_msgs__msg__GetLocalizationStateResponse.
typedef struct bosdyn_msgs__msg__GetLocalizationStateResponse__Sequence
{
  bosdyn_msgs__msg__GetLocalizationStateResponse * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__GetLocalizationStateResponse__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__GET_LOCALIZATION_STATE_RESPONSE__STRUCT_H_
