// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/GlobalParameters.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__GLOBAL_PARAMETERS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__GLOBAL_PARAMETERS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'group_name'
#include "rosidl_runtime_c/string.h"
// Member 'post_mission_callbacks'
#include "bosdyn_msgs/msg/detail/action_remote_grpc__struct.h"

/// Struct defined in msg/GlobalParameters in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__GlobalParameters
{
  /// These parameters apply to the entire autowalk.
  /// If the mission contains data acquisitions, this will be their group name.
  /// The actual group name used will include the specified group name, and additional
  /// qualifiers to ensure its unique for each start of this mission.
  rosidl_runtime_c__String group_name;
  /// If the mission contains SpotCAM PTZ actions, set this to true. At the start of the
  /// mission (or if the robot falls), the SpotCAM PTZ autofocus will be reset, thereby
  /// improving the quality of the subsequent PTZ captures.
  bool should_autofocus_ptz;
  /// The mission can automatically self-right the robot. Autonomous self-rights
  /// can damage the robot, its payloads, and its surroundings. If the user
  /// does not want the robot to self-right on its own, set this number to 0.
  /// If the user does want the robot to self-right itself, the user may set a
  /// maximum number of attempts so that the robot does not destroy itself by
  /// repeatedly falling and getting up and falling again.
  int32_t self_right_attempts;
  /// The callbacks that will be executed at the end of the mission. Functionality that
  /// is often found in post-mission callbacks includes uploading data to the cloud or
  /// sending an email. The callbacks will be executed serially (first in, first executed).
  bosdyn_msgs__msg__ActionRemoteGrpc__Sequence post_mission_callbacks;
  /// It can be useful to have the robot run a walk without collecting data.
  /// If this boolean is set to true, the compiled mission will still navigate to the
  /// target of each element, however it will not actually perform the associated
  /// action & action wrappers.
  bool skip_actions;
} bosdyn_msgs__msg__GlobalParameters;

// Struct for a sequence of bosdyn_msgs__msg__GlobalParameters.
typedef struct bosdyn_msgs__msg__GlobalParameters__Sequence
{
  bosdyn_msgs__msg__GlobalParameters * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__GlobalParameters__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__GLOBAL_PARAMETERS__STRUCT_H_
