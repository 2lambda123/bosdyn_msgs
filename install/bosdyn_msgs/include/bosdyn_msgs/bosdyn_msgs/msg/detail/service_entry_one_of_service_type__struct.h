// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/ServiceEntryOneOfServiceType.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SERVICE_ENTRY_ONE_OF_SERVICE_TYPE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SERVICE_ENTRY_ONE_OF_SERVICE_TYPE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'SERVICE_TYPE_NOT_SET'.
enum
{
  bosdyn_msgs__msg__ServiceEntryOneOfServiceType__SERVICE_TYPE_NOT_SET = 0
};

/// Constant 'SERVICE_TYPE_TYPE_SET'.
enum
{
  bosdyn_msgs__msg__ServiceEntryOneOfServiceType__SERVICE_TYPE_TYPE_SET = 1
};

// Include directives for member types
// Member 'type'
#include "rosidl_runtime_c/string.h"

/// Struct defined in msg/ServiceEntryOneOfServiceType in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__ServiceEntryOneOfServiceType
{
  /// ONEOF MESSAGE  Only one of the following can be set
  /// The type of this service. Usually identifies the underlying implementation.
  /// Does not have to be unique among all ServiceEntry objects.
  rosidl_runtime_c__String type;
  /// Only one of the above can be filled in.  Use the enum to choose which.
  int8_t service_type_choice;
} bosdyn_msgs__msg__ServiceEntryOneOfServiceType;

// Struct for a sequence of bosdyn_msgs__msg__ServiceEntryOneOfServiceType.
typedef struct bosdyn_msgs__msg__ServiceEntryOneOfServiceType__Sequence
{
  bosdyn_msgs__msg__ServiceEntryOneOfServiceType * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__ServiceEntryOneOfServiceType__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SERVICE_ENTRY_ONE_OF_SERVICE_TYPE__STRUCT_H_
