// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/JointLimits.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__JOINT_LIMITS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__JOINT_LIMITS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'label'
#include "rosidl_runtime_c/string.h"
// Member 'hy'
// Member 'hx'
#include "rosidl_runtime_c/primitives_sequence.h"

/// Struct defined in msg/JointLimits in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__JointLimits
{
  /// JointLimits contain hip joint angles where limb to payload collisions occur.
  /// Label identifying the respective limb to which these apply [fr,fl,hr,hl]
  rosidl_runtime_c__String label;
  /// (hy, hx) coordinates outlining the hip joint limits where collisions occur
  /// between robot hip and payload. Paired vectors must be of equal length.
  /// Angles are measured with actual contact. Appropriate margin will be provided
  /// in software. Radians.
  /// Left legs must have hx > 0. Right legs must have hx < 0.
  rosidl_runtime_c__float__Sequence hy;
  /// All legs must have hy > 1.3.
  rosidl_runtime_c__float__Sequence hx;
} bosdyn_msgs__msg__JointLimits;

// Struct for a sequence of bosdyn_msgs__msg__JointLimits.
typedef struct bosdyn_msgs__msg__JointLimits__Sequence
{
  bosdyn_msgs__msg__JointLimits * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__JointLimits__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__JOINT_LIMITS__STRUCT_H_
