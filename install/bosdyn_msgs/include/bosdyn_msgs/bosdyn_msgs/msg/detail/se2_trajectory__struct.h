// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/SE2Trajectory.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SE2_TRAJECTORY__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SE2_TRAJECTORY__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'points'
#include "bosdyn_msgs/msg/detail/se2_trajectory_point__struct.h"
// Member 'reference_time'
#include "builtin_interfaces/msg/detail/time__struct.h"
// Member 'interpolation'
#include "bosdyn_msgs/msg/detail/positional_interpolation__struct.h"

/// Struct defined in msg/SE2Trajectory in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__SE2Trajectory
{
  /// A 2D pose trajectory, which specified multiple points and the desired times the robot should
  /// reach these points.
  /// The points in trajectory
  bosdyn_msgs__msg__SE2TrajectoryPoint__Sequence points;
  /// All trajectories specify times relative to this reference time. The reference time should be
  /// in robot clock. If this field is not included, this time will be the receive time of the
  /// command.
  builtin_interfaces__msg__Time reference_time;
  bool reference_time_is_set;
  /// Parameters for how trajectories will be interpolated on robot.
  bosdyn_msgs__msg__PositionalInterpolation interpolation;
} bosdyn_msgs__msg__SE2Trajectory;

// Struct for a sequence of bosdyn_msgs__msg__SE2Trajectory.
typedef struct bosdyn_msgs__msg__SE2Trajectory__Sequence
{
  bosdyn_msgs__msg__SE2Trajectory * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__SE2Trajectory__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SE2_TRAJECTORY__STRUCT_H_
