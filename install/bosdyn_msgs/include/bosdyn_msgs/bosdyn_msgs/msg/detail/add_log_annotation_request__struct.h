// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/AddLogAnnotationRequest.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__ADD_LOG_ANNOTATION_REQUEST__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__ADD_LOG_ANNOTATION_REQUEST__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/request_header__struct.h"
// Member 'annotations'
#include "bosdyn_msgs/msg/detail/log_annotations__struct.h"

/// Struct defined in msg/AddLogAnnotationRequest in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__AddLogAnnotationRequest
{
  /// The AddLogAnnotation request sends the information that should be added into the log.
  /// DEPRECATED as of 2.1.0: Please use the DataBufferService instead of the LogAnnotationService.
  /// Will be removed in 4.0.
  /// Common request/response header.
  bosdyn_msgs__msg__RequestHeader header;
  bool header_is_set;
  /// The annotations to be aded into the log (can be text messages, blobs or robot operator
  /// messages).
  bosdyn_msgs__msg__LogAnnotations annotations;
  bool annotations_is_set;
} bosdyn_msgs__msg__AddLogAnnotationRequest;

// Struct for a sequence of bosdyn_msgs__msg__AddLogAnnotationRequest.
typedef struct bosdyn_msgs__msg__AddLogAnnotationRequest__Sequence
{
  bosdyn_msgs__msg__AddLogAnnotationRequest * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__AddLogAnnotationRequest__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__ADD_LOG_ANNOTATION_REQUEST__STRUCT_H_
