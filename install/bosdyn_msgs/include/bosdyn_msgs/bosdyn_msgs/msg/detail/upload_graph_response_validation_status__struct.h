// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/UploadGraphResponseValidationStatus.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__UPLOAD_GRAPH_RESPONSE_VALIDATION_STATUS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__UPLOAD_GRAPH_RESPONSE_VALIDATION_STATUS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'missing_waypoint_ids_in_edges'
// Member 'missing_waypoint_ids_in_anchors'
// Member 'waypoint_anchors_invalid_transform'
// Member 'object_anchors_invalid_transform'
// Member 'duplicate_waypoint_ids'
// Member 'duplicate_waypoint_anchor_ids'
// Member 'duplicate_object_anchor_ids'
// Member 'invalid_waypoint_ids_self_edges'
#include "rosidl_runtime_c/string.h"
// Member 'edge_ids_invalid_transform'
// Member 'duplicate_edge_ids'
#include "bosdyn_msgs/msg/detail/edge_id__struct.h"

/// Struct defined in msg/UploadGraphResponseValidationStatus in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__UploadGraphResponseValidationStatus
{
  /// One or more edges references a waypoint that doesn't exist. There are the waypoint IDs
  /// referenced by edges that do not exist. This is an error. Fix the graph and re-upload.
  rosidl_runtime_c__String__Sequence missing_waypoint_ids_in_edges;
  /// The anchoring uploaded referenced waypoint IDs that do not exist. These
  /// are the missing IDs. This is a warning. The anchorings will be ignored.
  rosidl_runtime_c__String__Sequence missing_waypoint_ids_in_anchors;
  /// One or more edges had an invalid from_tform_to transform. These are the edge IDs uploaded
  /// that have an invalid transform. Valid transforms have quaternion rotations that are normalized.
  /// This is a warning. Edges with invalid transforms will be fixed on upload.
  bosdyn_msgs__msg__EdgeId__Sequence edge_ids_invalid_transform;
  /// One or more waypoint anchors in the anchoring have an invalid transform. These are the waypoint IDs
  /// that have an invalid transform. Valid transforms have quaternion rotations that are normalized.
  /// This is a warning. Anchors with invalid transforms will be fixed on upload.
  rosidl_runtime_c__String__Sequence waypoint_anchors_invalid_transform;
  /// One or more of the object achors in the anchoring have an invalid transform. These are the object IDs
  /// that have an invalid transform. Valid transforms have quaternion rotations that are normalized.
  /// This is a warning. Anchors with invalid transforms will be fixed on upload.
  rosidl_runtime_c__String__Sequence object_anchors_invalid_transform;
  /// The Graph in the UploadGraph request contained more than one waypoint with the same ID. These are the
  /// waypoint IDs which occur in the UploadGraph request more than once. Note that IDs are duplicated in this list
  /// the same number of times they are duplicated in the request.
  /// This is an error. Fix the graph and re-upload.
  rosidl_runtime_c__String__Sequence duplicate_waypoint_ids;
  /// The anchoring contains one or more anchor IDs that are duplicated.  Note that IDs are duplicated in this list
  /// the same number of times they are duplicated in the request. This is a warning. Only the first anchor will be used.
  rosidl_runtime_c__String__Sequence duplicate_waypoint_anchor_ids;
  /// The anchoring contains one or more object anchor IDs that are duplicated.  Note that IDs are duplicated in this list
  /// the same number of times they are duplicated in the request.  This is a warning. Only the first anchor will be used.
  rosidl_runtime_c__String__Sequence duplicate_object_anchor_ids;
  /// The Graph in the UploadGraph request contained more than one edge with the equivalent ID. These are the edge IDs
  /// which occur in the UploadGraph request more than once. Note that IDs are duplicated in this list the same number
  /// of times that they are duplicated in the request. Note that edges are *not* directional, and it is impossible
  /// to have both a->b *and* b->a in the same map. This is an error. Fix the graph and re-upload.
  bosdyn_msgs__msg__EdgeId__Sequence duplicate_edge_ids;
  /// Edges are not allowed to have the same "from" and "to" waypoint. These are the waypoint IDs which have self
  /// edges in the UploadGraph request. This is an error. Fix the graph and re-upload.
  rosidl_runtime_c__String__Sequence invalid_waypoint_ids_self_edges;
  /// At least one waypoint in the graph has an empty ID. This is an error. Fix the graph and re-upload.
  bool has_empty_waypoint_ids;
  /// At least one edge in the graph references a waypoint with an empty ID.
  /// This is an error. Fix the graph and re-upload.
  bool has_empty_edge_ids;
  /// At least one waypoint anchor in the anchoring has an empty ID. This is a warning. Empty anchors will be ignored.
  bool has_empty_waypoint_anchor_ids;
  /// At least one object anchor in the anchoring has an empty ID. This is a warning. Empty anchors will be ignored.
  bool has_empty_object_anchor_ids;
} bosdyn_msgs__msg__UploadGraphResponseValidationStatus;

// Struct for a sequence of bosdyn_msgs__msg__UploadGraphResponseValidationStatus.
typedef struct bosdyn_msgs__msg__UploadGraphResponseValidationStatus__Sequence
{
  bosdyn_msgs__msg__UploadGraphResponseValidationStatus * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__UploadGraphResponseValidationStatus__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__UPLOAD_GRAPH_RESPONSE_VALIDATION_STATUS__STRUCT_H_
