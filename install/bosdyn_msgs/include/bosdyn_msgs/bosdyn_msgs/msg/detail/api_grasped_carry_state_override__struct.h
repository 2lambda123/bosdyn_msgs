// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/ApiGraspedCarryStateOverride.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__API_GRASPED_CARRY_STATE_OVERRIDE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__API_GRASPED_CARRY_STATE_OVERRIDE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'override_request'
#include "bosdyn_msgs/msg/detail/manipulator_state_carry_state__struct.h"

/// Struct defined in msg/ApiGraspedCarryStateOverride in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__ApiGraspedCarryStateOverride
{
  /// Use this message to assert properties about the grasped item.
  /// By default, the robot will assume all grasped items are not carriable.
  bosdyn_msgs__msg__ManipulatorStateCarryState override_request;
} bosdyn_msgs__msg__ApiGraspedCarryStateOverride;

// Struct for a sequence of bosdyn_msgs__msg__ApiGraspedCarryStateOverride.
typedef struct bosdyn_msgs__msg__ApiGraspedCarryStateOverride__Sequence
{
  bosdyn_msgs__msg__ApiGraspedCarryStateOverride * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__ApiGraspedCarryStateOverride__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__API_GRASPED_CARRY_STATE_OVERRIDE__STRUCT_H_
