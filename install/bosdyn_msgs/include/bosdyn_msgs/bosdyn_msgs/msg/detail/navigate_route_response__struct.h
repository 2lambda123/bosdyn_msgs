// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/NavigateRouteResponse.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__NAVIGATE_ROUTE_RESPONSE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__NAVIGATE_ROUTE_RESPONSE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/response_header__struct.h"
// Member 'lease_use_results'
#include "bosdyn_msgs/msg/detail/lease_use_result__struct.h"
// Member 'status'
#include "bosdyn_msgs/msg/detail/navigate_route_response_status__struct.h"
// Member 'impaired_state'
#include "bosdyn_msgs/msg/detail/robot_impaired_state__struct.h"
// Member 'error_waypoint_ids'
#include "rosidl_runtime_c/string.h"
// Member 'error_edge_ids'
#include "bosdyn_msgs/msg/detail/edge_id__struct.h"
// Member 'area_callback_error'
#include "bosdyn_msgs/msg/detail/area_callback_service_error__struct.h"

/// Struct defined in msg/NavigateRouteResponse in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__NavigateRouteResponse
{
  /// Response to a NavigateRouteRequest. This is returned immediately after the request is processed. A command_id
  /// is provided to specify the ID that the user may use to poll the system for feedback on the NavigateRoute command.
  /// Common response header.
  bosdyn_msgs__msg__ResponseHeader header;
  bool header_is_set;
  /// Details about how the lease was used.
  bosdyn_msgs__msg__LeaseUseResult__Sequence lease_use_results;
  /// Return status for the request.
  bosdyn_msgs__msg__NavigateRouteResponseStatus status;
  /// If the status is ROBOT_IMPAIRED, this is why the robot is impaired.
  bosdyn_msgs__msg__RobotImpairedState impaired_state;
  bool impaired_state_is_set;
  /// Unique identifier for the command, If 0, command was not accepted.
  uint32_t command_id;
  /// On a relevant error status code, these fields contain the waypoint/edge IDs that caused the error.
  rosidl_runtime_c__String__Sequence error_waypoint_ids;
  /// On a relevant error status code (STATUS_INVALID_EDGE), this is populated with the edge ID's that cased the error.
  bosdyn_msgs__msg__EdgeId__Sequence error_edge_ids;
  /// Errors about Area Callbacks in the map.
  bosdyn_msgs__msg__AreaCallbackServiceError area_callback_error;
  bool area_callback_error_is_set;
} bosdyn_msgs__msg__NavigateRouteResponse;

// Struct for a sequence of bosdyn_msgs__msg__NavigateRouteResponse.
typedef struct bosdyn_msgs__msg__NavigateRouteResponse__Sequence
{
  bosdyn_msgs__msg__NavigateRouteResponse * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__NavigateRouteResponse__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__NAVIGATE_ROUTE_RESPONSE__STRUCT_H_
