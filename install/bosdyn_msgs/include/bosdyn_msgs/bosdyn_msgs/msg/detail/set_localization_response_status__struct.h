// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/SetLocalizationResponseStatus.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SET_LOCALIZATION_RESPONSE_STATUS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SET_LOCALIZATION_RESPONSE_STATUS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'STATUS_UNKNOWN'.
/**
  * The status is unknown/unset.
 */
enum
{
  bosdyn_msgs__msg__SetLocalizationResponseStatus__STATUS_UNKNOWN = 0
};

/// Constant 'STATUS_OK'.
/**
  * Localization success.
 */
enum
{
  bosdyn_msgs__msg__SetLocalizationResponseStatus__STATUS_OK = 1
};

/// Constant 'STATUS_ROBOT_IMPAIRED'.
/**
  * Robot is experiencing a condition that prevents localization.
 */
enum
{
  bosdyn_msgs__msg__SetLocalizationResponseStatus__STATUS_ROBOT_IMPAIRED = 2
};

/// Constant 'STATUS_UNKNOWN_WAYPOINT'.
/**
  * The given waypoint is unknown by the system.
  * This could be due to a client error, or because the graph was changed out from under the
  * client.
 */
enum
{
  bosdyn_msgs__msg__SetLocalizationResponseStatus__STATUS_UNKNOWN_WAYPOINT = 3
};

/// Constant 'STATUS_ABORTED'.
/**
  * Localization was aborted, likely because of a new request.
 */
enum
{
  bosdyn_msgs__msg__SetLocalizationResponseStatus__STATUS_ABORTED = 4
};

/// Constant 'STATUS_FAILED'.
/**
  * Failed to localize for some other reason; see the error_report for details.
  * This is often because the initial guess was incorrect.
 */
enum
{
  bosdyn_msgs__msg__SetLocalizationResponseStatus__STATUS_FAILED = 5
};

/// Constant 'STATUS_FIDUCIAL_TOO_FAR_AWAY'.
/**
  * Failed to localize because the fiducial requested by 'use_fiducial_id' was too far away from
  * the robot.
 */
enum
{
  bosdyn_msgs__msg__SetLocalizationResponseStatus__STATUS_FIDUCIAL_TOO_FAR_AWAY = 6
};

/// Constant 'STATUS_FIDUCIAL_TOO_OLD'.
/**
  * Failed to localize because the fiducial requested by 'use_fiducial_id' had a detection time that was too
  * far in the past.
 */
enum
{
  bosdyn_msgs__msg__SetLocalizationResponseStatus__STATUS_FIDUCIAL_TOO_OLD = 7
};

/// Constant 'STATUS_NO_MATCHING_FIDUCIAL'.
/**
  * Failed to localize because the fiducial requested by 'use_fiducial_id' did not exist in the map at
  * the required location.
 */
enum
{
  bosdyn_msgs__msg__SetLocalizationResponseStatus__STATUS_NO_MATCHING_FIDUCIAL = 8
};

/// Constant 'STATUS_FIDUCIAL_POSE_UNCERTAIN'.
/**
  * Failed to localize because the fiducial requested by 'use_fiducial_id' had an unreliable
  * pose estimation, either in the current detection of that fiducial, or in detections that
  * were saved in the map. Note that when using FIDUCIAL_INIT_SPECIFIC, fiducial detections at
  * the target waypoint will be used so long as they are not uncertain -- otherwise, detections
  * at adjacent waypoints may be used. If there exists no uncertain detection of the fiducial
  * near the target waypoint in the map, the service returns this status.
 */
enum
{
  bosdyn_msgs__msg__SetLocalizationResponseStatus__STATUS_FIDUCIAL_POSE_UNCERTAIN = 9
};

/// Constant 'STATUS_INCOMPATIBLE_SENSORS'.
/**
  * The localization could not be set, because the map was recorded using a different sensor
  * setup than the robot currently has onboard. See SensorStatus for more details.
 */
enum
{
  bosdyn_msgs__msg__SetLocalizationResponseStatus__STATUS_INCOMPATIBLE_SENSORS = 10
};

/// Constant 'STATUS_VISUAL_ALIGNMENT_FAILED'.
/**
  * Visual feature based alignment failed or the pose solution was considered unreliable.
 */
enum
{
  bosdyn_msgs__msg__SetLocalizationResponseStatus__STATUS_VISUAL_ALIGNMENT_FAILED = 11
};

/// Struct defined in msg/SetLocalizationResponseStatus in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__SetLocalizationResponseStatus
{
  int8_t value;
} bosdyn_msgs__msg__SetLocalizationResponseStatus;

// Struct for a sequence of bosdyn_msgs__msg__SetLocalizationResponseStatus.
typedef struct bosdyn_msgs__msg__SetLocalizationResponseStatus__Sequence
{
  bosdyn_msgs__msg__SetLocalizationResponseStatus * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__SetLocalizationResponseStatus__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SET_LOCALIZATION_RESPONSE_STATUS__STRUCT_H_
