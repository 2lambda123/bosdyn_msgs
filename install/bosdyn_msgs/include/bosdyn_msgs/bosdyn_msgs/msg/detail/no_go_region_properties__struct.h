// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/NoGoRegionProperties.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__NO_GO_REGION_PROPERTIES__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__NO_GO_REGION_PROPERTIES__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'region'
#include "bosdyn_msgs/msg/detail/no_go_region_properties_one_of_region__struct.h"

/// Struct defined in msg/NoGoRegionProperties in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__NoGoRegionProperties
{
  /// A box no-go region
  /// Define the geometry of the region.  Note that currently, these regions may only be defined in
  /// the Vision world frame, or Odometry world frame.
  bosdyn_msgs__msg__NoGoRegionPropertiesOneOfRegion region;
  /// Nominally, setting a NoGoRegion will create both a body obstacle of the specified size, as
  /// well as foot obstacle with a slightly inflated size by about the width of the robot's foot,
  /// to prevent the robot from stepping right on the edge of the body obstacle.  If this is not
  /// the desired behavior, change the parameters below:
  /// If set true, will NOT create a foot obstacle for this region.
  bool disable_foot_obstacle_generation;
  /// If set true, will NOT create a body obstacle for this region.
  bool disable_body_obstacle_generation;
  /// If set true, and a foot obstacle is being generated, will make the foot obstacle the exact
  /// size specified in the "region" field and NOT inflate by approx. robot foot width.
  bool disable_foot_obstacle_inflation;
} bosdyn_msgs__msg__NoGoRegionProperties;

// Struct for a sequence of bosdyn_msgs__msg__NoGoRegionProperties.
typedef struct bosdyn_msgs__msg__NoGoRegionProperties__Sequence
{
  bosdyn_msgs__msg__NoGoRegionProperties * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__NoGoRegionProperties__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__NO_GO_REGION_PROPERTIES__STRUCT_H_
