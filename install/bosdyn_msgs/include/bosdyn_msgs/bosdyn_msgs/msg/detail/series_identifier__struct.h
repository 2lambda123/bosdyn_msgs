// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/SeriesIdentifier.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SERIES_IDENTIFIER__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SERIES_IDENTIFIER__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'series_type'
#include "rosidl_runtime_c/string.h"
// Member 'spec'
#include "bosdyn_msgs/msg/detail/key_string_value_string__struct.h"

/// Struct defined in msg/SeriesIdentifier in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__SeriesIdentifier
{
  /// A key or description for selecting a message series.
  /// Because there may be multiple ways of describing a message series, we identify
  ///  them by a unique mapping of {key -> value}.
  /// A series_type corresponds to a set of keys which are expected in the mapping.
  /// A 'bosdyn:grpc:requests' series_type, containing GRPC robot-id request messages, might
  ///  thus be specified as:
  ///   {'service': 'robot_id', 'message': 'bosdyn.api.RobotIdRequest'}
  /// A 'bosdyn:logtick' series_type, containing a signals data variable from LogTick
  ///   annotations might be specified as:
  ///   {'varname': 'tablet.wifi.rssi', 'schema': 'tablet-comms', 'client': 'bd-tablet'}
  /// This is the kind of spec, which should correspond to a set of keys which are expected
  ///  in the spec.
  rosidl_runtime_c__String series_type;
  /// This is the "key" for naming the series within the file.
  /// A key->value description which should be unique for this series within the file
  ///  with this series_type.
  bosdyn_msgs__msg__KeyStringValueString__Sequence spec;
} bosdyn_msgs__msg__SeriesIdentifier;

// Struct for a sequence of bosdyn_msgs__msg__SeriesIdentifier.
typedef struct bosdyn_msgs__msg__SeriesIdentifier__Sequence
{
  bosdyn_msgs__msg__SeriesIdentifier * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__SeriesIdentifier__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SERIES_IDENTIFIER__STRUCT_H_
