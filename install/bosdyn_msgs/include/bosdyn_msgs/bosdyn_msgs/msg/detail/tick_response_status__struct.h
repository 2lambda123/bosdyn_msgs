// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/TickResponseStatus.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__TICK_RESPONSE_STATUS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__TICK_RESPONSE_STATUS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'STATUS_UNKNOWN'.
/**
  * Invalid; do not use.
 */
enum
{
  bosdyn_msgs__msg__TickResponseStatus__STATUS_UNKNOWN = 0
};

/// Constant 'STATUS_FAILURE'.
/**
  * Node completed but failed.
 */
enum
{
  bosdyn_msgs__msg__TickResponseStatus__STATUS_FAILURE = 1
};

/// Constant 'STATUS_RUNNING'.
/**
  * Node is processing and may finish in a future tick.
 */
enum
{
  bosdyn_msgs__msg__TickResponseStatus__STATUS_RUNNING = 2
};

/// Constant 'STATUS_SUCCESS'.
/**
  * Node completed and succeeded.
 */
enum
{
  bosdyn_msgs__msg__TickResponseStatus__STATUS_SUCCESS = 3
};

/// Constant 'STATUS_INVALID_SESSION_ID'.
/**
  * The request provided an invalid session ID.
 */
enum
{
  bosdyn_msgs__msg__TickResponseStatus__STATUS_INVALID_SESSION_ID = 4
};

/// Constant 'STATUS_MISSING_LEASES'.
/**
  * The request was missing required leases.
 */
enum
{
  bosdyn_msgs__msg__TickResponseStatus__STATUS_MISSING_LEASES = 5
};

/// Constant 'STATUS_MISSING_INPUTS'.
/**
  * The request was missing required inputs.
 */
enum
{
  bosdyn_msgs__msg__TickResponseStatus__STATUS_MISSING_INPUTS = 6
};

/// Constant 'STATUS_CUSTOM_PARAMS_ERROR'.
/**
  * There was another error with the input parameters.
  * See the params_error field for details.
 */
enum
{
  bosdyn_msgs__msg__TickResponseStatus__STATUS_CUSTOM_PARAMS_ERROR = 7
};

/// Struct defined in msg/TickResponseStatus in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__TickResponseStatus
{
  int8_t value;
} bosdyn_msgs__msg__TickResponseStatus;

// Struct for a sequence of bosdyn_msgs__msg__TickResponseStatus.
typedef struct bosdyn_msgs__msg__TickResponseStatus__Sequence
{
  bosdyn_msgs__msg__TickResponseStatus * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__TickResponseStatus__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__TICK_RESPONSE_STATUS__STRUCT_H_
