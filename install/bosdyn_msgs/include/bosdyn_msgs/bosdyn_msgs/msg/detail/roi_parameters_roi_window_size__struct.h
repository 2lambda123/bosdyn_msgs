// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/RoiParametersRoiWindowSize.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__ROI_PARAMETERS_ROI_WINDOW_SIZE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__ROI_PARAMETERS_ROI_WINDOW_SIZE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'ROI_WINDOW_SIZE_UNKNOWN'.
/**
  * ROI window size, 1 is the smallest, 8 is the largest.
 */
enum
{
  bosdyn_msgs__msg__RoiParametersRoiWindowSize__ROI_WINDOW_SIZE_UNKNOWN = 0
};

/// Constant 'ROI_WINDOW_SIZE_1'.
enum
{
  bosdyn_msgs__msg__RoiParametersRoiWindowSize__ROI_WINDOW_SIZE_1 = 1
};

/// Constant 'ROI_WINDOW_SIZE_2'.
enum
{
  bosdyn_msgs__msg__RoiParametersRoiWindowSize__ROI_WINDOW_SIZE_2 = 2
};

/// Constant 'ROI_WINDOW_SIZE_3'.
enum
{
  bosdyn_msgs__msg__RoiParametersRoiWindowSize__ROI_WINDOW_SIZE_3 = 3
};

/// Constant 'ROI_WINDOW_SIZE_4'.
enum
{
  bosdyn_msgs__msg__RoiParametersRoiWindowSize__ROI_WINDOW_SIZE_4 = 4
};

/// Constant 'ROI_WINDOW_SIZE_5'.
enum
{
  bosdyn_msgs__msg__RoiParametersRoiWindowSize__ROI_WINDOW_SIZE_5 = 5
};

/// Constant 'ROI_WINDOW_SIZE_6'.
enum
{
  bosdyn_msgs__msg__RoiParametersRoiWindowSize__ROI_WINDOW_SIZE_6 = 6
};

/// Constant 'ROI_WINDOW_SIZE_7'.
enum
{
  bosdyn_msgs__msg__RoiParametersRoiWindowSize__ROI_WINDOW_SIZE_7 = 7
};

/// Constant 'ROI_WINDOW_SIZE_8'.
enum
{
  bosdyn_msgs__msg__RoiParametersRoiWindowSize__ROI_WINDOW_SIZE_8 = 8
};

/// Struct defined in msg/RoiParametersRoiWindowSize in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__RoiParametersRoiWindowSize
{
  int8_t value;
} bosdyn_msgs__msg__RoiParametersRoiWindowSize;

// Struct for a sequence of bosdyn_msgs__msg__RoiParametersRoiWindowSize.
typedef struct bosdyn_msgs__msg__RoiParametersRoiWindowSize__Sequence
{
  bosdyn_msgs__msg__RoiParametersRoiWindowSize * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__RoiParametersRoiWindowSize__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__ROI_PARAMETERS_ROI_WINDOW_SIZE__STRUCT_H_
