// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/IrColorMap.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__IR_COLOR_MAP__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__IR_COLOR_MAP__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'colormap'
#include "bosdyn_msgs/msg/detail/ir_color_map_color_map__struct.h"
// Member 'scale'
#include "bosdyn_msgs/msg/detail/ir_color_map_scaling_pair__struct.h"

/// Struct defined in msg/IrColorMap in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__IrColorMap
{
  /// the colormap is a mapping of radiometric data to color, to make the images easier for people to
  /// look at in real time.
  bosdyn_msgs__msg__IrColorMapColorMap colormap;
  bosdyn_msgs__msg__IrColorMapScalingPair scale;
  bool scale_is_set;
  /// if auto_scale is true, then the min and max values are derived from the data itself, and the
  /// settings above are ignored
  bool auto_scale;
  bool auto_scale_is_set;
} bosdyn_msgs__msg__IrColorMap;

// Struct for a sequence of bosdyn_msgs__msg__IrColorMap.
typedef struct bosdyn_msgs__msg__IrColorMap__Sequence
{
  bosdyn_msgs__msg__IrColorMap * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__IrColorMap__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__IR_COLOR_MAP__STRUCT_H_
