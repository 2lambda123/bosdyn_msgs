// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/AreaOneOfGeometry.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__AREA_ONE_OF_GEOMETRY__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__AREA_ONE_OF_GEOMETRY__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'GEOMETRY_NOT_SET'.
enum
{
  bosdyn_msgs__msg__AreaOneOfGeometry__GEOMETRY_NOT_SET = 0
};

/// Constant 'GEOMETRY_POLYGON_SET'.
enum
{
  bosdyn_msgs__msg__AreaOneOfGeometry__GEOMETRY_POLYGON_SET = 1
};

/// Constant 'GEOMETRY_CIRCLE_SET'.
enum
{
  bosdyn_msgs__msg__AreaOneOfGeometry__GEOMETRY_CIRCLE_SET = 2
};

// Include directives for member types
// Member 'polygon'
#include "bosdyn_msgs/msg/detail/polygon__struct.h"
// Member 'circle'
#include "bosdyn_msgs/msg/detail/circle__struct.h"

/// Struct defined in msg/AreaOneOfGeometry in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__AreaOneOfGeometry
{
  /// ONEOF MESSAGE  Only one of the following can be set
  bosdyn_msgs__msg__Polygon polygon;
  bosdyn_msgs__msg__Circle circle;
  /// Only one of the above can be filled in.  Use the enum to choose which.
  int8_t geometry_choice;
} bosdyn_msgs__msg__AreaOneOfGeometry;

// Struct for a sequence of bosdyn_msgs__msg__AreaOneOfGeometry.
typedef struct bosdyn_msgs__msg__AreaOneOfGeometry__Sequence
{
  bosdyn_msgs__msg__AreaOneOfGeometry * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__AreaOneOfGeometry__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__AREA_ONE_OF_GEOMETRY__STRUCT_H_
