// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/LocalGridExtent.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__LOCAL_GRID_EXTENT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__LOCAL_GRID_EXTENT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Struct defined in msg/LocalGridExtent in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__LocalGridExtent
{
  /// Information about the dimensions of the local grid, including the number of grid cells and
  /// the size of each cell.
  /// Size of each side of the individual cells in the local grid (in meters).
  /// The area of a grid cell will be (cell_size x cell_size).
  double cell_size;
  /// Number of cells along x extent of local grid (number of columns in local grid/ the local
  /// grid width). Note, that the (num_cells_x)x(num_cells_y) represents the total number of grid
  /// cells in the local grid.
  int32_t num_cells_x;
  /// Number of cells along y extent of local grid (number of rows in local grid).
  /// Note, that the (num_cells_x)x(num_cells_y) represents the totla number of grid
  /// cells in the local grid.
  int32_t num_cells_y;
} bosdyn_msgs__msg__LocalGridExtent;

// Struct for a sequence of bosdyn_msgs__msg__LocalGridExtent.
typedef struct bosdyn_msgs__msg__LocalGridExtent__Sequence
{
  bosdyn_msgs__msg__LocalGridExtent * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__LocalGridExtent__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__LOCAL_GRID_EXTENT__STRUCT_H_
