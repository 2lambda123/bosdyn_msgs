// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/MobilityParams.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__MOBILITY_PARAMS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__MOBILITY_PARAMS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'vel_limit'
#include "bosdyn_msgs/msg/detail/se2_velocity_limit__struct.h"
// Member 'body_control'
#include "bosdyn_msgs/msg/detail/body_control_params__struct.h"
// Member 'locomotion_hint'
#include "bosdyn_msgs/msg/detail/locomotion_hint__struct.h"
// Member 'stairs_mode'
#include "bosdyn_msgs/msg/detail/mobility_params_stairs_mode__struct.h"
// Member 'obstacle_params'
#include "bosdyn_msgs/msg/detail/obstacle_params__struct.h"
// Member 'swing_height'
#include "bosdyn_msgs/msg/detail/swing_height__struct.h"
// Member 'terrain_params'
#include "bosdyn_msgs/msg/detail/terrain_params__struct.h"
// Member 'external_force_params'
#include "bosdyn_msgs/msg/detail/body_external_force_params__struct.h"

/// Struct defined in msg/MobilityParams in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__MobilityParams
{
  /// Params common across spot movement and mobility.
  /// Max allowable velocity at any point in trajectory.
  bosdyn_msgs__msg__SE2VelocityLimit vel_limit;
  bool vel_limit_is_set;
  /// Parameters for controlling Spot's body during motion.
  bosdyn_msgs__msg__BodyControlParams body_control;
  bool body_control_is_set;
  /// Desired gait during locomotion
  bosdyn_msgs__msg__LocomotionHint locomotion_hint;
  /// DEPRECATED as of 3.2.0: The boolean field has been replaced by the field stairs_mode.
  /// The following field will be deprecated and moved to 'reserved' in a future release.
  /// Stairs are only supported in trot gaits. Enabling stairs mode will override some user
  /// defaults in order to optimize stair behavior.
  /// The selected option for stairs mode.
  /// If unset, will use the deprecated stair_hint instead.
  /// If falling back on stair_hint, false will map to STAIRS_MODE_OFF.
  /// This will be changed to STAIRS_MODE_AUTO in a future release.
  bosdyn_msgs__msg__MobilityParamsStairsMode stairs_mode;
  /// Allow the robot to move with degraded perception when there are perception faults.
  bool allow_degraded_perception;
  /// Control of obstacle avoidance.
  bosdyn_msgs__msg__ObstacleParams obstacle_params;
  bool obstacle_params_is_set;
  /// Swing height setting
  bosdyn_msgs__msg__SwingHeight swing_height;
  /// Ground terrain parameters.
  bosdyn_msgs__msg__TerrainParams terrain_params;
  bool terrain_params_is_set;
  /// Prevent the robot from using StairTracker even if in stairs mode.
  bool disallow_stair_tracker;
  /// Prevent the robot from automatically walking off a staircase in the case of an error
  /// (ex: e-stop settle_then_cut, critical battery level)
  bool disable_stair_error_auto_descent;
  /// Robot Body External Force parameters
  bosdyn_msgs__msg__BodyExternalForceParams external_force_params;
  bool external_force_params_is_set;
  /// Prevent the robot from pitching to get a better look at rearward terrain except in stairs
  /// mode.
  bool disallow_non_stairs_pitch_limiting;
  /// Disable the secondary nearmap-based cliff avoidance that runs while on stairs.
  bool disable_nearmap_cliff_avoidance;
} bosdyn_msgs__msg__MobilityParams;

// Struct for a sequence of bosdyn_msgs__msg__MobilityParams.
typedef struct bosdyn_msgs__msg__MobilityParams__Sequence
{
  bosdyn_msgs__msg__MobilityParams * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__MobilityParams__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__MOBILITY_PARAMS__STRUCT_H_
