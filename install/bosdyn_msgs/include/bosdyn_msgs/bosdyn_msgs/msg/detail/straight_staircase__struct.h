// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/StraightStaircase.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__STRAIGHT_STAIRCASE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__STRAIGHT_STAIRCASE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'location'
#include "bosdyn_msgs/msg/detail/straight_staircase_one_of_location__struct.h"
// Member 'stairs'
#include "bosdyn_msgs/msg/detail/straight_staircase_stair__struct.h"
// Member 'bottom_landing'
// Member 'top_landing'
#include "bosdyn_msgs/msg/detail/straight_staircase_landing__struct.h"

/// Struct defined in msg/StraightStaircase in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__StraightStaircase
{
  /// DEPRECATED as of 3.3.  Please use StaircaseWithLandings.
  /// The staircase origin is the bottom-center of the first rise.
  bosdyn_msgs__msg__StraightStaircaseOneOfLocation location;
  /// A single stair from a staircase.
  /// Straight staircases have two landings, one at the top and one at the bottom.
  /// Landings are areas of free space before and after the stairs, and are represented
  /// as oriented bounding boxes.
  /// Each stair should be rise followed by run. The last stair will have zero run.
  bosdyn_msgs__msg__StraightStaircaseStair__Sequence stairs;
  /// The lowermost landing of the stairs. The robot will try to
  /// align itself to the stairs while on this landing.
  bosdyn_msgs__msg__StraightStaircaseLanding bottom_landing;
  bool bottom_landing_is_set;
  /// The uppermost landing of the stairs.
  bosdyn_msgs__msg__StraightStaircaseLanding top_landing;
  bool top_landing_is_set;
} bosdyn_msgs__msg__StraightStaircase;

// Struct for a sequence of bosdyn_msgs__msg__StraightStaircase.
typedef struct bosdyn_msgs__msg__StraightStaircase__Sequence
{
  bosdyn_msgs__msg__StraightStaircase * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__StraightStaircase__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__STRAIGHT_STAIRCASE__STRUCT_H_
