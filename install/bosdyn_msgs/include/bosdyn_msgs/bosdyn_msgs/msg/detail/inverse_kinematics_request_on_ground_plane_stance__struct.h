// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/InverseKinematicsRequestOnGroundPlaneStance.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__INVERSE_KINEMATICS_REQUEST_ON_GROUND_PLANE_STANCE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__INVERSE_KINEMATICS_REQUEST_ON_GROUND_PLANE_STANCE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'scene_tform_ground'
#include "geometry_msgs/msg/detail/pose__struct.h"

/// Struct defined in msg/InverseKinematicsRequestOnGroundPlaneStance in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__InverseKinematicsRequestOnGroundPlaneStance
{
  /// The feet will be constrained to lie on the XY-plane of the ground frame. If unspecified
  /// the ground plane will be the robot's current ground plane estimate.
  geometry_msgs__msg__Pose scene_tform_ground;
  bool scene_tform_ground_is_set;
} bosdyn_msgs__msg__InverseKinematicsRequestOnGroundPlaneStance;

// Struct for a sequence of bosdyn_msgs__msg__InverseKinematicsRequestOnGroundPlaneStance.
typedef struct bosdyn_msgs__msg__InverseKinematicsRequestOnGroundPlaneStance__Sequence
{
  bosdyn_msgs__msg__InverseKinematicsRequestOnGroundPlaneStance * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__InverseKinematicsRequestOnGroundPlaneStance__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__INVERSE_KINEMATICS_REQUEST_ON_GROUND_PLANE_STANCE__STRUCT_H_
