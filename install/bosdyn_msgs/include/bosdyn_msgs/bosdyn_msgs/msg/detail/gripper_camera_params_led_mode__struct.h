// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/GripperCameraParamsLedMode.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__GRIPPER_CAMERA_PARAMS_LED_MODE__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__GRIPPER_CAMERA_PARAMS_LED_MODE__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'LED_MODE_UNKNOWN'.
/**
  * LED_MODE_UNKNOWN should not be used.
 */
enum
{
  bosdyn_msgs__msg__GripperCameraParamsLedMode__LED_MODE_UNKNOWN = 0
};

/// Constant 'LED_MODE_OFF'.
/**
  * Off
 */
enum
{
  bosdyn_msgs__msg__GripperCameraParamsLedMode__LED_MODE_OFF = 1
};

/// Constant 'LED_MODE_TORCH'.
/**
  * Constantly on. Brightness level can be set in the led_torch_brightness field.
 */
enum
{
  bosdyn_msgs__msg__GripperCameraParamsLedMode__LED_MODE_TORCH = 2
};

/// Struct defined in msg/GripperCameraParamsLedMode in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__GripperCameraParamsLedMode
{
  int8_t value;
} bosdyn_msgs__msg__GripperCameraParamsLedMode;

// Struct for a sequence of bosdyn_msgs__msg__GripperCameraParamsLedMode.
typedef struct bosdyn_msgs__msg__GripperCameraParamsLedMode__Sequence
{
  bosdyn_msgs__msg__GripperCameraParamsLedMode * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__GripperCameraParamsLedMode__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__GRIPPER_CAMERA_PARAMS_LED_MODE__STRUCT_H_
