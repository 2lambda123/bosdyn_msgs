// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/PoseBounds.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__POSE_BOUNDS__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__POSE_BOUNDS__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Struct defined in msg/PoseBounds in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__PoseBounds
{
  /// Represents an interval in x, y, z and yaw around some center. Some value x
  /// will be within the bounds if  center - x_bounds <= x >= center + x_bounds.
  /// If the values are left at zero, the bounds are considered to be unconstrained.
  /// The center of the bounds is left implicit, and should be whatever this message
  /// is packaged with.
  /// Bounds on the x position in meters.
  double x_bounds;
  /// Bounds on the y position in meters.
  double y_bounds;
  /// Bounds on the z position in meters.
  double z_bounds;
  /// Bounds on the yaw (rotation around z axis) in radians.
  double yaw_bounds;
} bosdyn_msgs__msg__PoseBounds;

// Struct for a sequence of bosdyn_msgs__msg__PoseBounds.
typedef struct bosdyn_msgs__msg__PoseBounds__Sequence
{
  bosdyn_msgs__msg__PoseBounds * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__PoseBounds__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__POSE_BOUNDS__STRUCT_H_
