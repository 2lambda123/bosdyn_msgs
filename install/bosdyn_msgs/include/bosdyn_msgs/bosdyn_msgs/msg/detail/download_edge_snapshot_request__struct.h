// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/DownloadEdgeSnapshotRequest.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__DOWNLOAD_EDGE_SNAPSHOT_REQUEST__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__DOWNLOAD_EDGE_SNAPSHOT_REQUEST__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/request_header__struct.h"
// Member 'edge_snapshot_id'
#include "rosidl_runtime_c/string.h"

/// Struct defined in msg/DownloadEdgeSnapshotRequest in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__DownloadEdgeSnapshotRequest
{
  /// The DownloadEdgeSnapshot request asks for a specific edge snapshot id to
  /// be downloaded. Edge snapshots contain the large sensor data stored in each edge.
  /// Common request header.
  bosdyn_msgs__msg__RequestHeader header;
  bool header_is_set;
  /// ID of the data associated with an edge.
  rosidl_runtime_c__String edge_snapshot_id;
} bosdyn_msgs__msg__DownloadEdgeSnapshotRequest;

// Struct for a sequence of bosdyn_msgs__msg__DownloadEdgeSnapshotRequest.
typedef struct bosdyn_msgs__msg__DownloadEdgeSnapshotRequest__Sequence
{
  bosdyn_msgs__msg__DownloadEdgeSnapshotRequest * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__DownloadEdgeSnapshotRequest__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__DOWNLOAD_EDGE_SNAPSHOT_REQUEST__STRUCT_H_
