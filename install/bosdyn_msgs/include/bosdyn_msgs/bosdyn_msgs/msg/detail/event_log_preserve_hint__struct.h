// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/EventLogPreserveHint.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__EVENT_LOG_PRESERVE_HINT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__EVENT_LOG_PRESERVE_HINT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'LOG_PRESERVE_HINT_UNSET'.
/**
  * If this this is unset, it is equivalent to LOG_PRESERVE_HINT_NORMAL.
 */
enum
{
  bosdyn_msgs__msg__EventLogPreserveHint__LOG_PRESERVE_HINT_UNSET = 0
};

/// Constant 'LOG_PRESERVE_HINT_NORMAL'.
/**
  * Do not change the robot's default log data preservation behavior in response to this
  * event.
 */
enum
{
  bosdyn_msgs__msg__EventLogPreserveHint__LOG_PRESERVE_HINT_NORMAL = 1
};

/// Constant 'LOG_PRESERVE_HINT_PRESERVE'.
/**
  * Request that the robot try to preserve data near the time of this event.
  * Log space on the robot is limited, so this does not guarentee that the data will be
  * preserved.
 */
enum
{
  bosdyn_msgs__msg__EventLogPreserveHint__LOG_PRESERVE_HINT_PRESERVE = 2
};

/// Struct defined in msg/EventLogPreserveHint in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__EventLogPreserveHint
{
  int8_t value;
} bosdyn_msgs__msg__EventLogPreserveHint;

// Struct for a sequence of bosdyn_msgs__msg__EventLogPreserveHint.
typedef struct bosdyn_msgs__msg__EventLogPreserveHint__Sequence
{
  bosdyn_msgs__msg__EventLogPreserveHint * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__EventLogPreserveHint__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__EVENT_LOG_PRESERVE_HINT__STRUCT_H_
