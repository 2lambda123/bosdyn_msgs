// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/ArmCommandFeedbackOneOfFeedback.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__ARM_COMMAND_FEEDBACK_ONE_OF_FEEDBACK__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__ARM_COMMAND_FEEDBACK_ONE_OF_FEEDBACK__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'FEEDBACK_NOT_SET'.
enum
{
  bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback__FEEDBACK_NOT_SET = 0
};

/// Constant 'FEEDBACK_ARM_CARTESIAN_FEEDBACK_SET'.
enum
{
  bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback__FEEDBACK_ARM_CARTESIAN_FEEDBACK_SET = 1
};

/// Constant 'FEEDBACK_ARM_JOINT_MOVE_FEEDBACK_SET'.
enum
{
  bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback__FEEDBACK_ARM_JOINT_MOVE_FEEDBACK_SET = 2
};

/// Constant 'FEEDBACK_NAMED_ARM_POSITION_FEEDBACK_SET'.
enum
{
  bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback__FEEDBACK_NAMED_ARM_POSITION_FEEDBACK_SET = 3
};

/// Constant 'FEEDBACK_ARM_VELOCITY_FEEDBACK_SET'.
enum
{
  bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback__FEEDBACK_ARM_VELOCITY_FEEDBACK_SET = 4
};

/// Constant 'FEEDBACK_ARM_GAZE_FEEDBACK_SET'.
enum
{
  bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback__FEEDBACK_ARM_GAZE_FEEDBACK_SET = 5
};

/// Constant 'FEEDBACK_ARM_STOP_FEEDBACK_SET'.
enum
{
  bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback__FEEDBACK_ARM_STOP_FEEDBACK_SET = 6
};

/// Constant 'FEEDBACK_ARM_DRAG_FEEDBACK_SET'.
enum
{
  bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback__FEEDBACK_ARM_DRAG_FEEDBACK_SET = 7
};

/// Constant 'FEEDBACK_ARM_IMPEDANCE_FEEDBACK_SET'.
enum
{
  bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback__FEEDBACK_ARM_IMPEDANCE_FEEDBACK_SET = 8
};

// Include directives for member types
// Member 'arm_cartesian_feedback'
#include "bosdyn_msgs/msg/detail/arm_cartesian_command_feedback__struct.h"
// Member 'arm_joint_move_feedback'
#include "bosdyn_msgs/msg/detail/arm_joint_move_command_feedback__struct.h"
// Member 'named_arm_position_feedback'
#include "bosdyn_msgs/msg/detail/named_arm_positions_command_feedback__struct.h"
// Member 'arm_velocity_feedback'
#include "bosdyn_msgs/msg/detail/arm_velocity_command_feedback__struct.h"
// Member 'arm_gaze_feedback'
#include "bosdyn_msgs/msg/detail/gaze_command_feedback__struct.h"
// Member 'arm_stop_feedback'
#include "bosdyn_msgs/msg/detail/arm_stop_command_feedback__struct.h"
// Member 'arm_drag_feedback'
#include "bosdyn_msgs/msg/detail/arm_drag_command_feedback__struct.h"
// Member 'arm_impedance_feedback'
#include "bosdyn_msgs/msg/detail/arm_impedance_command_feedback__struct.h"

/// Struct defined in msg/ArmCommandFeedbackOneOfFeedback in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback
{
  /// ONEOF MESSAGE  Only one of the following can be set
  /// Feedback for the end-effector Cartesian command.
  bosdyn_msgs__msg__ArmCartesianCommandFeedback arm_cartesian_feedback;
  /// Feedback for the joint move command.
  bosdyn_msgs__msg__ArmJointMoveCommandFeedback arm_joint_move_feedback;
  /// Feedback for the named position move command.
  bosdyn_msgs__msg__NamedArmPositionsCommandFeedback named_arm_position_feedback;
  bosdyn_msgs__msg__ArmVelocityCommandFeedback arm_velocity_feedback;
  /// Feedback for the gaze command.
  bosdyn_msgs__msg__GazeCommandFeedback arm_gaze_feedback;
  bosdyn_msgs__msg__ArmStopCommandFeedback arm_stop_feedback;
  /// Feedback for the drag command.
  bosdyn_msgs__msg__ArmDragCommandFeedback arm_drag_feedback;
  /// Feedback for impedance command.
  bosdyn_msgs__msg__ArmImpedanceCommandFeedback arm_impedance_feedback;
  /// Only one of the above can be filled in.  Use the enum to choose which.
  int8_t feedback_choice;
} bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback;

// Struct for a sequence of bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback.
typedef struct bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback__Sequence
{
  bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__ArmCommandFeedbackOneOfFeedback__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__ARM_COMMAND_FEEDBACK_ONE_OF_FEEDBACK__STRUCT_H_
