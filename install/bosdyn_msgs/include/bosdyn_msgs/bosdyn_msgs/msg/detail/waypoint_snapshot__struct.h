// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/WaypointSnapshot.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__WAYPOINT_SNAPSHOT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__WAYPOINT_SNAPSHOT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'id'
// Member 'version_id'
#include "rosidl_runtime_c/string.h"
// Member 'images'
#include "bosdyn_msgs/msg/detail/image_response__struct.h"
// Member 'point_cloud'
#include "bosdyn_msgs/msg/detail/point_cloud__struct.h"
// Member 'objects'
#include "bosdyn_msgs/msg/detail/world_object__struct.h"
// Member 'robot_state'
#include "bosdyn_msgs/msg/detail/robot_state__struct.h"
// Member 'robot_local_grids'
#include "bosdyn_msgs/msg/detail/local_grid__struct.h"
// Member 'body_tform_remote_point_cloud_sensor'
#include "geometry_msgs/msg/detail/pose__struct.h"
// Member 'payloads'
#include "bosdyn_msgs/msg/detail/payload__struct.h"
// Member 'robot_id'
#include "bosdyn_msgs/msg/detail/robot_id__struct.h"
// Member 'recording_started_on'
#include "builtin_interfaces/msg/detail/time__struct.h"

/// Struct defined in msg/WaypointSnapshot in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__WaypointSnapshot
{
  /// Relevant data collected at the waypoint.
  /// May be used for localization or automatically generating annotations, for example.
  /// Should be indexed by a waypoint's "snapshot_id" field.
  /// Identifier of this snapshot.
  /// Snapshots are immutable -- if any of the other fields change, this ID must also change.
  rosidl_runtime_c__String id;
  /// Any images captured at the waypoint.
  bosdyn_msgs__msg__ImageResponse__Sequence images;
  /// Aggregated point cloud data.
  bosdyn_msgs__msg__PointCloud point_cloud;
  bool point_cloud_is_set;
  /// Perception objects seen at snapshot time.
  bosdyn_msgs__msg__WorldObject__Sequence objects;
  /// Full robot state during snapshot.
  bosdyn_msgs__msg__RobotState robot_state;
  bool robot_state_is_set;
  /// Robot grid data.
  bosdyn_msgs__msg__LocalGrid__Sequence robot_local_grids;
  /// If true, the point cloud of this snapshot has been processed.
  bool is_point_cloud_processed;
  /// If this snapshot is a modified version of the raw snapshot with the given ID (for example, it
  /// has been processed), a new unique ID will we assigned to this field. If the field is empty,
  /// this is the raw version of the snapshot.
  rosidl_runtime_c__String version_id;
  /// If true, the point cloud contains data from a remote point cloud service,
  /// such as LIDAR.
  bool has_remote_point_cloud_sensor;
  /// Transform from the robot body to the remote point cloud sensor's
  /// reference frame.
  geometry_msgs__msg__Pose body_tform_remote_point_cloud_sensor;
  bool body_tform_remote_point_cloud_sensor_is_set;
  /// Defines the payloads attached to the robot at this waypoint.
  bosdyn_msgs__msg__Payload__Sequence payloads;
  /// Identifiers (software, nickname, etc.) of the robot that created this waypoint.
  bosdyn_msgs__msg__RobotId robot_id;
  bool robot_id_is_set;
  /// Information about when the recording session started in robot time basis.
  /// This will be filled out by the recording service when StartRecording is called.
  builtin_interfaces__msg__Time recording_started_on;
  bool recording_started_on_is_set;
} bosdyn_msgs__msg__WaypointSnapshot;

// Struct for a sequence of bosdyn_msgs__msg__WaypointSnapshot.
typedef struct bosdyn_msgs__msg__WaypointSnapshot__Sequence
{
  bosdyn_msgs__msg__WaypointSnapshot * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__WaypointSnapshot__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__WAYPOINT_SNAPSHOT__STRUCT_H_
