// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/ServiceEntry.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SERVICE_ENTRY__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SERVICE_ENTRY__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'name'
// Member 'authority'
// Member 'permission_required'
// Member 'host_payload_guid'
#include "rosidl_runtime_c/string.h"
// Member 'service_type'
#include "bosdyn_msgs/msg/detail/service_entry_one_of_service_type__struct.h"
// Member 'last_update'
#include "builtin_interfaces/msg/detail/time__struct.h"

/// Struct defined in msg/ServiceEntry in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__ServiceEntry
{
  /// A message representing a discoverable service.  By definition, all services
  /// discoverable by this system are expected to be grpc "services" provided by
  /// some server.
  /// The unique user-friendly name of this service.
  rosidl_runtime_c__String name;
  bosdyn_msgs__msg__ServiceEntryOneOfServiceType service_type;
  /// Information used to route to the desired Service. Can either be a full address
  /// (aService.spot.robot) or just a DNS label that will be automatically converted to an
  /// address (aService).
  rosidl_runtime_c__String authority;
  /// Last update time in robot timebase for this service record. This serves as the time of
  /// the last heartbeat to the robot.
  builtin_interfaces__msg__Time last_update;
  bool last_update_is_set;
  /// If 'user_token_required' field is true, any requests to this service must contain
  /// a user token for the machine.  Requests without a user token will result in a
  /// 401. Most services will want to require a user_token, but ones like auth_service
  /// do not.
  bool user_token_required;
  /// If 'permission_required' field is non-empty, any requests to this service must
  /// have the same string in the "per" claim of the user token.
  rosidl_runtime_c__String permission_required;
  /// Number of seconds to wait between heartbeats before assuming service in no longer live
  /// If unset (0) liveness checks will be disabled for this service.
  double liveness_timeout_secs;
  /// The GUID of the payload that this service was registered from. An empty string represents a
  /// service that was registered via a client using standard user credentials or internal to the
  /// robot. This value is set automatically based on the user token and cannot be set or updated
  /// via the API, so it should not be populated by the client at registration time.
  rosidl_runtime_c__String host_payload_guid;
} bosdyn_msgs__msg__ServiceEntry;

// Struct for a sequence of bosdyn_msgs__msg__ServiceEntry.
typedef struct bosdyn_msgs__msg__ServiceEntry__Sequence
{
  bosdyn_msgs__msg__ServiceEntry * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__ServiceEntry__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SERVICE_ENTRY__STRUCT_H_
