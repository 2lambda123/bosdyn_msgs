// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/SE2VelocityLimit.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__SE2_VELOCITY_LIMIT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__SE2_VELOCITY_LIMIT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'max_vel'
// Member 'min_vel'
#include "bosdyn_msgs/msg/detail/se2_velocity__struct.h"

/// Struct defined in msg/SE2VelocityLimit in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__SE2VelocityLimit
{
  /// Geometric primitive to couple minimum and maximum SE2Velocities in a single message.
  /// If set, limits the maximum velocity.
  bosdyn_msgs__msg__SE2Velocity max_vel;
  bool max_vel_is_set;
  /// If set, limits the minimum velocity.
  bosdyn_msgs__msg__SE2Velocity min_vel;
  bool min_vel_is_set;
} bosdyn_msgs__msg__SE2VelocityLimit;

// Struct for a sequence of bosdyn_msgs__msg__SE2VelocityLimit.
typedef struct bosdyn_msgs__msg__SE2VelocityLimit__Sequence
{
  bosdyn_msgs__msg__SE2VelocityLimit * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__SE2VelocityLimit__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__SE2_VELOCITY_LIMIT__STRUCT_H_
