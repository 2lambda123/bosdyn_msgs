// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/RegisterServiceRequest.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__REGISTER_SERVICE_REQUEST__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__REGISTER_SERVICE_REQUEST__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

// Include directives for member types
// Member 'header'
#include "bosdyn_msgs/msg/detail/request_header__struct.h"
// Member 'endpoint'
#include "bosdyn_msgs/msg/detail/endpoint__struct.h"
// Member 'service_entry'
#include "bosdyn_msgs/msg/detail/service_entry__struct.h"

/// Struct defined in msg/RegisterServiceRequest in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__RegisterServiceRequest
{
  /// The RegisterService request message sends the service's entry and endpoint to the robot's directory.
  /// This Request serves as a heartbeat to the Directory.
  /// Common request header.
  bosdyn_msgs__msg__RequestHeader header;
  bool header_is_set;
  /// The endpoint at which this service may be contacted.
  bosdyn_msgs__msg__Endpoint endpoint;
  bool endpoint_is_set;
  /// The service to create. The name must not match any existing service.
  bosdyn_msgs__msg__ServiceEntry service_entry;
  bool service_entry_is_set;
} bosdyn_msgs__msg__RegisterServiceRequest;

// Struct for a sequence of bosdyn_msgs__msg__RegisterServiceRequest.
typedef struct bosdyn_msgs__msg__RegisterServiceRequest__Sequence
{
  bosdyn_msgs__msg__RegisterServiceRequest * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__RegisterServiceRequest__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__REGISTER_SERVICE_REQUEST__STRUCT_H_
