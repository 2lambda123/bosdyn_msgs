// generated from rosidl_generator_c/resource/idl__struct.h.em
// with input from bosdyn_msgs:msg/AllowableOrientationOneOfConstraint.idl
// generated code does not contain a copyright notice

#ifndef BOSDYN_MSGS__MSG__DETAIL__ALLOWABLE_ORIENTATION_ONE_OF_CONSTRAINT__STRUCT_H_
#define BOSDYN_MSGS__MSG__DETAIL__ALLOWABLE_ORIENTATION_ONE_OF_CONSTRAINT__STRUCT_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>


// Constants defined in the message

/// Constant 'CONSTRAINT_NOT_SET'.
enum
{
  bosdyn_msgs__msg__AllowableOrientationOneOfConstraint__CONSTRAINT_NOT_SET = 0
};

/// Constant 'CONSTRAINT_ROTATION_WITH_TOLERANCE_SET'.
enum
{
  bosdyn_msgs__msg__AllowableOrientationOneOfConstraint__CONSTRAINT_ROTATION_WITH_TOLERANCE_SET = 1
};

/// Constant 'CONSTRAINT_VECTOR_ALIGNMENT_WITH_TOLERANCE_SET'.
enum
{
  bosdyn_msgs__msg__AllowableOrientationOneOfConstraint__CONSTRAINT_VECTOR_ALIGNMENT_WITH_TOLERANCE_SET = 2
};

/// Constant 'CONSTRAINT_SQUEEZE_GRASP_SET'.
enum
{
  bosdyn_msgs__msg__AllowableOrientationOneOfConstraint__CONSTRAINT_SQUEEZE_GRASP_SET = 3
};

// Include directives for member types
// Member 'rotation_with_tolerance'
#include "bosdyn_msgs/msg/detail/rotation_with_tolerance__struct.h"
// Member 'vector_alignment_with_tolerance'
#include "bosdyn_msgs/msg/detail/vector_alignment_with_tolerance__struct.h"
// Member 'squeeze_grasp'
#include "bosdyn_msgs/msg/detail/squeeze_grasp__struct.h"

/// Struct defined in msg/AllowableOrientationOneOfConstraint in the package bosdyn_msgs.
/**
  * AUTOMATICALLY GENERATED BY PROTO CONVERSION
 */
typedef struct bosdyn_msgs__msg__AllowableOrientationOneOfConstraint
{
  /// ONEOF MESSAGE  Only one of the following can be set
  bosdyn_msgs__msg__RotationWithTolerance rotation_with_tolerance;
  bosdyn_msgs__msg__VectorAlignmentWithTolerance vector_alignment_with_tolerance;
  bosdyn_msgs__msg__SqueezeGrasp squeeze_grasp;
  /// Only one of the above can be filled in.  Use the enum to choose which.
  int8_t constraint_choice;
} bosdyn_msgs__msg__AllowableOrientationOneOfConstraint;

// Struct for a sequence of bosdyn_msgs__msg__AllowableOrientationOneOfConstraint.
typedef struct bosdyn_msgs__msg__AllowableOrientationOneOfConstraint__Sequence
{
  bosdyn_msgs__msg__AllowableOrientationOneOfConstraint * data;
  /// The number of valid items in data
  size_t size;
  /// The number of allocated items in data
  size_t capacity;
} bosdyn_msgs__msg__AllowableOrientationOneOfConstraint__Sequence;

#ifdef __cplusplus
}
#endif

#endif  // BOSDYN_MSGS__MSG__DETAIL__ALLOWABLE_ORIENTATION_ONE_OF_CONSTRAINT__STRUCT_H_
